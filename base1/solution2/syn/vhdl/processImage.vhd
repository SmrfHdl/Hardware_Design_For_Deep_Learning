-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processImage is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inStream_V_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_V_data_V_empty_n : IN STD_LOGIC;
    inStream_V_data_V_read : OUT STD_LOGIC;
    inStream_V_keep_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_V_keep_V_empty_n : IN STD_LOGIC;
    inStream_V_keep_V_read : OUT STD_LOGIC;
    inStream_V_strb_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_V_strb_V_empty_n : IN STD_LOGIC;
    inStream_V_strb_V_read : OUT STD_LOGIC;
    inStream_V_user_V_dout : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_V_user_V_empty_n : IN STD_LOGIC;
    inStream_V_user_V_read : OUT STD_LOGIC;
    inStream_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_V_last_V_empty_n : IN STD_LOGIC;
    inStream_V_last_V_read : OUT STD_LOGIC;
    inStream_V_id_V_dout : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_V_id_V_empty_n : IN STD_LOGIC;
    inStream_V_id_V_read : OUT STD_LOGIC;
    inStream_V_dest_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    inStream_V_dest_V_empty_n : IN STD_LOGIC;
    inStream_V_dest_V_read : OUT STD_LOGIC;
    outStream_V_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_V_data_V_full_n : IN STD_LOGIC;
    outStream_V_data_V_write : OUT STD_LOGIC;
    outStream_V_keep_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_V_keep_V_full_n : IN STD_LOGIC;
    outStream_V_keep_V_write : OUT STD_LOGIC;
    outStream_V_strb_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_V_strb_V_full_n : IN STD_LOGIC;
    outStream_V_strb_V_write : OUT STD_LOGIC;
    outStream_V_user_V_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_V_user_V_full_n : IN STD_LOGIC;
    outStream_V_user_V_write : OUT STD_LOGIC;
    outStream_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_V_last_V_full_n : IN STD_LOGIC;
    outStream_V_last_V_write : OUT STD_LOGIC;
    outStream_V_id_V_din : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_V_id_V_full_n : IN STD_LOGIC;
    outStream_V_id_V_write : OUT STD_LOGIC;
    outStream_V_dest_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    outStream_V_dest_V_full_n : IN STD_LOGIC;
    outStream_V_dest_V_write : OUT STD_LOGIC;
    kernel_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_5 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_6 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_7 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_8 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of processImage is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processImage,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.283000,HLS_SYN_LAT=786953,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=5,HLS_SYN_FF=1179,HLS_SYN_LUT=1461,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv19_40001 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv19_201 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_201 : STD_LOGIC_VECTOR (9 downto 0) := "1000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal inStream_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond2_reg_897 : STD_LOGIC_VECTOR (0 downto 0);
    signal inStream_V_keep_V_blk_n : STD_LOGIC;
    signal inStream_V_strb_V_blk_n : STD_LOGIC;
    signal inStream_V_user_V_blk_n : STD_LOGIC;
    signal inStream_V_last_V_blk_n : STD_LOGIC;
    signal inStream_V_id_V_blk_n : STD_LOGIC;
    signal inStream_V_dest_V_blk_n : STD_LOGIC;
    signal outStream_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_13_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_938_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal exitcond_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_keep_V_blk_n : STD_LOGIC;
    signal outStream_V_strb_V_blk_n : STD_LOGIC;
    signal outStream_V_user_V_blk_n : STD_LOGIC;
    signal outStream_V_last_V_blk_n : STD_LOGIC;
    signal outStream_V_id_V_blk_n : STD_LOGIC;
    signal outStream_V_dest_V_blk_n : STD_LOGIC;
    signal tmp_id_V_1_reg_371 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_user_V_1_reg_384 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_strb_V_1_reg_397 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_1_reg_410 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_1_reg_423 : STD_LOGIC_VECTOR (5 downto 0);
    signal idxRow_reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxCol_assign_reg_447 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_assign_reg_458 : STD_LOGIC_VECTOR (31 downto 0);
    signal countWait_reg_470 : STD_LOGIC_VECTOR (18 downto 0);
    signal lineBuff_val_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_493 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal or_cond_reg_916 : STD_LOGIC_VECTOR (0 downto 0);
    signal lineBuff_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal inStream_V_id_V0_status : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exitcond2_reg_897_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_916_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_reg_897_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_901 : STD_LOGIC_VECTOR (63 downto 0);
    signal lineBuff_val_1_addr_reg_906 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_addr_reg_911 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_916_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_922 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxCol_fu_554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxCol_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_1_fu_566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_1_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_938_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_reg_942 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_reg_942_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_reg_942_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_reg_948 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_reg_948_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_reg_948_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_954 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_user_V_reg_954_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_user_V_reg_954_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_id_V_reg_960 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_id_V_reg_960_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_id_V_reg_960_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_reg_966 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_dest_V_reg_966_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_dest_V_reg_966_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal outStream_V_id_V1_status : STD_LOGIC;
    signal ap_block_state10_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal kernel_0_read_reg_977 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_1_read_reg_987 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_assign_1_0_2_fu_625_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_1_0_2_reg_992 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_read_reg_997 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_3_read_reg_1007 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_3_read_reg_1007_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_4_read_reg_1017 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_5_read_reg_1022 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_6_read_reg_1032 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_7_read_reg_1042 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_8_read_reg_1047 : STD_LOGIC_VECTOR (7 downto 0);
    signal idxCol_1_fu_638_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxCol_1_reg_1052 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_2_fu_644_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_2_reg_1057 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_fu_651_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal phitmp_reg_1062 : STD_LOGIC_VECTOR (18 downto 0);
    signal window_val_0_0_fu_664_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_0_reg_1067 : STD_LOGIC_VECTOR (15 downto 0);
    signal lineBuff_val_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_load_1_reg_1077 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_fu_683_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_1_reg_1082 : STD_LOGIC_VECTOR (15 downto 0);
    signal lineBuff_val_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_load_1_reg_1092 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_load_2_reg_1097 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_load_3_reg_1107 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_2_fu_721_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_2_reg_1112 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_866_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_reg_1117 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_859_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_reg_1122 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_740_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp7_fu_740_p2 : signal is "no";
    signal tmp7_reg_1127 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_874_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_reg_1132 : STD_LOGIC_VECTOR (15 downto 0);
    signal valOutput_fu_754_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal valOutput_reg_1137 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_1142 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1147 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_data_V_fu_840_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_reg_1152 : STD_LOGIC_VECTOR (7 downto 0);
    signal countWait_2_fu_853_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state12 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal lineBuff_val_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_0_ce0 : STD_LOGIC;
    signal lineBuff_val_0_we0 : STD_LOGIC;
    signal lineBuff_val_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_0_ce1 : STD_LOGIC;
    signal lineBuff_val_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_1_ce0 : STD_LOGIC;
    signal lineBuff_val_1_we0 : STD_LOGIC;
    signal lineBuff_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_1_ce1 : STD_LOGIC;
    signal lineBuff_val_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_ce0 : STD_LOGIC;
    signal lineBuff_val_2_we0 : STD_LOGIC;
    signal lineBuff_val_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_ce1 : STD_LOGIC;
    signal ap_phi_mux_idxRow_phi_fu_440_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_idxCol_assign_phi_fu_451_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_countWait_phi_fu_474_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal countWait_1_reg_482 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_3_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_0_1_fu_618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_0_2_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal inStream_V_id_V0_update : STD_LOGIC;
    signal outStream_V_id_V1_update : STD_LOGIC;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal tmp_2_fu_510_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_fu_526_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxRow_2_fu_560_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_fu_612_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_1_fu_631_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_0_0_fu_664_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_0_fu_664_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_fu_683_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_fu_683_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_fu_708_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_fu_708_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_2_fu_721_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_2_fu_721_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_881_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_889_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_750_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp4_fu_750_p2 : signal is "no";
    signal tmp_7_tr_fu_777_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg_fu_780_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_786_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_3_cast_fu_796_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_fu_800_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_fu_803_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_10_cast_fu_809_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal valOutput_1_fu_813_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_11_fu_824_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_820_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp8_fu_832_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_859_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_866_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_866_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_874_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_881_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_889_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_859_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_866_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_874_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_881_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_889_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_0_fu_664_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_1_fu_683_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_1_fu_708_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_2_fu_721_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_319 : BOOLEAN;
    signal ap_condition_337 : BOOLEAN;

    component processImage_mac_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component processImage_mac_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component processImage_linebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    lineBuff_val_0_U : component processImage_linebkb
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lineBuff_val_0_address0,
        ce0 => lineBuff_val_0_ce0,
        we0 => lineBuff_val_0_we0,
        d0 => lineBuff_val_1_q0,
        q0 => lineBuff_val_0_q0,
        address1 => lineBuff_val_0_address1,
        ce1 => lineBuff_val_0_ce1,
        q1 => lineBuff_val_0_q1);

    lineBuff_val_1_U : component processImage_linebkb
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lineBuff_val_1_address0,
        ce0 => lineBuff_val_1_ce0,
        we0 => lineBuff_val_1_we0,
        d0 => lineBuff_val_2_q0,
        q0 => lineBuff_val_1_q0,
        address1 => lineBuff_val_1_address1,
        ce1 => lineBuff_val_1_ce1,
        q1 => lineBuff_val_1_q1);

    lineBuff_val_2_U : component processImage_linebkb
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lineBuff_val_2_address0,
        ce0 => lineBuff_val_2_ce0,
        we0 => lineBuff_val_2_we0,
        d0 => inStream_V_data_V_dout,
        q0 => lineBuff_val_2_q0,
        address1 => lineBuff_val_2_address1,
        ce1 => lineBuff_val_2_ce1,
        q1 => lineBuff_val_2_q1);

    processImage_mac_eOg_U1 : component processImage_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_1_read_reg_987,
        din1 => grp_fu_859_p1,
        din2 => window_val_0_0_reg_1067,
        dout => grp_fu_859_p3);

    processImage_mac_eOg_U2 : component processImage_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_6_read_reg_1032,
        din1 => grp_fu_866_p1,
        din2 => grp_fu_866_p2,
        dout => grp_fu_866_p3);

    processImage_mac_eOg_U3 : component processImage_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_2_read_reg_997,
        din1 => grp_fu_874_p1,
        din2 => window_val_2_2_reg_1112,
        dout => grp_fu_874_p3);

    processImage_mac_eOg_U4 : component processImage_mac_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_5_read_reg_1022,
        din1 => grp_fu_881_p1,
        din2 => window_val_1_1_reg_1082,
        dout => grp_fu_881_p3);

    processImage_mac_fYi_U5 : component processImage_mac_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_3_read_reg_1007_pp0_iter1_reg,
        din1 => grp_fu_889_p1,
        din2 => tmp2_reg_1132,
        dout => grp_fu_889_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    countWait_1_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                countWait_1_reg_482 <= ap_const_lv10_0;
            elsif ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then 
                countWait_1_reg_482 <= countWait_2_fu_853_p2;
            end if; 
        end if;
    end process;

    countWait_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
                countWait_reg_470 <= phitmp_reg_1062;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                countWait_reg_470 <= ap_const_lv19_1;
            end if; 
        end if;
    end process;

    idxCol_assign_reg_447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
                idxCol_assign_reg_447 <= idxCol_1_reg_1052;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                idxCol_assign_reg_447 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    idxRow_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
                idxRow_reg_436 <= idxRow_1_reg_933;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                idxRow_reg_436 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    pixConvolved_assign_reg_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond2_reg_897_pp0_iter1_reg = ap_const_lv1_0))) then 
                pixConvolved_assign_reg_458 <= pixConvolved_2_reg_1057;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                pixConvolved_assign_reg_458 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_337)) then 
                    reg_493 <= lineBuff_val_0_q0;
                elsif ((ap_const_boolean_1 = ap_condition_319)) then 
                    reg_493 <= lineBuff_val_0_q1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_cond_reg_916 = ap_const_lv1_1) and (exitcond2_reg_897 = ap_const_lv1_0))) then
                col_assign_1_0_2_reg_992 <= col_assign_1_0_2_fu_625_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond2_reg_897 <= exitcond2_fu_498_p2;
                exitcond2_reg_897_pp0_iter1_reg <= exitcond2_reg_897;
                exitcond2_reg_897_pp0_iter2_reg <= exitcond2_reg_897_pp0_iter1_reg;
                or_cond_reg_916_pp0_iter1_reg <= or_cond_reg_916;
                or_cond_reg_916_pp0_iter2_reg <= or_cond_reg_916_pp0_iter1_reg;
                tmp_13_reg_938_pp0_iter1_reg <= tmp_13_reg_938;
                tmp_13_reg_938_pp0_iter2_reg <= tmp_13_reg_938_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond2_reg_897 = ap_const_lv1_0))) then
                idxCol_1_reg_1052 <= idxCol_1_fu_638_p3;
                phitmp_reg_1062 <= phitmp_fu_651_p2;
                pixConvolved_2_reg_1057 <= pixConvolved_2_fu_644_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_fu_498_p2 = ap_const_lv1_0))) then
                idxCol_reg_928 <= idxCol_fu_554_p2;
                lineBuff_val_1_addr_reg_906 <= tmp_s_fu_504_p1(9 - 1 downto 0);
                lineBuff_val_2_addr_reg_911 <= tmp_s_fu_504_p1(9 - 1 downto 0);
                or_cond_reg_916 <= or_cond_fu_542_p2;
                tmp_12_reg_922 <= tmp_12_fu_548_p2;
                tmp_13_reg_938 <= tmp_13_fu_574_p2;
                    tmp_s_reg_901(31 downto 0) <= tmp_s_fu_504_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_fu_498_p2 = ap_const_lv1_0))) then
                idxRow_1_reg_933 <= idxRow_1_fu_566_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond2_reg_897 = ap_const_lv1_0))) then
                kernel_0_read_reg_977 <= kernel_0;
                kernel_1_read_reg_987 <= kernel_1;
                kernel_2_read_reg_997 <= kernel_2;
                kernel_3_read_reg_1007 <= kernel_3;
                kernel_4_read_reg_1017 <= kernel_4;
                kernel_5_read_reg_1022 <= kernel_5;
                kernel_6_read_reg_1032 <= kernel_6;
                kernel_7_read_reg_1042 <= kernel_7;
                kernel_8_read_reg_1047 <= kernel_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                kernel_3_read_reg_1007_pp0_iter1_reg <= kernel_3_read_reg_1007;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_916 = ap_const_lv1_1) and (exitcond2_reg_897 = ap_const_lv1_0))) then
                lineBuff_val_1_load_1_reg_1077 <= lineBuff_val_1_q1;
                lineBuff_val_2_load_1_reg_1092 <= lineBuff_val_2_q1;
                lineBuff_val_2_load_2_reg_1097 <= lineBuff_val_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_cond_reg_916_pp0_iter1_reg = ap_const_lv1_1) and (exitcond2_reg_897_pp0_iter1_reg = ap_const_lv1_0))) then
                lineBuff_val_1_load_3_reg_1107 <= lineBuff_val_1_q1;
                tmp1_reg_1122 <= grp_fu_859_p3;
                tmp8_reg_1117 <= grp_fu_866_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_cond_reg_916_pp0_iter1_reg = ap_const_lv1_1) and (exitcond2_reg_897_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp2_reg_1132 <= grp_fu_874_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_cond_reg_916_pp0_iter1_reg = ap_const_lv1_1) and (exitcond2_reg_897_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp7_reg_1127 <= tmp7_fu_740_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_916_pp0_iter1_reg = ap_const_lv1_1) and (exitcond2_reg_897_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_5_reg_1142 <= valOutput_fu_754_p2(15 downto 15);
                tmp_7_reg_1147 <= valOutput_fu_754_p2(15 downto 3);
                valOutput_reg_1137 <= valOutput_fu_754_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_897_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_V_reg_1152 <= tmp_data_V_fu_840_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond2_reg_897_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_dest_V_1_reg_423 <= tmp_dest_V_reg_966_pp0_iter2_reg;
                tmp_id_V_1_reg_371 <= tmp_id_V_reg_960_pp0_iter2_reg;
                tmp_keep_V_1_reg_410 <= tmp_keep_V_reg_942_pp0_iter2_reg;
                tmp_strb_V_1_reg_397 <= tmp_strb_V_reg_948_pp0_iter2_reg;
                tmp_user_V_1_reg_384 <= tmp_user_V_reg_954_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_897 = ap_const_lv1_0))) then
                tmp_dest_V_reg_966 <= inStream_V_dest_V_dout;
                tmp_id_V_reg_960 <= inStream_V_id_V_dout;
                tmp_keep_V_reg_942 <= inStream_V_keep_V_dout;
                tmp_strb_V_reg_948 <= inStream_V_strb_V_dout;
                tmp_user_V_reg_954 <= inStream_V_user_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_dest_V_reg_966_pp0_iter1_reg <= tmp_dest_V_reg_966;
                tmp_dest_V_reg_966_pp0_iter2_reg <= tmp_dest_V_reg_966_pp0_iter1_reg;
                tmp_id_V_reg_960_pp0_iter1_reg <= tmp_id_V_reg_960;
                tmp_id_V_reg_960_pp0_iter2_reg <= tmp_id_V_reg_960_pp0_iter1_reg;
                tmp_keep_V_reg_942_pp0_iter1_reg <= tmp_keep_V_reg_942;
                tmp_keep_V_reg_942_pp0_iter2_reg <= tmp_keep_V_reg_942_pp0_iter1_reg;
                tmp_strb_V_reg_948_pp0_iter1_reg <= tmp_strb_V_reg_948;
                tmp_strb_V_reg_948_pp0_iter2_reg <= tmp_strb_V_reg_948_pp0_iter1_reg;
                tmp_user_V_reg_954_pp0_iter1_reg <= tmp_user_V_reg_954;
                tmp_user_V_reg_954_pp0_iter2_reg <= tmp_user_V_reg_954_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_916 = ap_const_lv1_1) and (exitcond2_reg_897 = ap_const_lv1_0))) then
                window_val_0_0_reg_1067 <= window_val_0_0_fu_664_p2;
                window_val_1_1_reg_1082 <= window_val_1_1_fu_683_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_cond_reg_916_pp0_iter1_reg = ap_const_lv1_1) and (exitcond2_reg_897_pp0_iter1_reg = ap_const_lv1_0))) then
                window_val_2_2_reg_1112 <= window_val_2_2_fu_721_p2;
            end if;
        end if;
    end process;
    tmp_s_reg_901(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_CS_fsm_state12, exitcond_fu_847_p2, ap_enable_reg_pp0_iter1, exitcond2_fu_498_p2, outStream_V_id_V1_status, ap_block_pp0_stage0_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(4);
    ap_CS_fsm_state12 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond2_reg_897, inStream_V_id_V0_status)
    begin
                ap_block_pp0_stage1_11001 <= ((inStream_V_id_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_897 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond2_reg_897, inStream_V_id_V0_status)
    begin
                ap_block_pp0_stage1_subdone <= ((inStream_V_id_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_897 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, outStream_V_id_V1_status)
    begin
                ap_block_pp0_stage2_01001 <= ((outStream_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, outStream_V_id_V1_status)
    begin
                ap_block_pp0_stage2_11001 <= ((outStream_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, outStream_V_id_V1_status)
    begin
                ap_block_pp0_stage2_subdone <= ((outStream_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_block_state10_pp0_stage2_iter2_assign_proc : process(tmp_13_reg_938_pp0_iter2_reg, outStream_V_id_V1_status)
    begin
                ap_block_state10_pp0_stage2_iter2 <= ((outStream_V_id_V1_status = ap_const_logic_0) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_block_state12_assign_proc : process(exitcond_fu_847_p2, outStream_V_id_V1_status)
    begin
                ap_block_state12 <= ((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(exitcond2_reg_897, inStream_V_id_V0_status)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((inStream_V_id_V0_status = ap_const_logic_0) and (exitcond2_reg_897 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_319_assign_proc : process(exitcond2_reg_897, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, or_cond_reg_916)
    begin
                ap_condition_319 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_916 = ap_const_lv1_1) and (exitcond2_reg_897 = ap_const_lv1_0));
    end process;


    ap_condition_337_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, exitcond2_reg_897_pp0_iter1_reg, or_cond_reg_916_pp0_iter1_reg)
    begin
                ap_condition_337 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_cond_reg_916_pp0_iter1_reg = ap_const_lv1_1) and (exitcond2_reg_897_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond2_fu_498_p2)
    begin
        if ((exitcond2_fu_498_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state12, exitcond_fu_847_p2, outStream_V_id_V1_status)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_countWait_phi_fu_474_p4_assign_proc : process(exitcond2_reg_897, countWait_reg_470, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, phitmp_reg_1062, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
            ap_phi_mux_countWait_phi_fu_474_p4 <= phitmp_reg_1062;
        else 
            ap_phi_mux_countWait_phi_fu_474_p4 <= countWait_reg_470;
        end if; 
    end process;


    ap_phi_mux_idxCol_assign_phi_fu_451_p4_assign_proc : process(exitcond2_reg_897, idxCol_assign_reg_447, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, idxCol_1_reg_1052, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
            ap_phi_mux_idxCol_assign_phi_fu_451_p4 <= idxCol_1_reg_1052;
        else 
            ap_phi_mux_idxCol_assign_phi_fu_451_p4 <= idxCol_assign_reg_447;
        end if; 
    end process;


    ap_phi_mux_idxRow_phi_fu_440_p4_assign_proc : process(exitcond2_reg_897, idxRow_reg_436, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, idxRow_1_reg_933, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
            ap_phi_mux_idxRow_phi_fu_440_p4 <= idxRow_1_reg_933;
        else 
            ap_phi_mux_idxRow_phi_fu_440_p4 <= idxRow_reg_436;
        end if; 
    end process;


    ap_phi_mux_pixConvolved_assign_phi_fu_462_p4_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, pixConvolved_assign_reg_458, ap_enable_reg_pp0_iter1, exitcond2_reg_897_pp0_iter1_reg, pixConvolved_2_reg_1057)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond2_reg_897_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 <= pixConvolved_2_reg_1057;
        else 
            ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 <= pixConvolved_assign_reg_458;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, exitcond_fu_847_p2, outStream_V_id_V1_status)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    col_assign_1_0_2_fu_625_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(ap_phi_mux_pixConvolved_assign_phi_fu_462_p4));
    countWait_2_fu_853_p2 <= std_logic_vector(unsigned(countWait_1_reg_482) + unsigned(ap_const_lv10_1));
    exitcond2_fu_498_p2 <= "1" when (ap_phi_mux_countWait_phi_fu_474_p4 = ap_const_lv19_40001) else "0";
    exitcond_fu_847_p2 <= "1" when (countWait_1_reg_482 = ap_const_lv10_201) else "0";
    grp_fu_859_p1 <= grp_fu_859_p10(8 - 1 downto 0);
    grp_fu_859_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_493),16));
    grp_fu_866_p1 <= grp_fu_866_p10(8 - 1 downto 0);
    grp_fu_866_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_2_load_1_reg_1092),16));
    grp_fu_866_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_2_1_fu_708_p0) * signed('0' &window_val_2_1_fu_708_p1))), 16));
    grp_fu_874_p1 <= grp_fu_874_p10(8 - 1 downto 0);
    grp_fu_874_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_493),16));
    grp_fu_881_p1 <= grp_fu_881_p10(8 - 1 downto 0);
    grp_fu_881_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_1_load_3_reg_1107),16));
    grp_fu_889_p1 <= grp_fu_889_p10(8 - 1 downto 0);
    grp_fu_889_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_1_load_1_reg_1077),16));
    icmp3_fu_536_p2 <= "1" when (signed(tmp_4_fu_526_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_fu_520_p2 <= "1" when (signed(tmp_2_fu_510_p4) > signed(ap_const_lv31_0)) else "0";
    idxCol_1_fu_638_p3 <= 
        idxCol_reg_928 when (tmp_12_reg_922(0) = '1') else 
        ap_const_lv32_0;
    idxCol_fu_554_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_idxCol_assign_phi_fu_451_p4));
    idxRow_1_fu_566_p3 <= 
        ap_phi_mux_idxRow_phi_fu_440_p4 when (tmp_12_fu_548_p2(0) = '1') else 
        idxRow_2_fu_560_p2;
    idxRow_2_fu_560_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_idxRow_phi_fu_440_p4));

    inStream_V_data_V_blk_n_assign_proc : process(inStream_V_data_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_897)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond2_reg_897 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_data_V_blk_n <= inStream_V_data_V_empty_n;
        else 
            inStream_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_data_V_read <= inStream_V_id_V0_update;

    inStream_V_dest_V_blk_n_assign_proc : process(inStream_V_dest_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_897)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond2_reg_897 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_dest_V_blk_n <= inStream_V_dest_V_empty_n;
        else 
            inStream_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_dest_V_read <= inStream_V_id_V0_update;
    inStream_V_id_V0_status <= (inStream_V_user_V_empty_n and inStream_V_strb_V_empty_n and inStream_V_last_V_empty_n and inStream_V_keep_V_empty_n and inStream_V_id_V_empty_n and inStream_V_dest_V_empty_n and inStream_V_data_V_empty_n);

    inStream_V_id_V0_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_reg_897, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
            inStream_V_id_V0_update <= ap_const_logic_1;
        else 
            inStream_V_id_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_id_V_blk_n_assign_proc : process(inStream_V_id_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_897)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond2_reg_897 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_id_V_blk_n <= inStream_V_id_V_empty_n;
        else 
            inStream_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_id_V_read <= inStream_V_id_V0_update;

    inStream_V_keep_V_blk_n_assign_proc : process(inStream_V_keep_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_897)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond2_reg_897 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_keep_V_blk_n <= inStream_V_keep_V_empty_n;
        else 
            inStream_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_keep_V_read <= inStream_V_id_V0_update;

    inStream_V_last_V_blk_n_assign_proc : process(inStream_V_last_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_897)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond2_reg_897 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_last_V_blk_n <= inStream_V_last_V_empty_n;
        else 
            inStream_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_last_V_read <= inStream_V_id_V0_update;

    inStream_V_strb_V_blk_n_assign_proc : process(inStream_V_strb_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_897)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond2_reg_897 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_strb_V_blk_n <= inStream_V_strb_V_empty_n;
        else 
            inStream_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_strb_V_read <= inStream_V_id_V0_update;

    inStream_V_user_V_blk_n_assign_proc : process(inStream_V_user_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_897)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond2_reg_897 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_user_V_blk_n <= inStream_V_user_V_empty_n;
        else 
            inStream_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_user_V_read <= inStream_V_id_V0_update;

    lineBuff_val_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_901, ap_block_pp0_stage0, tmp_3_fu_605_p1, tmp_19_0_2_fu_670_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lineBuff_val_0_address0 <= tmp_19_0_2_fu_670_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            lineBuff_val_0_address0 <= tmp_3_fu_605_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            lineBuff_val_0_address0 <= tmp_s_reg_901(9 - 1 downto 0);
        else 
            lineBuff_val_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    lineBuff_val_0_address1 <= tmp_19_0_1_fu_618_p1(9 - 1 downto 0);

    lineBuff_val_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            lineBuff_val_0_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            lineBuff_val_0_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_reg_897, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
            lineBuff_val_0_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, tmp_s_fu_504_p1, lineBuff_val_1_addr_reg_906, ap_block_pp0_stage0, tmp_19_0_1_fu_618_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                lineBuff_val_1_address0 <= tmp_19_0_1_fu_618_p1(9 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                lineBuff_val_1_address0 <= lineBuff_val_1_addr_reg_906;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                lineBuff_val_1_address0 <= tmp_s_fu_504_p1(9 - 1 downto 0);
            else 
                lineBuff_val_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_1_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_3_fu_605_p1, tmp_19_0_2_fu_670_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lineBuff_val_1_address1 <= tmp_19_0_2_fu_670_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            lineBuff_val_1_address1 <= tmp_3_fu_605_p1(9 - 1 downto 0);
        else 
            lineBuff_val_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            lineBuff_val_1_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            lineBuff_val_1_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_reg_897, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
            lineBuff_val_1_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, tmp_s_fu_504_p1, lineBuff_val_2_addr_reg_911, ap_block_pp0_stage0, tmp_19_0_1_fu_618_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                lineBuff_val_2_address0 <= tmp_19_0_1_fu_618_p1(9 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                lineBuff_val_2_address0 <= lineBuff_val_2_addr_reg_911;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                lineBuff_val_2_address0 <= tmp_s_fu_504_p1(9 - 1 downto 0);
            else 
                lineBuff_val_2_address0 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_2_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_3_fu_605_p1, tmp_19_0_2_fu_670_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lineBuff_val_2_address1 <= tmp_19_0_2_fu_670_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            lineBuff_val_2_address1 <= tmp_3_fu_605_p1(9 - 1 downto 0);
        else 
            lineBuff_val_2_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            lineBuff_val_2_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            lineBuff_val_2_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_reg_897, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_897 = ap_const_lv1_0))) then 
            lineBuff_val_2_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_fu_542_p2 <= (icmp_fu_520_p2 and icmp3_fu_536_p2);

    outStream_V_data_V_blk_n_assign_proc : process(outStream_V_data_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            outStream_V_data_V_blk_n <= outStream_V_data_V_full_n;
        else 
            outStream_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_data_V_din_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2, outStream_V_id_V1_status, tmp_data_V_reg_1152, ap_block_pp0_stage2_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then 
            outStream_V_data_V_din <= ap_const_lv8_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1))) then 
            outStream_V_data_V_din <= tmp_data_V_reg_1152;
        else 
            outStream_V_data_V_din <= "XXXXXXXX";
        end if; 
    end process;

    outStream_V_data_V_write <= outStream_V_id_V1_update;

    outStream_V_dest_V_blk_n_assign_proc : process(outStream_V_dest_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            outStream_V_dest_V_blk_n <= outStream_V_dest_V_full_n;
        else 
            outStream_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_dest_V_din_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2, tmp_dest_V_1_reg_423, tmp_dest_V_reg_966_pp0_iter2_reg, outStream_V_id_V1_status, ap_block_pp0_stage2_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then 
            outStream_V_dest_V_din <= tmp_dest_V_1_reg_423;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1))) then 
            outStream_V_dest_V_din <= tmp_dest_V_reg_966_pp0_iter2_reg;
        else 
            outStream_V_dest_V_din <= "XXXXXX";
        end if; 
    end process;

    outStream_V_dest_V_write <= outStream_V_id_V1_update;
    outStream_V_id_V1_status <= (outStream_V_user_V_full_n and outStream_V_strb_V_full_n and outStream_V_last_V_full_n and outStream_V_keep_V_full_n and outStream_V_id_V_full_n and outStream_V_dest_V_full_n and outStream_V_data_V_full_n);

    outStream_V_id_V1_update_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2, outStream_V_id_V1_status, ap_block_pp0_stage2_11001)
    begin
        if (((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1)))) then 
            outStream_V_id_V1_update <= ap_const_logic_1;
        else 
            outStream_V_id_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    outStream_V_id_V_blk_n_assign_proc : process(outStream_V_id_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            outStream_V_id_V_blk_n <= outStream_V_id_V_full_n;
        else 
            outStream_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_id_V_din_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2, tmp_id_V_1_reg_371, tmp_id_V_reg_960_pp0_iter2_reg, outStream_V_id_V1_status, ap_block_pp0_stage2_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then 
            outStream_V_id_V_din <= tmp_id_V_1_reg_371;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1))) then 
            outStream_V_id_V_din <= tmp_id_V_reg_960_pp0_iter2_reg;
        else 
            outStream_V_id_V_din <= "XXXXX";
        end if; 
    end process;

    outStream_V_id_V_write <= outStream_V_id_V1_update;

    outStream_V_keep_V_blk_n_assign_proc : process(outStream_V_keep_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            outStream_V_keep_V_blk_n <= outStream_V_keep_V_full_n;
        else 
            outStream_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_keep_V_din_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2, tmp_keep_V_1_reg_410, tmp_keep_V_reg_942_pp0_iter2_reg, outStream_V_id_V1_status, ap_block_pp0_stage2_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then 
            outStream_V_keep_V_din <= tmp_keep_V_1_reg_410;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1))) then 
            outStream_V_keep_V_din <= tmp_keep_V_reg_942_pp0_iter2_reg;
        else 
            outStream_V_keep_V_din <= "X";
        end if; 
    end process;

    outStream_V_keep_V_write <= outStream_V_id_V1_update;

    outStream_V_last_V_blk_n_assign_proc : process(outStream_V_last_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            outStream_V_last_V_blk_n <= outStream_V_last_V_full_n;
        else 
            outStream_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_last_V_din_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2, outStream_V_id_V1_status, ap_block_pp0_stage2_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then 
            outStream_V_last_V_din <= ap_const_lv1_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1))) then 
            outStream_V_last_V_din <= ap_const_lv1_0;
        else 
            outStream_V_last_V_din <= "X";
        end if; 
    end process;

    outStream_V_last_V_write <= outStream_V_id_V1_update;

    outStream_V_strb_V_blk_n_assign_proc : process(outStream_V_strb_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            outStream_V_strb_V_blk_n <= outStream_V_strb_V_full_n;
        else 
            outStream_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_strb_V_din_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2, tmp_strb_V_1_reg_397, tmp_strb_V_reg_948_pp0_iter2_reg, outStream_V_id_V1_status, ap_block_pp0_stage2_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then 
            outStream_V_strb_V_din <= tmp_strb_V_1_reg_397;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1))) then 
            outStream_V_strb_V_din <= tmp_strb_V_reg_948_pp0_iter2_reg;
        else 
            outStream_V_strb_V_din <= "X";
        end if; 
    end process;

    outStream_V_strb_V_write <= outStream_V_id_V1_update;

    outStream_V_user_V_blk_n_assign_proc : process(outStream_V_user_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            outStream_V_user_V_blk_n <= outStream_V_user_V_full_n;
        else 
            outStream_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_user_V_din_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_13_reg_938_pp0_iter2_reg, ap_CS_fsm_state12, exitcond_fu_847_p2, tmp_user_V_1_reg_384, tmp_user_V_reg_954_pp0_iter2_reg, outStream_V_id_V1_status, ap_block_pp0_stage2_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_847_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_fu_847_p2 = ap_const_lv1_0))) then 
            outStream_V_user_V_din <= tmp_user_V_1_reg_384;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_13_reg_938_pp0_iter2_reg = ap_const_lv1_1))) then 
            outStream_V_user_V_din <= tmp_user_V_reg_954_pp0_iter2_reg;
        else 
            outStream_V_user_V_din <= "XX";
        end if; 
    end process;

    outStream_V_user_V_write <= outStream_V_id_V1_update;
    p_neg_fu_780_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_7_tr_fu_777_p1));
    phitmp8_fu_832_p3 <= 
        ap_const_lv8_0 when (tmp_11_fu_824_p3(0) = '1') else 
        tmp_10_fu_820_p1;
    phitmp_fu_651_p2 <= std_logic_vector(unsigned(countWait_reg_470) + unsigned(ap_const_lv19_1));
    pixConvolved_1_fu_631_p3 <= 
        pixConvolved_fu_612_p2 when (or_cond_reg_916(0) = '1') else 
        ap_phi_mux_pixConvolved_assign_phi_fu_462_p4;
    pixConvolved_2_fu_644_p3 <= 
        pixConvolved_1_fu_631_p3 when (tmp_12_reg_922(0) = '1') else 
        ap_const_lv32_0;
    pixConvolved_fu_612_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_pixConvolved_assign_phi_fu_462_p4));
    tmp4_fu_750_p2 <= std_logic_vector(signed(tmp1_reg_1122) + signed(grp_fu_889_p3));
    tmp7_fu_740_p2 <= std_logic_vector(signed(tmp8_reg_1117) + signed(grp_fu_881_p3));
    tmp_10_cast_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_800_p1),15));
    tmp_10_fu_820_p1 <= valOutput_1_fu_813_p3(8 - 1 downto 0);
    tmp_11_fu_824_p3 <= valOutput_1_fu_813_p3(14 downto 14);
    tmp_12_fu_548_p2 <= "1" when (signed(ap_phi_mux_idxCol_assign_phi_fu_451_p4) < signed(ap_const_lv32_1FF)) else "0";
    tmp_13_fu_574_p2 <= "1" when (unsigned(ap_phi_mux_countWait_phi_fu_474_p4) > unsigned(ap_const_lv19_201)) else "0";
    tmp_19_0_1_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixConvolved_fu_612_p2),64));
    tmp_19_0_2_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_1_0_2_reg_992),64));
    tmp_2_fu_510_p4 <= ap_phi_mux_idxRow_phi_fu_440_p4(31 downto 1);
    tmp_3_cast_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_786_p4),15));
    tmp_3_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_pixConvolved_assign_phi_fu_462_p4),64));
    tmp_4_fu_526_p4 <= ap_phi_mux_idxCol_assign_phi_fu_451_p4(31 downto 1);
    tmp_6_fu_786_p4 <= p_neg_fu_780_p2(16 downto 3);
        tmp_7_tr_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(valOutput_reg_1137),17));

        tmp_8_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_reg_1147),14));

    tmp_9_fu_803_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(tmp_3_cast_fu_796_p1));
    tmp_data_V_fu_840_p3 <= 
        phitmp8_fu_832_p3 when (or_cond_reg_916_pp0_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    tmp_s_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_idxCol_assign_phi_fu_451_p4),64));
    valOutput_1_fu_813_p3 <= 
        tmp_9_fu_803_p2 when (tmp_5_reg_1142(0) = '1') else 
        tmp_10_cast_fu_809_p1;
    valOutput_fu_754_p2 <= std_logic_vector(unsigned(tmp7_reg_1127) + unsigned(tmp4_fu_750_p2));
    window_val_0_0_fu_664_p0 <= kernel_0_read_reg_977;
    window_val_0_0_fu_664_p1 <= window_val_0_0_fu_664_p10(8 - 1 downto 0);
    window_val_0_0_fu_664_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_0_q0),16));
    window_val_0_0_fu_664_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_0_0_fu_664_p0) * signed('0' &window_val_0_0_fu_664_p1))), 16));
    window_val_1_1_fu_683_p0 <= kernel_4_read_reg_1017;
    window_val_1_1_fu_683_p1 <= window_val_1_1_fu_683_p10(8 - 1 downto 0);
    window_val_1_1_fu_683_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_1_q0),16));
    window_val_1_1_fu_683_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_1_1_fu_683_p0) * signed('0' &window_val_1_1_fu_683_p1))), 16));
    window_val_2_1_fu_708_p0 <= kernel_7_read_reg_1042;
    window_val_2_1_fu_708_p1 <= window_val_2_1_fu_708_p10(8 - 1 downto 0);
    window_val_2_1_fu_708_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_2_load_2_reg_1097),16));
    window_val_2_2_fu_721_p0 <= kernel_8_read_reg_1047;
    window_val_2_2_fu_721_p1 <= window_val_2_2_fu_721_p10(8 - 1 downto 0);
    window_val_2_2_fu_721_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_2_q1),16));
    window_val_2_2_fu_721_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_2_2_fu_721_p0) * signed('0' &window_val_2_2_fu_721_p1))), 16));
end behav;
