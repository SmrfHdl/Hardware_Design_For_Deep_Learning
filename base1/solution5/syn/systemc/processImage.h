// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _processImage_HH_
#define _processImage_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "processImage_mac_eOg.h"
#include "processImage_mac_fYi.h"
#include "processImage_linebkb.h"

namespace ap_rtl {

struct processImage : public sc_module {
    // Port declarations 57
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > inStream_V_data_V_dout;
    sc_in< sc_logic > inStream_V_data_V_empty_n;
    sc_out< sc_logic > inStream_V_data_V_read;
    sc_in< sc_lv<1> > inStream_V_keep_V_dout;
    sc_in< sc_logic > inStream_V_keep_V_empty_n;
    sc_out< sc_logic > inStream_V_keep_V_read;
    sc_in< sc_lv<1> > inStream_V_strb_V_dout;
    sc_in< sc_logic > inStream_V_strb_V_empty_n;
    sc_out< sc_logic > inStream_V_strb_V_read;
    sc_in< sc_lv<2> > inStream_V_user_V_dout;
    sc_in< sc_logic > inStream_V_user_V_empty_n;
    sc_out< sc_logic > inStream_V_user_V_read;
    sc_in< sc_lv<1> > inStream_V_last_V_dout;
    sc_in< sc_logic > inStream_V_last_V_empty_n;
    sc_out< sc_logic > inStream_V_last_V_read;
    sc_in< sc_lv<5> > inStream_V_id_V_dout;
    sc_in< sc_logic > inStream_V_id_V_empty_n;
    sc_out< sc_logic > inStream_V_id_V_read;
    sc_in< sc_lv<6> > inStream_V_dest_V_dout;
    sc_in< sc_logic > inStream_V_dest_V_empty_n;
    sc_out< sc_logic > inStream_V_dest_V_read;
    sc_out< sc_lv<8> > outStream_V_data_V_din;
    sc_in< sc_logic > outStream_V_data_V_full_n;
    sc_out< sc_logic > outStream_V_data_V_write;
    sc_out< sc_lv<1> > outStream_V_keep_V_din;
    sc_in< sc_logic > outStream_V_keep_V_full_n;
    sc_out< sc_logic > outStream_V_keep_V_write;
    sc_out< sc_lv<1> > outStream_V_strb_V_din;
    sc_in< sc_logic > outStream_V_strb_V_full_n;
    sc_out< sc_logic > outStream_V_strb_V_write;
    sc_out< sc_lv<2> > outStream_V_user_V_din;
    sc_in< sc_logic > outStream_V_user_V_full_n;
    sc_out< sc_logic > outStream_V_user_V_write;
    sc_out< sc_lv<1> > outStream_V_last_V_din;
    sc_in< sc_logic > outStream_V_last_V_full_n;
    sc_out< sc_logic > outStream_V_last_V_write;
    sc_out< sc_lv<5> > outStream_V_id_V_din;
    sc_in< sc_logic > outStream_V_id_V_full_n;
    sc_out< sc_logic > outStream_V_id_V_write;
    sc_out< sc_lv<6> > outStream_V_dest_V_din;
    sc_in< sc_logic > outStream_V_dest_V_full_n;
    sc_out< sc_logic > outStream_V_dest_V_write;
    sc_in< sc_lv<8> > kernel_0;
    sc_in< sc_lv<8> > kernel_1;
    sc_in< sc_lv<8> > kernel_2;
    sc_in< sc_lv<8> > kernel_3;
    sc_in< sc_lv<8> > kernel_4;
    sc_in< sc_lv<8> > kernel_5;
    sc_in< sc_lv<8> > kernel_6;
    sc_in< sc_lv<8> > kernel_7;
    sc_in< sc_lv<8> > kernel_8;


    // Module declarations
    processImage(sc_module_name name);
    SC_HAS_PROCESS(processImage);

    ~processImage();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    processImage_linebkb* lineBuff_val_0_U;
    processImage_linebkb* lineBuff_val_1_U;
    processImage_linebkb* lineBuff_val_2_U;
    processImage_mac_eOg<1,1,8,8,16,16>* processImage_mac_eOg_U1;
    processImage_mac_eOg<1,1,8,8,16,16>* processImage_mac_eOg_U2;
    processImage_mac_eOg<1,1,8,8,16,16>* processImage_mac_eOg_U3;
    processImage_mac_eOg<1,1,8,8,16,16>* processImage_mac_eOg_U4;
    processImage_mac_fYi<1,1,8,8,16,16>* processImage_mac_fYi_U5;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > inStream_V_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond2_reg_897;
    sc_signal< sc_logic > inStream_V_keep_V_blk_n;
    sc_signal< sc_logic > inStream_V_strb_V_blk_n;
    sc_signal< sc_logic > inStream_V_user_V_blk_n;
    sc_signal< sc_logic > inStream_V_last_V_blk_n;
    sc_signal< sc_logic > inStream_V_id_V_blk_n;
    sc_signal< sc_logic > inStream_V_dest_V_blk_n;
    sc_signal< sc_logic > outStream_V_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<1> > tmp_13_reg_938;
    sc_signal< sc_lv<1> > tmp_13_reg_938_pp0_iter2_reg;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > exitcond_fu_847_p2;
    sc_signal< sc_logic > outStream_V_keep_V_blk_n;
    sc_signal< sc_logic > outStream_V_strb_V_blk_n;
    sc_signal< sc_logic > outStream_V_user_V_blk_n;
    sc_signal< sc_logic > outStream_V_last_V_blk_n;
    sc_signal< sc_logic > outStream_V_id_V_blk_n;
    sc_signal< sc_logic > outStream_V_dest_V_blk_n;
    sc_signal< sc_lv<5> > tmp_id_V_1_reg_371;
    sc_signal< sc_lv<2> > tmp_user_V_1_reg_384;
    sc_signal< sc_lv<1> > tmp_strb_V_1_reg_397;
    sc_signal< sc_lv<1> > tmp_keep_V_1_reg_410;
    sc_signal< sc_lv<6> > tmp_dest_V_1_reg_423;
    sc_signal< sc_lv<32> > idxRow_reg_436;
    sc_signal< sc_lv<32> > idxCol_assign_reg_447;
    sc_signal< sc_lv<32> > pixConvolved_assign_reg_458;
    sc_signal< sc_lv<19> > countWait_reg_470;
    sc_signal< sc_lv<8> > lineBuff_val_0_q1;
    sc_signal< sc_lv<8> > reg_493;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > or_cond_reg_916;
    sc_signal< sc_lv<8> > lineBuff_val_0_q0;
    sc_signal< sc_logic > inStream_V_id_V0_status;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > exitcond2_reg_897_pp0_iter1_reg;
    sc_signal< sc_lv<1> > or_cond_reg_916_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond2_fu_498_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_897_pp0_iter2_reg;
    sc_signal< sc_lv<64> > tmp_s_fu_504_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_901;
    sc_signal< sc_lv<9> > lineBuff_val_1_addr_reg_906;
    sc_signal< sc_lv<9> > lineBuff_val_2_addr_reg_911;
    sc_signal< sc_lv<1> > or_cond_fu_542_p2;
    sc_signal< sc_lv<1> > or_cond_reg_916_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_12_fu_548_p2;
    sc_signal< sc_lv<1> > tmp_12_reg_922;
    sc_signal< sc_lv<32> > idxCol_fu_554_p2;
    sc_signal< sc_lv<32> > idxCol_reg_928;
    sc_signal< sc_lv<32> > idxRow_1_fu_566_p3;
    sc_signal< sc_lv<32> > idxRow_1_reg_933;
    sc_signal< sc_lv<1> > tmp_13_fu_574_p2;
    sc_signal< sc_lv<1> > tmp_13_reg_938_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_942;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_942_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_942_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_948;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_948_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_948_pp0_iter2_reg;
    sc_signal< sc_lv<2> > tmp_user_V_reg_954;
    sc_signal< sc_lv<2> > tmp_user_V_reg_954_pp0_iter1_reg;
    sc_signal< sc_lv<2> > tmp_user_V_reg_954_pp0_iter2_reg;
    sc_signal< sc_lv<5> > tmp_id_V_reg_960;
    sc_signal< sc_lv<5> > tmp_id_V_reg_960_pp0_iter1_reg;
    sc_signal< sc_lv<5> > tmp_id_V_reg_960_pp0_iter2_reg;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_966;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_966_pp0_iter1_reg;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_966_pp0_iter2_reg;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage2_iter1;
    sc_signal< sc_logic > outStream_V_id_V1_status;
    sc_signal< bool > ap_block_state10_pp0_stage2_iter2;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<8> > kernel_0_read_reg_977;
    sc_signal< sc_lv<8> > kernel_1_read_reg_987;
    sc_signal< sc_lv<32> > col_assign_1_0_2_fu_625_p2;
    sc_signal< sc_lv<32> > col_assign_1_0_2_reg_992;
    sc_signal< sc_lv<8> > kernel_2_read_reg_997;
    sc_signal< sc_lv<8> > kernel_3_read_reg_1007;
    sc_signal< sc_lv<8> > kernel_3_read_reg_1007_pp0_iter1_reg;
    sc_signal< sc_lv<8> > kernel_4_read_reg_1017;
    sc_signal< sc_lv<8> > kernel_5_read_reg_1022;
    sc_signal< sc_lv<8> > kernel_6_read_reg_1032;
    sc_signal< sc_lv<8> > kernel_7_read_reg_1042;
    sc_signal< sc_lv<8> > kernel_8_read_reg_1047;
    sc_signal< sc_lv<32> > idxCol_1_fu_638_p3;
    sc_signal< sc_lv<32> > idxCol_1_reg_1052;
    sc_signal< sc_lv<32> > pixConvolved_2_fu_644_p3;
    sc_signal< sc_lv<32> > pixConvolved_2_reg_1057;
    sc_signal< sc_lv<19> > phitmp_fu_651_p2;
    sc_signal< sc_lv<19> > phitmp_reg_1062;
    sc_signal< sc_lv<16> > window_val_0_0_fu_664_p2;
    sc_signal< sc_lv<16> > window_val_0_0_reg_1067;
    sc_signal< sc_lv<8> > lineBuff_val_1_q1;
    sc_signal< sc_lv<8> > lineBuff_val_1_load_1_reg_1077;
    sc_signal< sc_lv<16> > window_val_1_1_fu_683_p2;
    sc_signal< sc_lv<16> > window_val_1_1_reg_1082;
    sc_signal< sc_lv<8> > lineBuff_val_2_q1;
    sc_signal< sc_lv<8> > lineBuff_val_2_load_1_reg_1092;
    sc_signal< sc_lv<8> > lineBuff_val_2_q0;
    sc_signal< sc_lv<8> > lineBuff_val_2_load_2_reg_1097;
    sc_signal< sc_lv<8> > lineBuff_val_1_load_3_reg_1107;
    sc_signal< sc_lv<16> > window_val_2_2_fu_721_p2;
    sc_signal< sc_lv<16> > window_val_2_2_reg_1112;
    sc_signal< sc_lv<16> > grp_fu_866_p3;
    sc_signal< sc_lv<16> > tmp8_reg_1117;
    sc_signal< sc_lv<16> > grp_fu_859_p3;
    sc_signal< sc_lv<16> > tmp1_reg_1122;
    sc_signal< sc_lv<16> > tmp7_fu_740_p2;
    sc_signal< sc_lv<16> > tmp7_reg_1127;
    sc_signal< sc_lv<16> > grp_fu_874_p3;
    sc_signal< sc_lv<16> > tmp2_reg_1132;
    sc_signal< sc_lv<16> > valOutput_fu_754_p2;
    sc_signal< sc_lv<16> > valOutput_reg_1137;
    sc_signal< sc_lv<1> > tmp_5_reg_1142;
    sc_signal< sc_lv<13> > tmp_7_reg_1147;
    sc_signal< sc_lv<8> > tmp_data_V_fu_840_p3;
    sc_signal< sc_lv<8> > tmp_data_V_reg_1152;
    sc_signal< sc_lv<10> > countWait_2_fu_853_p2;
    sc_signal< bool > ap_block_state12;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_lv<9> > lineBuff_val_0_address0;
    sc_signal< sc_logic > lineBuff_val_0_ce0;
    sc_signal< sc_logic > lineBuff_val_0_we0;
    sc_signal< sc_lv<9> > lineBuff_val_0_address1;
    sc_signal< sc_logic > lineBuff_val_0_ce1;
    sc_signal< sc_lv<9> > lineBuff_val_1_address0;
    sc_signal< sc_logic > lineBuff_val_1_ce0;
    sc_signal< sc_logic > lineBuff_val_1_we0;
    sc_signal< sc_lv<8> > lineBuff_val_1_q0;
    sc_signal< sc_lv<9> > lineBuff_val_1_address1;
    sc_signal< sc_logic > lineBuff_val_1_ce1;
    sc_signal< sc_lv<9> > lineBuff_val_2_address0;
    sc_signal< sc_logic > lineBuff_val_2_ce0;
    sc_signal< sc_logic > lineBuff_val_2_we0;
    sc_signal< sc_lv<9> > lineBuff_val_2_address1;
    sc_signal< sc_logic > lineBuff_val_2_ce1;
    sc_signal< sc_lv<32> > ap_phi_mux_idxRow_phi_fu_440_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_idxCol_assign_phi_fu_451_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_pixConvolved_assign_phi_fu_462_p4;
    sc_signal< sc_lv<19> > ap_phi_mux_countWait_phi_fu_474_p4;
    sc_signal< sc_lv<10> > countWait_1_reg_482;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > tmp_3_fu_605_p1;
    sc_signal< sc_lv<64> > tmp_19_0_1_fu_618_p1;
    sc_signal< sc_lv<64> > tmp_19_0_2_fu_670_p1;
    sc_signal< sc_logic > inStream_V_id_V0_update;
    sc_signal< sc_logic > outStream_V_id_V1_update;
    sc_signal< bool > ap_block_pp0_stage2_01001;
    sc_signal< sc_lv<31> > tmp_2_fu_510_p4;
    sc_signal< sc_lv<31> > tmp_4_fu_526_p4;
    sc_signal< sc_lv<1> > icmp_fu_520_p2;
    sc_signal< sc_lv<1> > icmp3_fu_536_p2;
    sc_signal< sc_lv<32> > idxRow_2_fu_560_p2;
    sc_signal< sc_lv<32> > pixConvolved_fu_612_p2;
    sc_signal< sc_lv<32> > pixConvolved_1_fu_631_p3;
    sc_signal< sc_lv<8> > window_val_0_0_fu_664_p0;
    sc_signal< sc_lv<8> > window_val_0_0_fu_664_p1;
    sc_signal< sc_lv<8> > window_val_1_1_fu_683_p0;
    sc_signal< sc_lv<8> > window_val_1_1_fu_683_p1;
    sc_signal< sc_lv<8> > window_val_2_1_fu_708_p0;
    sc_signal< sc_lv<8> > window_val_2_1_fu_708_p1;
    sc_signal< sc_lv<8> > window_val_2_2_fu_721_p0;
    sc_signal< sc_lv<8> > window_val_2_2_fu_721_p1;
    sc_signal< sc_lv<16> > grp_fu_881_p3;
    sc_signal< sc_lv<16> > grp_fu_889_p3;
    sc_signal< sc_lv<16> > tmp4_fu_750_p2;
    sc_signal< sc_lv<17> > tmp_7_tr_fu_777_p1;
    sc_signal< sc_lv<17> > p_neg_fu_780_p2;
    sc_signal< sc_lv<14> > tmp_6_fu_786_p4;
    sc_signal< sc_lv<15> > tmp_3_cast_fu_796_p1;
    sc_signal< sc_lv<14> > tmp_8_fu_800_p1;
    sc_signal< sc_lv<15> > tmp_9_fu_803_p2;
    sc_signal< sc_lv<15> > tmp_10_cast_fu_809_p1;
    sc_signal< sc_lv<15> > valOutput_1_fu_813_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_824_p3;
    sc_signal< sc_lv<8> > tmp_10_fu_820_p1;
    sc_signal< sc_lv<8> > phitmp8_fu_832_p3;
    sc_signal< sc_lv<8> > grp_fu_859_p1;
    sc_signal< sc_lv<8> > grp_fu_866_p1;
    sc_signal< sc_lv<16> > grp_fu_866_p2;
    sc_signal< sc_lv<8> > grp_fu_874_p1;
    sc_signal< sc_lv<8> > grp_fu_881_p1;
    sc_signal< sc_lv<8> > grp_fu_889_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<16> > grp_fu_859_p10;
    sc_signal< sc_lv<16> > grp_fu_866_p10;
    sc_signal< sc_lv<16> > grp_fu_874_p10;
    sc_signal< sc_lv<16> > grp_fu_881_p10;
    sc_signal< sc_lv<16> > grp_fu_889_p10;
    sc_signal< sc_lv<16> > window_val_0_0_fu_664_p10;
    sc_signal< sc_lv<16> > window_val_1_1_fu_683_p10;
    sc_signal< sc_lv<16> > window_val_2_1_fu_708_p10;
    sc_signal< sc_lv<16> > window_val_2_2_fu_721_p10;
    sc_signal< bool > ap_condition_319;
    sc_signal< bool > ap_condition_337;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_state11;
    static const sc_lv<6> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<19> ap_const_lv19_40001;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<19> ap_const_lv19_201;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<10> ap_const_lv10_201;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_01001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state10_pp0_stage2_iter2();
    void thread_ap_block_state12();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage2_iter1();
    void thread_ap_block_state8_pp0_stage0_iter2();
    void thread_ap_block_state9_pp0_stage1_iter2();
    void thread_ap_condition_319();
    void thread_ap_condition_337();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_countWait_phi_fu_474_p4();
    void thread_ap_phi_mux_idxCol_assign_phi_fu_451_p4();
    void thread_ap_phi_mux_idxRow_phi_fu_440_p4();
    void thread_ap_phi_mux_pixConvolved_assign_phi_fu_462_p4();
    void thread_ap_ready();
    void thread_col_assign_1_0_2_fu_625_p2();
    void thread_countWait_2_fu_853_p2();
    void thread_exitcond2_fu_498_p2();
    void thread_exitcond_fu_847_p2();
    void thread_grp_fu_859_p1();
    void thread_grp_fu_859_p10();
    void thread_grp_fu_866_p1();
    void thread_grp_fu_866_p10();
    void thread_grp_fu_866_p2();
    void thread_grp_fu_874_p1();
    void thread_grp_fu_874_p10();
    void thread_grp_fu_881_p1();
    void thread_grp_fu_881_p10();
    void thread_grp_fu_889_p1();
    void thread_grp_fu_889_p10();
    void thread_icmp3_fu_536_p2();
    void thread_icmp_fu_520_p2();
    void thread_idxCol_1_fu_638_p3();
    void thread_idxCol_fu_554_p2();
    void thread_idxRow_1_fu_566_p3();
    void thread_idxRow_2_fu_560_p2();
    void thread_inStream_V_data_V_blk_n();
    void thread_inStream_V_data_V_read();
    void thread_inStream_V_dest_V_blk_n();
    void thread_inStream_V_dest_V_read();
    void thread_inStream_V_id_V0_status();
    void thread_inStream_V_id_V0_update();
    void thread_inStream_V_id_V_blk_n();
    void thread_inStream_V_id_V_read();
    void thread_inStream_V_keep_V_blk_n();
    void thread_inStream_V_keep_V_read();
    void thread_inStream_V_last_V_blk_n();
    void thread_inStream_V_last_V_read();
    void thread_inStream_V_strb_V_blk_n();
    void thread_inStream_V_strb_V_read();
    void thread_inStream_V_user_V_blk_n();
    void thread_inStream_V_user_V_read();
    void thread_lineBuff_val_0_address0();
    void thread_lineBuff_val_0_address1();
    void thread_lineBuff_val_0_ce0();
    void thread_lineBuff_val_0_ce1();
    void thread_lineBuff_val_0_we0();
    void thread_lineBuff_val_1_address0();
    void thread_lineBuff_val_1_address1();
    void thread_lineBuff_val_1_ce0();
    void thread_lineBuff_val_1_ce1();
    void thread_lineBuff_val_1_we0();
    void thread_lineBuff_val_2_address0();
    void thread_lineBuff_val_2_address1();
    void thread_lineBuff_val_2_ce0();
    void thread_lineBuff_val_2_ce1();
    void thread_lineBuff_val_2_we0();
    void thread_or_cond_fu_542_p2();
    void thread_outStream_V_data_V_blk_n();
    void thread_outStream_V_data_V_din();
    void thread_outStream_V_data_V_write();
    void thread_outStream_V_dest_V_blk_n();
    void thread_outStream_V_dest_V_din();
    void thread_outStream_V_dest_V_write();
    void thread_outStream_V_id_V1_status();
    void thread_outStream_V_id_V1_update();
    void thread_outStream_V_id_V_blk_n();
    void thread_outStream_V_id_V_din();
    void thread_outStream_V_id_V_write();
    void thread_outStream_V_keep_V_blk_n();
    void thread_outStream_V_keep_V_din();
    void thread_outStream_V_keep_V_write();
    void thread_outStream_V_last_V_blk_n();
    void thread_outStream_V_last_V_din();
    void thread_outStream_V_last_V_write();
    void thread_outStream_V_strb_V_blk_n();
    void thread_outStream_V_strb_V_din();
    void thread_outStream_V_strb_V_write();
    void thread_outStream_V_user_V_blk_n();
    void thread_outStream_V_user_V_din();
    void thread_outStream_V_user_V_write();
    void thread_p_neg_fu_780_p2();
    void thread_phitmp8_fu_832_p3();
    void thread_phitmp_fu_651_p2();
    void thread_pixConvolved_1_fu_631_p3();
    void thread_pixConvolved_2_fu_644_p3();
    void thread_pixConvolved_fu_612_p2();
    void thread_tmp4_fu_750_p2();
    void thread_tmp7_fu_740_p2();
    void thread_tmp_10_cast_fu_809_p1();
    void thread_tmp_10_fu_820_p1();
    void thread_tmp_11_fu_824_p3();
    void thread_tmp_12_fu_548_p2();
    void thread_tmp_13_fu_574_p2();
    void thread_tmp_19_0_1_fu_618_p1();
    void thread_tmp_19_0_2_fu_670_p1();
    void thread_tmp_2_fu_510_p4();
    void thread_tmp_3_cast_fu_796_p1();
    void thread_tmp_3_fu_605_p1();
    void thread_tmp_4_fu_526_p4();
    void thread_tmp_6_fu_786_p4();
    void thread_tmp_7_tr_fu_777_p1();
    void thread_tmp_8_fu_800_p1();
    void thread_tmp_9_fu_803_p2();
    void thread_tmp_data_V_fu_840_p3();
    void thread_tmp_s_fu_504_p1();
    void thread_valOutput_1_fu_813_p3();
    void thread_valOutput_fu_754_p2();
    void thread_window_val_0_0_fu_664_p0();
    void thread_window_val_0_0_fu_664_p1();
    void thread_window_val_0_0_fu_664_p10();
    void thread_window_val_0_0_fu_664_p2();
    void thread_window_val_1_1_fu_683_p0();
    void thread_window_val_1_1_fu_683_p1();
    void thread_window_val_1_1_fu_683_p10();
    void thread_window_val_1_1_fu_683_p2();
    void thread_window_val_2_1_fu_708_p0();
    void thread_window_val_2_1_fu_708_p1();
    void thread_window_val_2_1_fu_708_p10();
    void thread_window_val_2_2_fu_721_p0();
    void thread_window_val_2_2_fu_721_p1();
    void thread_window_val_2_2_fu_721_p10();
    void thread_window_val_2_2_fu_721_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
