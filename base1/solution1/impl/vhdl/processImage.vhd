-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processImage is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inStream_V_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_V_data_V_empty_n : IN STD_LOGIC;
    inStream_V_data_V_read : OUT STD_LOGIC;
    inStream_V_keep_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_V_keep_V_empty_n : IN STD_LOGIC;
    inStream_V_keep_V_read : OUT STD_LOGIC;
    inStream_V_strb_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_V_strb_V_empty_n : IN STD_LOGIC;
    inStream_V_strb_V_read : OUT STD_LOGIC;
    inStream_V_user_V_dout : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_V_user_V_empty_n : IN STD_LOGIC;
    inStream_V_user_V_read : OUT STD_LOGIC;
    inStream_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_V_last_V_empty_n : IN STD_LOGIC;
    inStream_V_last_V_read : OUT STD_LOGIC;
    inStream_V_id_V_dout : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_V_id_V_empty_n : IN STD_LOGIC;
    inStream_V_id_V_read : OUT STD_LOGIC;
    inStream_V_dest_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    inStream_V_dest_V_empty_n : IN STD_LOGIC;
    inStream_V_dest_V_read : OUT STD_LOGIC;
    outStream_V_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_V_data_V_full_n : IN STD_LOGIC;
    outStream_V_data_V_write : OUT STD_LOGIC;
    outStream_V_keep_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_V_keep_V_full_n : IN STD_LOGIC;
    outStream_V_keep_V_write : OUT STD_LOGIC;
    outStream_V_strb_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_V_strb_V_full_n : IN STD_LOGIC;
    outStream_V_strb_V_write : OUT STD_LOGIC;
    outStream_V_user_V_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_V_user_V_full_n : IN STD_LOGIC;
    outStream_V_user_V_write : OUT STD_LOGIC;
    outStream_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_V_last_V_full_n : IN STD_LOGIC;
    outStream_V_last_V_write : OUT STD_LOGIC;
    outStream_V_id_V_din : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_V_id_V_full_n : IN STD_LOGIC;
    outStream_V_id_V_write : OUT STD_LOGIC;
    outStream_V_dest_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    outStream_V_dest_V_full_n : IN STD_LOGIC;
    outStream_V_dest_V_write : OUT STD_LOGIC;
    kernel_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    kernel_ce0 : OUT STD_LOGIC;
    kernel_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    kernel_ce1 : OUT STD_LOGIC;
    kernel_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    operation : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of processImage is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processImage,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.397000,HLS_SYN_LAT=1311240,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=762,HLS_SYN_LUT=2044,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv19_40001 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000001";
    constant ap_const_lv19_201 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_201 : STD_LOGIC_VECTOR (9 downto 0) := "1000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal inStream_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond2_reg_1488 : STD_LOGIC_VECTOR (0 downto 0);
    signal inStream_V_keep_V_blk_n : STD_LOGIC;
    signal inStream_V_strb_V_blk_n : STD_LOGIC;
    signal inStream_V_user_V_blk_n : STD_LOGIC;
    signal inStream_V_last_V_blk_n : STD_LOGIC;
    signal inStream_V_id_V_blk_n : STD_LOGIC;
    signal inStream_V_dest_V_blk_n : STD_LOGIC;
    signal outStream_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_3_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1507_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal exitcond_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_keep_V_blk_n : STD_LOGIC;
    signal outStream_V_strb_V_blk_n : STD_LOGIC;
    signal outStream_V_user_V_blk_n : STD_LOGIC;
    signal outStream_V_last_V_blk_n : STD_LOGIC;
    signal outStream_V_id_V_blk_n : STD_LOGIC;
    signal outStream_V_dest_V_blk_n : STD_LOGIC;
    signal tmp_dest_V_1_reg_572 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_id_V_1_reg_585 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_user_V_1_reg_598 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_strb_V_1_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_1_reg_624 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxCol_assign_reg_637 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_reg_649 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_assign_reg_661 : STD_LOGIC_VECTOR (31 downto 0);
    signal countWait_reg_673 : STD_LOGIC_VECTOR (18 downto 0);
    signal reg_696 : STD_LOGIC_VECTOR (7 downto 0);
    signal inStream_V_id_V0_status : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_700 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_704 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal outStream_V_id_V1_status : STD_LOGIC;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_708 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_712 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp2_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_1473 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_1478 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_reg_1483 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_reg_1488_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_reg_1492 : STD_LOGIC_VECTOR (63 downto 0);
    signal lineBuff_val_1_addr_reg_1497 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_addr_reg_1502 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_reg_1511 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_reg_1511_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_reg_1517 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_reg_1517_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_1523 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_user_V_reg_1523_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_id_V_reg_1529 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_id_V_reg_1529_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_reg_1535 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_dest_V_reg_1535_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal pixConvolved_fu_785_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_reg_1546 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_0_0_fu_806_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_0_reg_1579 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_1_fu_820_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_1_reg_1584 : STD_LOGIC_VECTOR (15 downto 0);
    signal lineBuff_val_1_load_2_reg_1594 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_load_1_reg_1604 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_load_2_reg_1609 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_839_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_reg_1619 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_843_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_reg_1627 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_2_fu_855_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_2_reg_1635 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_0_fu_869_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_0_reg_1640 : STD_LOGIC_VECTOR (15 downto 0);
    signal lineBuff_val_2_load_3_reg_1645 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1650 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_913_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_1656 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_917_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1661 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_921_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_reg_1669 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp3_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_1677 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_937_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_reg_1682 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1687 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxCol_1_fu_956_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxCol_1_reg_1693 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_fu_964_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal phitmp_reg_1698 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp1_fu_996_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_reg_1703 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_2_fu_1029_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_2_reg_1708 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1036_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_reg_1714 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1040_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_reg_1722 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_2_fu_1071_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_2_reg_1730 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_1111_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_reg_1736 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_3_fu_1125_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_3_reg_1741 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1132_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_1747 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_3_fu_1141_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_3_reg_1755 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp6_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_reg_1761 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_1766 : STD_LOGIC_VECTOR (0 downto 0);
    signal pixConvolved_2_fu_1169_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_2_reg_1771 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1194_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_reg_1776 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_6_fu_1226_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_6_reg_1781 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_1233_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_1787 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_6_fu_1264_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_6_reg_1795 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_1801 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_reg_1806 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_i_fu_1322_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_i_reg_1811 : STD_LOGIC_VECTOR (14 downto 0);
    signal idxRow_1_fu_1334_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_1_reg_1816 : STD_LOGIC_VECTOR (31 downto 0);
    signal countWait_2_fu_1422_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state13 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal lineBuff_val_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_0_ce0 : STD_LOGIC;
    signal lineBuff_val_0_we0 : STD_LOGIC;
    signal lineBuff_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_0_ce1 : STD_LOGIC;
    signal lineBuff_val_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_1_ce0 : STD_LOGIC;
    signal lineBuff_val_1_we0 : STD_LOGIC;
    signal lineBuff_val_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_1_ce1 : STD_LOGIC;
    signal lineBuff_val_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_ce0 : STD_LOGIC;
    signal lineBuff_val_2_we0 : STD_LOGIC;
    signal lineBuff_val_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_ce1 : STD_LOGIC;
    signal ap_phi_mux_idxCol_assign_phi_fu_641_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_idxRow_phi_fu_653_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_pixConvolved_assign_phi_fu_665_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_phi_mux_countWait_phi_fu_677_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal countWait_1_reg_685 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_7_0_i_fu_778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_0_1_i_fu_791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_0_2_i_fu_832_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal inStream_V_id_V0_update : STD_LOGIC;
    signal outStream_V_id_V1_update : STD_LOGIC;
    signal tmp_data_V_fu_1408_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal window_val_0_0_fu_806_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_0_fu_806_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_fu_820_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_fu_820_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_assign_0_2_i_fu_826_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_0_2_fu_855_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_2_fu_855_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_0_fu_869_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_0_fu_869_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_875_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_fu_891_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_925_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxCol_fu_950_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_2_0_fu_977_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_0_fu_977_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_fu_990_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_fu_990_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_fu_990_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_0_fu_977_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_0_1_i_i_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_minVal_fu_1006_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_0_2_i_i_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_minVal_1_fu_1017_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_1_i_i_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_0_1_i_i_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_maxVal_fu_1048_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_0_2_i_i_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_maxVal_1_fu_1059_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_1_i_i_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal window_val_1_1_fu_1085_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_fu_1085_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_2_fu_1099_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_2_fu_1099_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_fu_1085_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_2_fu_1099_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_1105_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_1116_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_1_1_i_i_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_1_1_i_i_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1152_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_1_fu_1162_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_2_2_fu_1183_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_2_fu_1183_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_2_fu_1183_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_fu_1189_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_1_2_i_i_fu_1199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_minVal_4_fu_1203_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_2_i_i_fu_1209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_minVal_5_fu_1214_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_2_1_i_i_fu_1221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_1_2_i_i_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_maxVal_4_fu_1241_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_2_i_i_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_maxVal_5_fu_1252_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_2_1_i_i_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_1271_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal valOutput_fu_1275_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_tr_i_fu_1280_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg_i_fu_1292_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_fu_1298_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_2_i_cast_fu_1308_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal idxRow_2_fu_1328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_i_fu_1341_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_7_i_cast_fu_1344_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal valOutput_1_fu_1348_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_fu_1358_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1354_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_2_2_i_i_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_2_2_i_i_fu_1384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_fu_1366_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_7_fu_1378_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_fu_1394_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_7_fu_1388_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp10_fu_1401_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal window_val_0_0_fu_806_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_1_fu_820_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_2_fu_855_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_0_fu_869_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_1_fu_1085_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_2_fu_1099_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_0_fu_977_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_1_fu_990_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_2_fu_1183_p10 : STD_LOGIC_VECTOR (15 downto 0);

    component processImage_linebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    lineBuff_val_0_U : component processImage_linebkb
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lineBuff_val_0_address0,
        ce0 => lineBuff_val_0_ce0,
        we0 => lineBuff_val_0_we0,
        d0 => lineBuff_val_1_q0,
        q0 => lineBuff_val_0_q0,
        address1 => lineBuff_val_0_address1,
        ce1 => lineBuff_val_0_ce1,
        q1 => lineBuff_val_0_q1);

    lineBuff_val_1_U : component processImage_linebkb
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lineBuff_val_1_address0,
        ce0 => lineBuff_val_1_ce0,
        we0 => lineBuff_val_1_we0,
        d0 => lineBuff_val_2_q0,
        q0 => lineBuff_val_1_q0,
        address1 => lineBuff_val_1_address1,
        ce1 => lineBuff_val_1_ce1,
        q1 => lineBuff_val_1_q1);

    lineBuff_val_2_U : component processImage_linebkb
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lineBuff_val_2_address0,
        ce0 => lineBuff_val_2_ce0,
        we0 => lineBuff_val_2_we0,
        d0 => inStream_V_data_V_dout,
        q0 => lineBuff_val_2_q0,
        address1 => lineBuff_val_2_address1,
        ce1 => lineBuff_val_2_ce1,
        q1 => lineBuff_val_2_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    countWait_1_reg_685_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                countWait_1_reg_685 <= ap_const_lv10_0;
            elsif ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then 
                countWait_1_reg_685 <= countWait_2_fu_1422_p2;
            end if; 
        end if;
    end process;

    countWait_reg_673_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0))) then 
                countWait_reg_673 <= phitmp_reg_1698;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                countWait_reg_673 <= ap_const_lv19_1;
            end if; 
        end if;
    end process;

    idxCol_assign_reg_637_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0))) then 
                idxCol_assign_reg_637 <= idxCol_1_reg_1693;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                idxCol_assign_reg_637 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    idxRow_reg_649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then 
                idxRow_reg_649 <= idxRow_1_reg_1816;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                idxRow_reg_649 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    pixConvolved_assign_reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then 
                pixConvolved_assign_reg_661 <= pixConvolved_2_reg_1771;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                pixConvolved_assign_reg_661 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    reg_712 <= lineBuff_val_1_q1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
                    reg_712 <= lineBuff_val_1_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond2_reg_1488 <= exitcond2_fu_735_p2;
                exitcond2_reg_1488_pp0_iter1_reg <= exitcond2_reg_1488;
                tmp_3_reg_1507_pp0_iter1_reg <= tmp_3_reg_1507;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                idxCol_1_reg_1693 <= idxCol_1_fu_956_p3;
                lineBuff_val_2_load_3_reg_1645 <= lineBuff_val_2_q1;
                phitmp_reg_1698 <= phitmp_fu_964_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                idxRow_1_reg_1816 <= idxRow_1_fu_1334_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond2_fu_735_p2 = ap_const_lv1_0))) then
                lineBuff_val_1_addr_reg_1497 <= tmp_i_fu_741_p1(9 - 1 downto 0);
                lineBuff_val_2_addr_reg_1502 <= tmp_i_fu_741_p1(9 - 1 downto 0);
                tmp_3_reg_1507 <= tmp_3_fu_747_p2;
                    tmp_i_reg_1492(31 downto 0) <= tmp_i_fu_741_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                lineBuff_val_1_load_2_reg_1594 <= lineBuff_val_1_q1;
                lineBuff_val_2_load_1_reg_1604 <= lineBuff_val_2_q0;
                lineBuff_val_2_load_2_reg_1609 <= lineBuff_val_2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                or_cond_reg_1650 <= or_cond_fu_907_p2;
                sel_tmp3_reg_1677 <= sel_tmp3_fu_932_p2;
                sel_tmp4_reg_1682 <= sel_tmp4_fu_937_p3;
                tmp4_reg_1656 <= tmp4_fu_913_p2;
                tmp_11_reg_1661 <= tmp_11_fu_917_p1;
                tmp_12_reg_1669 <= tmp_12_fu_921_p1;
                tmp_2_reg_1687 <= tmp_2_fu_944_p2;
                window_val_0_2_reg_1635 <= window_val_0_2_fu_855_p2;
                window_val_1_0_reg_1640 <= window_val_1_0_fu_869_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                pixConvolved_2_reg_1771 <= pixConvolved_2_fu_1169_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                pixConvolved_reg_1546 <= pixConvolved_fu_785_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_1488 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond2_reg_1488 = ap_const_lv1_0)))) then
                reg_696 <= kernel_q0;
                reg_700 <= kernel_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0)))) then
                reg_704 <= kernel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0)))) then
                reg_708 <= kernel_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                sel_tmp2_reg_1473 <= sel_tmp2_fu_717_p2;
                sel_tmp5_reg_1478 <= sel_tmp5_fu_723_p2;
                sel_tmp8_reg_1483 <= sel_tmp8_fu_729_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                sel_tmp6_reg_1761 <= sel_tmp6_fu_1148_p2;
                sel_tmp9_reg_1766 <= sel_tmp9_fu_1158_p2;
                tmp_14_reg_1747 <= tmp_14_fu_1132_p1;
                valInWindow_0_maxVal_3_reg_1755 <= valInWindow_0_maxVal_3_fu_1141_p3;
                valInWindow_0_minVal_3_reg_1741 <= valInWindow_0_minVal_3_fu_1125_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (sel_tmp3_reg_1677 = ap_const_lv1_1) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                tmp1_reg_1703 <= tmp1_fu_996_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sel_tmp3_reg_1677 = ap_const_lv1_1) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp3_reg_1736 <= tmp3_fu_1111_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (sel_tmp3_reg_1677 = ap_const_lv1_1) and (sel_tmp9_reg_1766 = ap_const_lv1_0) and (sel_tmp6_reg_1761 = ap_const_lv1_0) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp6_reg_1776 <= tmp6_fu_1194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                tmp_10_reg_1627 <= tmp_10_fu_843_p1;
                tmp_9_reg_1619 <= tmp_9_fu_839_p1;
                window_val_0_0_reg_1579 <= window_val_0_0_fu_806_p2;
                window_val_0_1_reg_1584 <= window_val_0_1_fu_820_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                tmp_15_reg_1714 <= tmp_15_fu_1036_p1;
                tmp_16_reg_1722 <= tmp_16_fu_1040_p1;
                valInWindow_0_maxVal_2_reg_1730 <= valInWindow_0_maxVal_2_fu_1071_p3;
                valInWindow_0_minVal_2_reg_1708 <= valInWindow_0_minVal_2_fu_1029_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_17_reg_1787 <= tmp_17_fu_1233_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (sel_tmp3_reg_1677 = ap_const_lv1_1) and (sel_tmp9_reg_1766 = ap_const_lv1_0) and (sel_tmp6_reg_1761 = ap_const_lv1_0) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_4_i_reg_1806 <= valOutput_fu_1275_p2(15 downto 3);
                tmp_6_i_reg_1811 <= tmp_6_i_fu_1322_p2;
                tmp_6_reg_1801 <= valOutput_fu_1275_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_dest_V_1_reg_572 <= tmp_dest_V_reg_1535_pp0_iter1_reg;
                tmp_id_V_1_reg_585 <= tmp_id_V_reg_1529_pp0_iter1_reg;
                tmp_keep_V_1_reg_624 <= tmp_keep_V_reg_1511_pp0_iter1_reg;
                tmp_strb_V_1_reg_611 <= tmp_strb_V_reg_1517_pp0_iter1_reg;
                tmp_user_V_1_reg_598 <= tmp_user_V_reg_1523_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_1488 = ap_const_lv1_0))) then
                tmp_dest_V_reg_1535 <= inStream_V_dest_V_dout;
                tmp_id_V_reg_1529 <= inStream_V_id_V_dout;
                tmp_keep_V_reg_1511 <= inStream_V_keep_V_dout;
                tmp_strb_V_reg_1517 <= inStream_V_strb_V_dout;
                tmp_user_V_reg_1523 <= inStream_V_user_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_dest_V_reg_1535_pp0_iter1_reg <= tmp_dest_V_reg_1535;
                tmp_id_V_reg_1529_pp0_iter1_reg <= tmp_id_V_reg_1529;
                tmp_keep_V_reg_1511_pp0_iter1_reg <= tmp_keep_V_reg_1511;
                tmp_strb_V_reg_1517_pp0_iter1_reg <= tmp_strb_V_reg_1517;
                tmp_user_V_reg_1523_pp0_iter1_reg <= tmp_user_V_reg_1523;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (sel_tmp9_reg_1766 = ap_const_lv1_1) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                valInWindow_0_maxVal_6_reg_1795 <= valInWindow_0_maxVal_6_fu_1264_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (sel_tmp6_reg_1761 = ap_const_lv1_1) and (sel_tmp9_reg_1766 = ap_const_lv1_0) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then
                valInWindow_0_minVal_6_reg_1781 <= valInWindow_0_minVal_6_fu_1226_p3;
            end if;
        end if;
    end process;
    tmp_i_reg_1492(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_CS_fsm_state13, exitcond_fu_1416_p2, outStream_V_id_V1_status, exitcond2_fu_735_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_fu_735_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_fu_735_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(6);
    ap_CS_fsm_state13 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond2_reg_1488, inStream_V_id_V0_status)
    begin
                ap_block_pp0_stage1_11001 <= ((inStream_V_id_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond2_reg_1488, inStream_V_id_V0_status)
    begin
                ap_block_pp0_stage1_subdone <= ((inStream_V_id_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, outStream_V_id_V1_status)
    begin
                ap_block_pp0_stage4_01001 <= ((outStream_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, outStream_V_id_V1_status)
    begin
                ap_block_pp0_stage4_11001 <= ((outStream_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, outStream_V_id_V1_status)
    begin
                ap_block_pp0_stage4_subdone <= ((outStream_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1));
    end process;

        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage4_iter1_assign_proc : process(tmp_3_reg_1507_pp0_iter1_reg, outStream_V_id_V1_status)
    begin
                ap_block_state11_pp0_stage4_iter1 <= ((outStream_V_id_V1_status = ap_const_logic_0) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_block_state13_assign_proc : process(exitcond_fu_1416_p2, outStream_V_id_V1_status)
    begin
                ap_block_state13 <= ((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(exitcond2_reg_1488, inStream_V_id_V0_status)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((inStream_V_id_V0_status = ap_const_logic_0) and (exitcond2_reg_1488 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond2_fu_735_p2)
    begin
        if ((exitcond2_fu_735_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state13, exitcond_fu_1416_p2, outStream_V_id_V1_status)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_countWait_phi_fu_677_p4_assign_proc : process(exitcond2_reg_1488, ap_enable_reg_pp0_iter1, countWait_reg_673, ap_CS_fsm_pp0_stage0, phitmp_reg_1698, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0))) then 
            ap_phi_mux_countWait_phi_fu_677_p4 <= phitmp_reg_1698;
        else 
            ap_phi_mux_countWait_phi_fu_677_p4 <= countWait_reg_673;
        end if; 
    end process;


    ap_phi_mux_idxCol_assign_phi_fu_641_p4_assign_proc : process(exitcond2_reg_1488, ap_enable_reg_pp0_iter1, idxCol_assign_reg_637, ap_CS_fsm_pp0_stage0, idxCol_1_reg_1693, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0))) then 
            ap_phi_mux_idxCol_assign_phi_fu_641_p4 <= idxCol_1_reg_1693;
        else 
            ap_phi_mux_idxCol_assign_phi_fu_641_p4 <= idxCol_assign_reg_637;
        end if; 
    end process;


    ap_phi_mux_idxRow_phi_fu_653_p4_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, idxRow_reg_649, exitcond2_reg_1488_pp0_iter1_reg, idxRow_1_reg_1816)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_idxRow_phi_fu_653_p4 <= idxRow_1_reg_1816;
        else 
            ap_phi_mux_idxRow_phi_fu_653_p4 <= idxRow_reg_649;
        end if; 
    end process;


    ap_phi_mux_pixConvolved_assign_phi_fu_665_p4_assign_proc : process(ap_enable_reg_pp0_iter1, pixConvolved_assign_reg_661, ap_CS_fsm_pp0_stage2, exitcond2_reg_1488_pp0_iter1_reg, pixConvolved_2_reg_1771, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond2_reg_1488_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_pixConvolved_assign_phi_fu_665_p4 <= pixConvolved_2_reg_1771;
        else 
            ap_phi_mux_pixConvolved_assign_phi_fu_665_p4 <= pixConvolved_assign_reg_661;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13, exitcond_fu_1416_p2, outStream_V_id_V1_status)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    col_assign_0_2_i_fu_826_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(pixConvolved_assign_reg_661));
    countWait_2_fu_1422_p2 <= std_logic_vector(unsigned(countWait_1_reg_685) + unsigned(ap_const_lv10_1));
    exitcond2_fu_735_p2 <= "1" when (ap_phi_mux_countWait_phi_fu_677_p4 = ap_const_lv19_40001) else "0";
    exitcond_fu_1416_p2 <= "1" when (countWait_1_reg_685 = ap_const_lv10_201) else "0";
    icmp4_fu_901_p2 <= "1" when (signed(tmp_5_fu_891_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_fu_885_p2 <= "1" when (signed(tmp_1_fu_875_p4) > signed(ap_const_lv31_0)) else "0";
    idxCol_1_fu_956_p3 <= 
        idxCol_fu_950_p2 when (tmp_2_fu_944_p2(0) = '1') else 
        ap_const_lv32_0;
    idxCol_fu_950_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(idxCol_assign_reg_637));
    idxRow_1_fu_1334_p3 <= 
        idxRow_reg_649 when (tmp_2_reg_1687(0) = '1') else 
        idxRow_2_fu_1328_p2;
    idxRow_2_fu_1328_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(idxRow_reg_649));

    inStream_V_data_V_blk_n_assign_proc : process(inStream_V_data_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_1488)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_data_V_blk_n <= inStream_V_data_V_empty_n;
        else 
            inStream_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_data_V_read <= inStream_V_id_V0_update;

    inStream_V_dest_V_blk_n_assign_proc : process(inStream_V_dest_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_1488)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_dest_V_blk_n <= inStream_V_dest_V_empty_n;
        else 
            inStream_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_dest_V_read <= inStream_V_id_V0_update;
    inStream_V_id_V0_status <= (inStream_V_user_V_empty_n and inStream_V_strb_V_empty_n and inStream_V_last_V_empty_n and inStream_V_keep_V_empty_n and inStream_V_id_V_empty_n and inStream_V_dest_V_empty_n and inStream_V_data_V_empty_n);

    inStream_V_id_V0_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_reg_1488, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_1488 = ap_const_lv1_0))) then 
            inStream_V_id_V0_update <= ap_const_logic_1;
        else 
            inStream_V_id_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_id_V_blk_n_assign_proc : process(inStream_V_id_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_1488)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_id_V_blk_n <= inStream_V_id_V_empty_n;
        else 
            inStream_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_id_V_read <= inStream_V_id_V0_update;

    inStream_V_keep_V_blk_n_assign_proc : process(inStream_V_keep_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_1488)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_keep_V_blk_n <= inStream_V_keep_V_empty_n;
        else 
            inStream_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_keep_V_read <= inStream_V_id_V0_update;

    inStream_V_last_V_blk_n_assign_proc : process(inStream_V_last_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_1488)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_last_V_blk_n <= inStream_V_last_V_empty_n;
        else 
            inStream_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_last_V_read <= inStream_V_id_V0_update;

    inStream_V_strb_V_blk_n_assign_proc : process(inStream_V_strb_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_1488)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_strb_V_blk_n <= inStream_V_strb_V_empty_n;
        else 
            inStream_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_strb_V_read <= inStream_V_id_V0_update;

    inStream_V_user_V_blk_n_assign_proc : process(inStream_V_user_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond2_reg_1488)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond2_reg_1488 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            inStream_V_user_V_blk_n <= inStream_V_user_V_empty_n;
        else 
            inStream_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_user_V_read <= inStream_V_id_V0_update;

    kernel_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                kernel_address0 <= ap_const_lv64_8(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                kernel_address0 <= ap_const_lv64_6(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                kernel_address0 <= ap_const_lv64_4(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                kernel_address0 <= ap_const_lv64_2(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                kernel_address0 <= ap_const_lv64_0(4 - 1 downto 0);
            else 
                kernel_address0 <= "XXXX";
            end if;
        else 
            kernel_address0 <= "XXXX";
        end if; 
    end process;


    kernel_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                kernel_address1 <= ap_const_lv64_7(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                kernel_address1 <= ap_const_lv64_5(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                kernel_address1 <= ap_const_lv64_3(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                kernel_address1 <= ap_const_lv64_1(4 - 1 downto 0);
            else 
                kernel_address1 <= "XXXX";
            end if;
        else 
            kernel_address1 <= "XXXX";
        end if; 
    end process;


    kernel_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            kernel_ce0 <= ap_const_logic_1;
        else 
            kernel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            kernel_ce1 <= ap_const_logic_1;
        else 
            kernel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_i_reg_1492, ap_block_pp0_stage2, tmp_7_0_i_fu_778_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                lineBuff_val_0_address0 <= tmp_7_0_i_fu_778_p1(9 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                lineBuff_val_0_address0 <= tmp_i_reg_1492(9 - 1 downto 0);
            else 
                lineBuff_val_0_address0 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_0_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, tmp_7_0_1_i_fu_791_p1, tmp_7_0_2_i_fu_832_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                lineBuff_val_0_address1 <= tmp_7_0_2_i_fu_832_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                lineBuff_val_0_address1 <= tmp_7_0_1_i_fu_791_p1(9 - 1 downto 0);
            else 
                lineBuff_val_0_address1 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_0_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            lineBuff_val_0_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            lineBuff_val_0_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_reg_1488, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_1488 = ap_const_lv1_0))) then 
            lineBuff_val_0_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, tmp_i_fu_741_p1, lineBuff_val_1_addr_reg_1497, ap_block_pp0_stage0, ap_block_pp0_stage2, tmp_7_0_i_fu_778_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                lineBuff_val_1_address0 <= tmp_7_0_i_fu_778_p1(9 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                lineBuff_val_1_address0 <= lineBuff_val_1_addr_reg_1497;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                lineBuff_val_1_address0 <= tmp_i_fu_741_p1(9 - 1 downto 0);
            else 
                lineBuff_val_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_1_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, tmp_7_0_1_i_fu_791_p1, tmp_7_0_2_i_fu_832_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                lineBuff_val_1_address1 <= tmp_7_0_2_i_fu_832_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                lineBuff_val_1_address1 <= tmp_7_0_1_i_fu_791_p1(9 - 1 downto 0);
            else 
                lineBuff_val_1_address1 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            lineBuff_val_1_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            lineBuff_val_1_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_reg_1488, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_1488 = ap_const_lv1_0))) then 
            lineBuff_val_1_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, tmp_i_fu_741_p1, lineBuff_val_2_addr_reg_1502, ap_block_pp0_stage0, ap_block_pp0_stage2, tmp_7_0_i_fu_778_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                lineBuff_val_2_address0 <= tmp_7_0_i_fu_778_p1(9 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                lineBuff_val_2_address0 <= lineBuff_val_2_addr_reg_1502;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                lineBuff_val_2_address0 <= tmp_i_fu_741_p1(9 - 1 downto 0);
            else 
                lineBuff_val_2_address0 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_2_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, tmp_7_0_1_i_fu_791_p1, tmp_7_0_2_i_fu_832_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                lineBuff_val_2_address1 <= tmp_7_0_2_i_fu_832_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                lineBuff_val_2_address1 <= tmp_7_0_1_i_fu_791_p1(9 - 1 downto 0);
            else 
                lineBuff_val_2_address1 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_2_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            lineBuff_val_2_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            lineBuff_val_2_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_reg_1488, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_1488 = ap_const_lv1_0))) then 
            lineBuff_val_2_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_fu_907_p2 <= (icmp_fu_885_p2 and icmp4_fu_901_p2);

    outStream_V_data_V_blk_n_assign_proc : process(outStream_V_data_V_full_n, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            outStream_V_data_V_blk_n <= outStream_V_data_V_full_n;
        else 
            outStream_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_data_V_din_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2, outStream_V_id_V1_status, tmp_data_V_fu_1408_p3, ap_block_pp0_stage4_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then 
            outStream_V_data_V_din <= ap_const_lv8_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1))) then 
            outStream_V_data_V_din <= tmp_data_V_fu_1408_p3;
        else 
            outStream_V_data_V_din <= "XXXXXXXX";
        end if; 
    end process;

    outStream_V_data_V_write <= outStream_V_id_V1_update;

    outStream_V_dest_V_blk_n_assign_proc : process(outStream_V_dest_V_full_n, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            outStream_V_dest_V_blk_n <= outStream_V_dest_V_full_n;
        else 
            outStream_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_dest_V_din_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2, tmp_dest_V_1_reg_572, outStream_V_id_V1_status, tmp_dest_V_reg_1535_pp0_iter1_reg, ap_block_pp0_stage4_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then 
            outStream_V_dest_V_din <= tmp_dest_V_1_reg_572;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1))) then 
            outStream_V_dest_V_din <= tmp_dest_V_reg_1535_pp0_iter1_reg;
        else 
            outStream_V_dest_V_din <= "XXXXXX";
        end if; 
    end process;

    outStream_V_dest_V_write <= outStream_V_id_V1_update;
    outStream_V_id_V1_status <= (outStream_V_user_V_full_n and outStream_V_strb_V_full_n and outStream_V_last_V_full_n and outStream_V_keep_V_full_n and outStream_V_id_V_full_n and outStream_V_dest_V_full_n and outStream_V_data_V_full_n);

    outStream_V_id_V1_update_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2, outStream_V_id_V1_status, ap_block_pp0_stage4_11001)
    begin
        if (((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1)))) then 
            outStream_V_id_V1_update <= ap_const_logic_1;
        else 
            outStream_V_id_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    outStream_V_id_V_blk_n_assign_proc : process(outStream_V_id_V_full_n, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            outStream_V_id_V_blk_n <= outStream_V_id_V_full_n;
        else 
            outStream_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_id_V_din_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2, tmp_id_V_1_reg_585, outStream_V_id_V1_status, tmp_id_V_reg_1529_pp0_iter1_reg, ap_block_pp0_stage4_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then 
            outStream_V_id_V_din <= tmp_id_V_1_reg_585;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1))) then 
            outStream_V_id_V_din <= tmp_id_V_reg_1529_pp0_iter1_reg;
        else 
            outStream_V_id_V_din <= "XXXXX";
        end if; 
    end process;

    outStream_V_id_V_write <= outStream_V_id_V1_update;

    outStream_V_keep_V_blk_n_assign_proc : process(outStream_V_keep_V_full_n, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            outStream_V_keep_V_blk_n <= outStream_V_keep_V_full_n;
        else 
            outStream_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_keep_V_din_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2, tmp_keep_V_1_reg_624, outStream_V_id_V1_status, tmp_keep_V_reg_1511_pp0_iter1_reg, ap_block_pp0_stage4_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then 
            outStream_V_keep_V_din <= tmp_keep_V_1_reg_624;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1))) then 
            outStream_V_keep_V_din <= tmp_keep_V_reg_1511_pp0_iter1_reg;
        else 
            outStream_V_keep_V_din <= "X";
        end if; 
    end process;

    outStream_V_keep_V_write <= outStream_V_id_V1_update;

    outStream_V_last_V_blk_n_assign_proc : process(outStream_V_last_V_full_n, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            outStream_V_last_V_blk_n <= outStream_V_last_V_full_n;
        else 
            outStream_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_last_V_din_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2, outStream_V_id_V1_status, ap_block_pp0_stage4_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then 
            outStream_V_last_V_din <= ap_const_lv1_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1))) then 
            outStream_V_last_V_din <= ap_const_lv1_0;
        else 
            outStream_V_last_V_din <= "X";
        end if; 
    end process;

    outStream_V_last_V_write <= outStream_V_id_V1_update;

    outStream_V_strb_V_blk_n_assign_proc : process(outStream_V_strb_V_full_n, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            outStream_V_strb_V_blk_n <= outStream_V_strb_V_full_n;
        else 
            outStream_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_strb_V_din_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2, tmp_strb_V_1_reg_611, outStream_V_id_V1_status, tmp_strb_V_reg_1517_pp0_iter1_reg, ap_block_pp0_stage4_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then 
            outStream_V_strb_V_din <= tmp_strb_V_1_reg_611;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1))) then 
            outStream_V_strb_V_din <= tmp_strb_V_reg_1517_pp0_iter1_reg;
        else 
            outStream_V_strb_V_din <= "X";
        end if; 
    end process;

    outStream_V_strb_V_write <= outStream_V_id_V1_update;

    outStream_V_user_V_blk_n_assign_proc : process(outStream_V_user_V_full_n, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            outStream_V_user_V_blk_n <= outStream_V_user_V_full_n;
        else 
            outStream_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_V_user_V_din_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_3_reg_1507_pp0_iter1_reg, ap_CS_fsm_state13, exitcond_fu_1416_p2, tmp_user_V_1_reg_598, outStream_V_id_V1_status, tmp_user_V_reg_1523_pp0_iter1_reg, ap_block_pp0_stage4_01001)
    begin
        if ((not(((outStream_V_id_V1_status = ap_const_logic_0) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_fu_1416_p2 = ap_const_lv1_0))) then 
            outStream_V_user_V_din <= tmp_user_V_1_reg_598;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1507_pp0_iter1_reg = ap_const_lv1_1))) then 
            outStream_V_user_V_din <= tmp_user_V_reg_1523_pp0_iter1_reg;
        else 
            outStream_V_user_V_din <= "XX";
        end if; 
    end process;

    outStream_V_user_V_write <= outStream_V_id_V1_update;
    p_i_fu_1366_p3 <= 
        ap_const_lv8_0 when (tmp_8_fu_1358_p3(0) = '1') else 
        tmp_7_fu_1354_p1;
    p_neg_i_fu_1292_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_tr_i_fu_1280_p1));
    phitmp_fu_964_p2 <= std_logic_vector(unsigned(countWait_reg_673) + unsigned(ap_const_lv19_1));
    pixConvolved_1_fu_1162_p3 <= 
        pixConvolved_reg_1546 when (sel_tmp9_fu_1158_p2(0) = '1') else 
        sel_tmp7_fu_1152_p3;
    pixConvolved_2_fu_1169_p3 <= 
        pixConvolved_1_fu_1162_p3 when (tmp_2_reg_1687(0) = '1') else 
        ap_const_lv32_0;
    pixConvolved_fu_785_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_pixConvolved_assign_phi_fu_665_p4));
    sel_tmp10_fu_1401_p3 <= 
        valInWindow_0_minVal_7_fu_1378_p3 when (sel_tmp6_reg_1761(0) = '1') else 
        sel_tmp_fu_1394_p3;
    sel_tmp1_fu_925_p3 <= 
        pixConvolved_reg_1546 when (or_cond_fu_907_p2(0) = '1') else 
        pixConvolved_assign_reg_661;
    sel_tmp2_fu_717_p2 <= "1" when (operation = ap_const_lv32_0) else "0";
    sel_tmp3_fu_932_p2 <= (sel_tmp2_reg_1473 and or_cond_fu_907_p2);
    sel_tmp4_fu_937_p3 <= 
        pixConvolved_reg_1546 when (sel_tmp3_fu_932_p2(0) = '1') else 
        sel_tmp1_fu_925_p3;
    sel_tmp5_fu_723_p2 <= "1" when (operation = ap_const_lv32_1) else "0";
    sel_tmp6_fu_1148_p2 <= (sel_tmp5_reg_1478 and or_cond_reg_1650);
    sel_tmp7_fu_1152_p3 <= 
        pixConvolved_reg_1546 when (sel_tmp6_fu_1148_p2(0) = '1') else 
        sel_tmp4_reg_1682;
    sel_tmp8_fu_729_p2 <= "1" when (operation = ap_const_lv32_2) else "0";
    sel_tmp9_fu_1158_p2 <= (sel_tmp8_reg_1483 and or_cond_reg_1650);
    sel_tmp_fu_1394_p3 <= 
        p_i_fu_1366_p3 when (sel_tmp3_reg_1677(0) = '1') else 
        ap_const_lv8_0;
    tmp1_fu_996_p2 <= std_logic_vector(unsigned(window_val_2_1_fu_990_p2) + unsigned(window_val_2_0_fu_977_p2));
    tmp2_fu_1105_p2 <= std_logic_vector(unsigned(window_val_1_1_fu_1085_p2) + unsigned(window_val_1_2_fu_1099_p2));
    tmp3_fu_1111_p2 <= std_logic_vector(unsigned(tmp1_reg_1703) + unsigned(tmp2_fu_1105_p2));
    tmp4_fu_913_p2 <= std_logic_vector(unsigned(window_val_0_0_reg_1579) + unsigned(window_val_0_1_reg_1584));
    tmp5_fu_1189_p2 <= std_logic_vector(unsigned(window_val_2_2_fu_1183_p2) + unsigned(window_val_0_2_reg_1635));
    tmp6_fu_1194_p2 <= std_logic_vector(unsigned(window_val_1_0_reg_1640) + unsigned(tmp5_fu_1189_p2));
    tmp7_fu_1271_p2 <= std_logic_vector(unsigned(tmp4_reg_1656) + unsigned(tmp6_reg_1776));
    tmp_10_fu_843_p1 <= window_val_0_1_fu_820_p2(8 - 1 downto 0);
    tmp_11_fu_917_p1 <= window_val_0_2_fu_855_p2(8 - 1 downto 0);
    tmp_12_fu_921_p1 <= window_val_1_0_fu_869_p2(8 - 1 downto 0);
    tmp_13_fu_1116_p1 <= window_val_1_1_fu_1085_p2(8 - 1 downto 0);
    tmp_14_fu_1132_p1 <= window_val_1_2_fu_1099_p2(8 - 1 downto 0);
    tmp_15_fu_1036_p1 <= window_val_2_0_fu_977_p2(8 - 1 downto 0);
    tmp_16_fu_1040_p1 <= window_val_2_1_fu_990_p2(8 - 1 downto 0);
    tmp_17_fu_1233_p1 <= window_val_2_2_fu_1183_p2(8 - 1 downto 0);
    tmp_1_fu_875_p4 <= ap_phi_mux_idxRow_phi_fu_653_p4(31 downto 1);
    tmp_29_0_1_i_i_fu_1002_p2 <= "1" when (unsigned(tmp_10_reg_1627) < unsigned(tmp_9_reg_1619)) else "0";
    tmp_29_0_2_i_i_fu_1012_p2 <= "1" when (unsigned(tmp_11_reg_1661) < unsigned(valInWindow_0_minVal_fu_1006_p3)) else "0";
    tmp_29_1_1_i_i_fu_1120_p2 <= "1" when (unsigned(tmp_13_fu_1116_p1) < unsigned(valInWindow_0_minVal_2_reg_1708)) else "0";
    tmp_29_1_2_i_i_fu_1199_p2 <= "1" when (unsigned(tmp_14_reg_1747) < unsigned(valInWindow_0_minVal_3_reg_1741)) else "0";
    tmp_29_1_i_i_fu_1024_p2 <= "1" when (unsigned(tmp_12_reg_1669) < unsigned(valInWindow_0_minVal_1_fu_1017_p3)) else "0";
    tmp_29_2_1_i_i_fu_1221_p2 <= "1" when (unsigned(tmp_16_reg_1722) < unsigned(valInWindow_0_minVal_5_fu_1214_p3)) else "0";
    tmp_29_2_2_i_i_fu_1374_p2 <= "1" when (unsigned(tmp_17_reg_1787) < unsigned(valInWindow_0_minVal_6_reg_1781)) else "0";
    tmp_29_2_i_i_fu_1209_p2 <= "1" when (unsigned(tmp_15_reg_1714) < unsigned(valInWindow_0_minVal_4_fu_1203_p3)) else "0";
    tmp_2_fu_944_p2 <= "1" when (signed(idxCol_assign_reg_637) < signed(ap_const_lv32_1FF)) else "0";
    tmp_2_i_cast_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1298_p4),15));
    tmp_35_0_1_i_i_fu_1044_p2 <= "1" when (unsigned(tmp_10_reg_1627) > unsigned(tmp_9_reg_1619)) else "0";
    tmp_35_0_2_i_i_fu_1054_p2 <= "1" when (unsigned(tmp_11_reg_1661) > unsigned(valInWindow_0_maxVal_fu_1048_p3)) else "0";
    tmp_35_1_1_i_i_fu_1136_p2 <= "1" when (unsigned(tmp_13_fu_1116_p1) > unsigned(valInWindow_0_maxVal_2_reg_1730)) else "0";
    tmp_35_1_2_i_i_fu_1237_p2 <= "1" when (unsigned(tmp_14_reg_1747) > unsigned(valInWindow_0_maxVal_3_reg_1755)) else "0";
    tmp_35_1_i_i_fu_1066_p2 <= "1" when (unsigned(tmp_12_reg_1669) > unsigned(valInWindow_0_maxVal_1_fu_1059_p3)) else "0";
    tmp_35_2_1_i_i_fu_1259_p2 <= "1" when (unsigned(tmp_16_reg_1722) > unsigned(valInWindow_0_maxVal_5_fu_1252_p3)) else "0";
    tmp_35_2_2_i_i_fu_1384_p2 <= "1" when (unsigned(tmp_17_reg_1787) > unsigned(valInWindow_0_maxVal_6_reg_1795)) else "0";
    tmp_35_2_i_i_fu_1247_p2 <= "1" when (unsigned(tmp_15_reg_1714) > unsigned(valInWindow_0_maxVal_4_fu_1241_p3)) else "0";
    tmp_3_fu_747_p2 <= "1" when (unsigned(ap_phi_mux_countWait_phi_fu_677_p4) > unsigned(ap_const_lv19_201)) else "0";
    tmp_4_fu_1298_p4 <= p_neg_i_fu_1292_p2(16 downto 3);
    tmp_5_fu_891_p4 <= idxCol_assign_reg_637(31 downto 1);
        tmp_5_i_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_i_reg_1806),14));

    tmp_6_i_fu_1322_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(tmp_2_i_cast_fu_1308_p1));
    tmp_7_0_1_i_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixConvolved_fu_785_p2),64));
    tmp_7_0_2_i_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_0_2_i_fu_826_p2),64));
    tmp_7_0_i_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_pixConvolved_assign_phi_fu_665_p4),64));
    tmp_7_fu_1354_p1 <= valOutput_1_fu_1348_p3(8 - 1 downto 0);
    tmp_7_i_cast_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_i_fu_1341_p1),15));
    tmp_8_fu_1358_p3 <= valOutput_1_fu_1348_p3(14 downto 14);
    tmp_9_fu_839_p1 <= window_val_0_0_fu_806_p2(8 - 1 downto 0);
    tmp_data_V_fu_1408_p3 <= 
        valInWindow_0_maxVal_7_fu_1388_p3 when (sel_tmp9_reg_1766(0) = '1') else 
        sel_tmp10_fu_1401_p3;
    tmp_i_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_idxCol_assign_phi_fu_641_p4),64));
        tmp_tr_i_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(valOutput_fu_1275_p2),17));

    valInWindow_0_maxVal_1_fu_1059_p3 <= 
        tmp_11_reg_1661 when (tmp_35_0_2_i_i_fu_1054_p2(0) = '1') else 
        valInWindow_0_maxVal_fu_1048_p3;
    valInWindow_0_maxVal_2_fu_1071_p3 <= 
        tmp_12_reg_1669 when (tmp_35_1_i_i_fu_1066_p2(0) = '1') else 
        valInWindow_0_maxVal_1_fu_1059_p3;
    valInWindow_0_maxVal_3_fu_1141_p3 <= 
        tmp_13_fu_1116_p1 when (tmp_35_1_1_i_i_fu_1136_p2(0) = '1') else 
        valInWindow_0_maxVal_2_reg_1730;
    valInWindow_0_maxVal_4_fu_1241_p3 <= 
        tmp_14_reg_1747 when (tmp_35_1_2_i_i_fu_1237_p2(0) = '1') else 
        valInWindow_0_maxVal_3_reg_1755;
    valInWindow_0_maxVal_5_fu_1252_p3 <= 
        tmp_15_reg_1714 when (tmp_35_2_i_i_fu_1247_p2(0) = '1') else 
        valInWindow_0_maxVal_4_fu_1241_p3;
    valInWindow_0_maxVal_6_fu_1264_p3 <= 
        tmp_16_reg_1722 when (tmp_35_2_1_i_i_fu_1259_p2(0) = '1') else 
        valInWindow_0_maxVal_5_fu_1252_p3;
    valInWindow_0_maxVal_7_fu_1388_p3 <= 
        tmp_17_reg_1787 when (tmp_35_2_2_i_i_fu_1384_p2(0) = '1') else 
        valInWindow_0_maxVal_6_reg_1795;
    valInWindow_0_maxVal_fu_1048_p3 <= 
        tmp_10_reg_1627 when (tmp_35_0_1_i_i_fu_1044_p2(0) = '1') else 
        tmp_9_reg_1619;
    valInWindow_0_minVal_1_fu_1017_p3 <= 
        tmp_11_reg_1661 when (tmp_29_0_2_i_i_fu_1012_p2(0) = '1') else 
        valInWindow_0_minVal_fu_1006_p3;
    valInWindow_0_minVal_2_fu_1029_p3 <= 
        tmp_12_reg_1669 when (tmp_29_1_i_i_fu_1024_p2(0) = '1') else 
        valInWindow_0_minVal_1_fu_1017_p3;
    valInWindow_0_minVal_3_fu_1125_p3 <= 
        tmp_13_fu_1116_p1 when (tmp_29_1_1_i_i_fu_1120_p2(0) = '1') else 
        valInWindow_0_minVal_2_reg_1708;
    valInWindow_0_minVal_4_fu_1203_p3 <= 
        tmp_14_reg_1747 when (tmp_29_1_2_i_i_fu_1199_p2(0) = '1') else 
        valInWindow_0_minVal_3_reg_1741;
    valInWindow_0_minVal_5_fu_1214_p3 <= 
        tmp_15_reg_1714 when (tmp_29_2_i_i_fu_1209_p2(0) = '1') else 
        valInWindow_0_minVal_4_fu_1203_p3;
    valInWindow_0_minVal_6_fu_1226_p3 <= 
        tmp_16_reg_1722 when (tmp_29_2_1_i_i_fu_1221_p2(0) = '1') else 
        valInWindow_0_minVal_5_fu_1214_p3;
    valInWindow_0_minVal_7_fu_1378_p3 <= 
        tmp_17_reg_1787 when (tmp_29_2_2_i_i_fu_1374_p2(0) = '1') else 
        valInWindow_0_minVal_6_reg_1781;
    valInWindow_0_minVal_fu_1006_p3 <= 
        tmp_10_reg_1627 when (tmp_29_0_1_i_i_fu_1002_p2(0) = '1') else 
        tmp_9_reg_1619;
    valOutput_1_fu_1348_p3 <= 
        tmp_6_i_reg_1811 when (tmp_6_reg_1801(0) = '1') else 
        tmp_7_i_cast_fu_1344_p1;
    valOutput_fu_1275_p2 <= std_logic_vector(unsigned(tmp3_reg_1736) + unsigned(tmp7_fu_1271_p2));
    window_val_0_0_fu_806_p0 <= reg_696;
    window_val_0_0_fu_806_p1 <= window_val_0_0_fu_806_p10(8 - 1 downto 0);
    window_val_0_0_fu_806_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_0_q0),16));
    window_val_0_0_fu_806_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_0_0_fu_806_p0) * signed('0' &window_val_0_0_fu_806_p1))), 16));
    window_val_0_1_fu_820_p0 <= reg_700;
    window_val_0_1_fu_820_p1 <= window_val_0_1_fu_820_p10(8 - 1 downto 0);
    window_val_0_1_fu_820_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_0_q1),16));
    window_val_0_1_fu_820_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_0_1_fu_820_p0) * signed('0' &window_val_0_1_fu_820_p1))), 16));
    window_val_0_2_fu_855_p0 <= reg_704;
    window_val_0_2_fu_855_p1 <= window_val_0_2_fu_855_p10(8 - 1 downto 0);
    window_val_0_2_fu_855_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_0_q1),16));
    window_val_0_2_fu_855_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_0_2_fu_855_p0) * signed('0' &window_val_0_2_fu_855_p1))), 16));
    window_val_1_0_fu_869_p0 <= reg_708;
    window_val_1_0_fu_869_p1 <= window_val_1_0_fu_869_p10(8 - 1 downto 0);
    window_val_1_0_fu_869_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_712),16));
    window_val_1_0_fu_869_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_1_0_fu_869_p0) * signed('0' &window_val_1_0_fu_869_p1))), 16));
    window_val_1_1_fu_1085_p0 <= reg_696;
    window_val_1_1_fu_1085_p1 <= window_val_1_1_fu_1085_p10(8 - 1 downto 0);
    window_val_1_1_fu_1085_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_1_load_2_reg_1594),16));
    window_val_1_1_fu_1085_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_1_1_fu_1085_p0) * signed('0' &window_val_1_1_fu_1085_p1))), 16));
    window_val_1_2_fu_1099_p0 <= reg_700;
    window_val_1_2_fu_1099_p1 <= window_val_1_2_fu_1099_p10(8 - 1 downto 0);
    window_val_1_2_fu_1099_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_712),16));
    window_val_1_2_fu_1099_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_1_2_fu_1099_p0) * signed('0' &window_val_1_2_fu_1099_p1))), 16));
    window_val_2_0_fu_977_p0 <= reg_704;
    window_val_2_0_fu_977_p1 <= window_val_2_0_fu_977_p10(8 - 1 downto 0);
    window_val_2_0_fu_977_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_2_load_1_reg_1604),16));
    window_val_2_0_fu_977_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_2_0_fu_977_p0) * signed('0' &window_val_2_0_fu_977_p1))), 16));
    window_val_2_1_fu_990_p0 <= reg_708;
    window_val_2_1_fu_990_p1 <= window_val_2_1_fu_990_p10(8 - 1 downto 0);
    window_val_2_1_fu_990_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_2_load_2_reg_1609),16));
    window_val_2_1_fu_990_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_2_1_fu_990_p0) * signed('0' &window_val_2_1_fu_990_p1))), 16));
    window_val_2_2_fu_1183_p0 <= reg_704;
    window_val_2_2_fu_1183_p1 <= window_val_2_2_fu_1183_p10(8 - 1 downto 0);
    window_val_2_2_fu_1183_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lineBuff_val_2_load_3_reg_1645),16));
    window_val_2_2_fu_1183_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(window_val_2_2_fu_1183_p0) * signed('0' &window_val_2_2_fu_1183_p1))), 16));
end behav;
