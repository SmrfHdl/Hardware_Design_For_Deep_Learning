// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "processImage.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic processImage::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic processImage::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> processImage::ap_ST_fsm_state1 = "1";
const sc_lv<8> processImage::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<8> processImage::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<8> processImage::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<8> processImage::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<8> processImage::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<8> processImage::ap_ST_fsm_state12 = "1000000";
const sc_lv<8> processImage::ap_ST_fsm_state13 = "10000000";
const sc_lv<32> processImage::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool processImage::ap_const_boolean_1 = true;
const sc_lv<32> processImage::ap_const_lv32_2 = "10";
const bool processImage::ap_const_boolean_0 = false;
const sc_lv<1> processImage::ap_const_lv1_0 = "0";
const sc_lv<32> processImage::ap_const_lv32_5 = "101";
const sc_lv<1> processImage::ap_const_lv1_1 = "1";
const sc_lv<32> processImage::ap_const_lv32_7 = "111";
const sc_lv<32> processImage::ap_const_lv32_4 = "100";
const sc_lv<32> processImage::ap_const_lv32_3 = "11";
const sc_lv<32> processImage::ap_const_lv32_1 = "1";
const sc_lv<19> processImage::ap_const_lv19_1 = "1";
const sc_lv<10> processImage::ap_const_lv10_0 = "0000000000";
const sc_lv<32> processImage::ap_const_lv32_6 = "110";
const sc_lv<64> processImage::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> processImage::ap_const_lv64_1 = "1";
const sc_lv<64> processImage::ap_const_lv64_2 = "10";
const sc_lv<64> processImage::ap_const_lv64_3 = "11";
const sc_lv<64> processImage::ap_const_lv64_4 = "100";
const sc_lv<64> processImage::ap_const_lv64_5 = "101";
const sc_lv<64> processImage::ap_const_lv64_6 = "110";
const sc_lv<64> processImage::ap_const_lv64_7 = "111";
const sc_lv<64> processImage::ap_const_lv64_8 = "1000";
const sc_lv<8> processImage::ap_const_lv8_0 = "00000000";
const sc_lv<19> processImage::ap_const_lv19_40001 = "1000000000000000001";
const sc_lv<19> processImage::ap_const_lv19_201 = "1000000001";
const sc_lv<32> processImage::ap_const_lv32_1F = "11111";
const sc_lv<31> processImage::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> processImage::ap_const_lv32_1FF = "111111111";
const sc_lv<32> processImage::ap_const_lv32_F = "1111";
const sc_lv<17> processImage::ap_const_lv17_0 = "00000000000000000";
const sc_lv<32> processImage::ap_const_lv32_10 = "10000";
const sc_lv<15> processImage::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> processImage::ap_const_lv32_E = "1110";
const sc_lv<10> processImage::ap_const_lv10_201 = "1000000001";
const sc_lv<10> processImage::ap_const_lv10_1 = "1";

processImage::processImage(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lineBuff_val_0_U = new processImage_linebkb("lineBuff_val_0_U");
    lineBuff_val_0_U->clk(ap_clk);
    lineBuff_val_0_U->reset(ap_rst);
    lineBuff_val_0_U->address0(lineBuff_val_0_address0);
    lineBuff_val_0_U->ce0(lineBuff_val_0_ce0);
    lineBuff_val_0_U->we0(lineBuff_val_0_we0);
    lineBuff_val_0_U->d0(lineBuff_val_1_q0);
    lineBuff_val_0_U->q0(lineBuff_val_0_q0);
    lineBuff_val_0_U->address1(lineBuff_val_0_address1);
    lineBuff_val_0_U->ce1(lineBuff_val_0_ce1);
    lineBuff_val_0_U->q1(lineBuff_val_0_q1);
    lineBuff_val_1_U = new processImage_linebkb("lineBuff_val_1_U");
    lineBuff_val_1_U->clk(ap_clk);
    lineBuff_val_1_U->reset(ap_rst);
    lineBuff_val_1_U->address0(lineBuff_val_1_address0);
    lineBuff_val_1_U->ce0(lineBuff_val_1_ce0);
    lineBuff_val_1_U->we0(lineBuff_val_1_we0);
    lineBuff_val_1_U->d0(lineBuff_val_2_q0);
    lineBuff_val_1_U->q0(lineBuff_val_1_q0);
    lineBuff_val_1_U->address1(lineBuff_val_1_address1);
    lineBuff_val_1_U->ce1(lineBuff_val_1_ce1);
    lineBuff_val_1_U->q1(lineBuff_val_1_q1);
    lineBuff_val_2_U = new processImage_linebkb("lineBuff_val_2_U");
    lineBuff_val_2_U->clk(ap_clk);
    lineBuff_val_2_U->reset(ap_rst);
    lineBuff_val_2_U->address0(lineBuff_val_2_address0);
    lineBuff_val_2_U->ce0(lineBuff_val_2_ce0);
    lineBuff_val_2_U->we0(lineBuff_val_2_we0);
    lineBuff_val_2_U->d0(inStream_V_data_V_dout);
    lineBuff_val_2_U->q0(lineBuff_val_2_q0);
    lineBuff_val_2_U->address1(lineBuff_val_2_address1);
    lineBuff_val_2_U->ce1(lineBuff_val_2_ce1);
    lineBuff_val_2_U->q1(lineBuff_val_2_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( inStream_V_id_V0_status );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( inStream_V_id_V0_status );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage4_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_state10_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state11_pp0_stage4_iter1);
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_state13);
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( inStream_V_id_V0_status );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage2_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond2_fu_735_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_countWait_phi_fu_677_p4);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( countWait_reg_673 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( phitmp_reg_1698 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_idxCol_assign_phi_fu_641_p4);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( idxCol_assign_reg_637 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( idxCol_1_reg_1693 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_idxRow_phi_fu_653_p4);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( idxRow_reg_649 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( idxRow_1_reg_1816 );

    SC_METHOD(thread_ap_phi_mux_pixConvolved_assign_phi_fu_665_p4);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( pixConvolved_assign_reg_661 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( pixConvolved_2_reg_1771 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_col_assign_0_2_i_fu_826_p2);
    sensitive << ( pixConvolved_assign_reg_661 );

    SC_METHOD(thread_countWait_2_fu_1422_p2);
    sensitive << ( countWait_1_reg_685 );

    SC_METHOD(thread_exitcond2_fu_735_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_677_p4 );

    SC_METHOD(thread_exitcond_fu_1416_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( countWait_1_reg_685 );

    SC_METHOD(thread_icmp4_fu_901_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( tmp_5_fu_891_p4 );

    SC_METHOD(thread_icmp_fu_885_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( tmp_1_fu_875_p4 );

    SC_METHOD(thread_idxCol_1_fu_956_p3);
    sensitive << ( tmp_2_fu_944_p2 );
    sensitive << ( idxCol_fu_950_p2 );

    SC_METHOD(thread_idxCol_fu_950_p2);
    sensitive << ( idxCol_assign_reg_637 );

    SC_METHOD(thread_idxRow_1_fu_1334_p3);
    sensitive << ( idxRow_reg_649 );
    sensitive << ( tmp_2_reg_1687 );
    sensitive << ( idxRow_2_fu_1328_p2 );

    SC_METHOD(thread_idxRow_2_fu_1328_p2);
    sensitive << ( idxRow_reg_649 );

    SC_METHOD(thread_inStream_V_data_V_blk_n);
    sensitive << ( inStream_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_1488 );

    SC_METHOD(thread_inStream_V_data_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_dest_V_blk_n);
    sensitive << ( inStream_V_dest_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_1488 );

    SC_METHOD(thread_inStream_V_dest_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_id_V0_status);
    sensitive << ( inStream_V_data_V_empty_n );
    sensitive << ( inStream_V_keep_V_empty_n );
    sensitive << ( inStream_V_strb_V_empty_n );
    sensitive << ( inStream_V_user_V_empty_n );
    sensitive << ( inStream_V_last_V_empty_n );
    sensitive << ( inStream_V_id_V_empty_n );
    sensitive << ( inStream_V_dest_V_empty_n );

    SC_METHOD(thread_inStream_V_id_V0_update);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_inStream_V_id_V_blk_n);
    sensitive << ( inStream_V_id_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_1488 );

    SC_METHOD(thread_inStream_V_id_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_keep_V_blk_n);
    sensitive << ( inStream_V_keep_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_1488 );

    SC_METHOD(thread_inStream_V_keep_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_last_V_blk_n);
    sensitive << ( inStream_V_last_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_1488 );

    SC_METHOD(thread_inStream_V_last_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_strb_V_blk_n);
    sensitive << ( inStream_V_strb_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_1488 );

    SC_METHOD(thread_inStream_V_strb_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_user_V_blk_n);
    sensitive << ( inStream_V_user_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_1488 );

    SC_METHOD(thread_inStream_V_user_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_kernel_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_kernel_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lineBuff_val_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_i_reg_1492 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_7_0_i_fu_778_p1 );

    SC_METHOD(thread_lineBuff_val_0_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_7_0_1_i_fu_791_p1 );
    sensitive << ( tmp_7_0_2_i_fu_832_p1 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_lineBuff_val_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_i_fu_741_p1 );
    sensitive << ( lineBuff_val_1_addr_reg_1497 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_7_0_i_fu_778_p1 );

    SC_METHOD(thread_lineBuff_val_1_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_7_0_1_i_fu_791_p1 );
    sensitive << ( tmp_7_0_2_i_fu_832_p1 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_lineBuff_val_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lineBuff_val_1_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_i_fu_741_p1 );
    sensitive << ( lineBuff_val_2_addr_reg_1502 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_7_0_i_fu_778_p1 );

    SC_METHOD(thread_lineBuff_val_2_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_7_0_1_i_fu_791_p1 );
    sensitive << ( tmp_7_0_2_i_fu_832_p1 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_lineBuff_val_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lineBuff_val_2_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_or_cond_fu_907_p2);
    sensitive << ( icmp_fu_885_p2 );
    sensitive << ( icmp4_fu_901_p2 );

    SC_METHOD(thread_outStream_V_data_V_blk_n);
    sensitive << ( outStream_V_data_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );

    SC_METHOD(thread_outStream_V_data_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( tmp_data_V_fu_1408_p3 );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_outStream_V_data_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_dest_V_blk_n);
    sensitive << ( outStream_V_dest_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );

    SC_METHOD(thread_outStream_V_dest_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( tmp_dest_V_1_reg_572 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( tmp_dest_V_reg_1535_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_outStream_V_dest_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_id_V1_status);
    sensitive << ( outStream_V_data_V_full_n );
    sensitive << ( outStream_V_keep_V_full_n );
    sensitive << ( outStream_V_strb_V_full_n );
    sensitive << ( outStream_V_user_V_full_n );
    sensitive << ( outStream_V_last_V_full_n );
    sensitive << ( outStream_V_id_V_full_n );
    sensitive << ( outStream_V_dest_V_full_n );

    SC_METHOD(thread_outStream_V_id_V1_update);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage4_11001 );

    SC_METHOD(thread_outStream_V_id_V_blk_n);
    sensitive << ( outStream_V_id_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );

    SC_METHOD(thread_outStream_V_id_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( tmp_id_V_1_reg_585 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( tmp_id_V_reg_1529_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_outStream_V_id_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_keep_V_blk_n);
    sensitive << ( outStream_V_keep_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );

    SC_METHOD(thread_outStream_V_keep_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( tmp_keep_V_1_reg_624 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( tmp_keep_V_reg_1511_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_outStream_V_keep_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_last_V_blk_n);
    sensitive << ( outStream_V_last_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );

    SC_METHOD(thread_outStream_V_last_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_outStream_V_last_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_strb_V_blk_n);
    sensitive << ( outStream_V_strb_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );

    SC_METHOD(thread_outStream_V_strb_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( tmp_strb_V_1_reg_611 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( tmp_strb_V_reg_1517_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_outStream_V_strb_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_user_V_blk_n);
    sensitive << ( outStream_V_user_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );

    SC_METHOD(thread_outStream_V_user_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( tmp_user_V_1_reg_598 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( tmp_user_V_reg_1523_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_outStream_V_user_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_p_i_fu_1366_p3);
    sensitive << ( tmp_8_fu_1358_p3 );
    sensitive << ( tmp_7_fu_1354_p1 );

    SC_METHOD(thread_p_neg_i_fu_1292_p2);
    sensitive << ( tmp_tr_i_fu_1280_p1 );

    SC_METHOD(thread_phitmp_fu_964_p2);
    sensitive << ( countWait_reg_673 );

    SC_METHOD(thread_pixConvolved_1_fu_1162_p3);
    sensitive << ( pixConvolved_reg_1546 );
    sensitive << ( sel_tmp9_fu_1158_p2 );
    sensitive << ( sel_tmp7_fu_1152_p3 );

    SC_METHOD(thread_pixConvolved_2_fu_1169_p3);
    sensitive << ( tmp_2_reg_1687 );
    sensitive << ( pixConvolved_1_fu_1162_p3 );

    SC_METHOD(thread_pixConvolved_fu_785_p2);
    sensitive << ( ap_phi_mux_pixConvolved_assign_phi_fu_665_p4 );

    SC_METHOD(thread_sel_tmp10_fu_1401_p3);
    sensitive << ( sel_tmp6_reg_1761 );
    sensitive << ( valInWindow_0_minVal_7_fu_1378_p3 );
    sensitive << ( sel_tmp_fu_1394_p3 );

    SC_METHOD(thread_sel_tmp1_fu_925_p3);
    sensitive << ( pixConvolved_assign_reg_661 );
    sensitive << ( pixConvolved_reg_1546 );
    sensitive << ( or_cond_fu_907_p2 );

    SC_METHOD(thread_sel_tmp2_fu_717_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation );

    SC_METHOD(thread_sel_tmp3_fu_932_p2);
    sensitive << ( sel_tmp2_reg_1473 );
    sensitive << ( or_cond_fu_907_p2 );

    SC_METHOD(thread_sel_tmp4_fu_937_p3);
    sensitive << ( pixConvolved_reg_1546 );
    sensitive << ( sel_tmp3_fu_932_p2 );
    sensitive << ( sel_tmp1_fu_925_p3 );

    SC_METHOD(thread_sel_tmp5_fu_723_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation );

    SC_METHOD(thread_sel_tmp6_fu_1148_p2);
    sensitive << ( sel_tmp5_reg_1478 );
    sensitive << ( or_cond_reg_1650 );

    SC_METHOD(thread_sel_tmp7_fu_1152_p3);
    sensitive << ( pixConvolved_reg_1546 );
    sensitive << ( sel_tmp4_reg_1682 );
    sensitive << ( sel_tmp6_fu_1148_p2 );

    SC_METHOD(thread_sel_tmp8_fu_729_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation );

    SC_METHOD(thread_sel_tmp9_fu_1158_p2);
    sensitive << ( sel_tmp8_reg_1483 );
    sensitive << ( or_cond_reg_1650 );

    SC_METHOD(thread_sel_tmp_fu_1394_p3);
    sensitive << ( sel_tmp3_reg_1677 );
    sensitive << ( p_i_fu_1366_p3 );

    SC_METHOD(thread_tmp1_fu_996_p2);
    sensitive << ( window_val_2_1_fu_990_p2 );
    sensitive << ( window_val_2_0_fu_977_p2 );

    SC_METHOD(thread_tmp2_fu_1105_p2);
    sensitive << ( window_val_1_1_fu_1085_p2 );
    sensitive << ( window_val_1_2_fu_1099_p2 );

    SC_METHOD(thread_tmp3_fu_1111_p2);
    sensitive << ( tmp1_reg_1703 );
    sensitive << ( tmp2_fu_1105_p2 );

    SC_METHOD(thread_tmp4_fu_913_p2);
    sensitive << ( window_val_0_0_reg_1579 );
    sensitive << ( window_val_0_1_reg_1584 );

    SC_METHOD(thread_tmp5_fu_1189_p2);
    sensitive << ( window_val_0_2_reg_1635 );
    sensitive << ( window_val_2_2_fu_1183_p2 );

    SC_METHOD(thread_tmp6_fu_1194_p2);
    sensitive << ( window_val_1_0_reg_1640 );
    sensitive << ( tmp5_fu_1189_p2 );

    SC_METHOD(thread_tmp7_fu_1271_p2);
    sensitive << ( tmp4_reg_1656 );
    sensitive << ( tmp6_reg_1776 );

    SC_METHOD(thread_tmp_10_fu_843_p1);
    sensitive << ( window_val_0_1_fu_820_p2 );

    SC_METHOD(thread_tmp_11_fu_917_p1);
    sensitive << ( window_val_0_2_fu_855_p2 );

    SC_METHOD(thread_tmp_12_fu_921_p1);
    sensitive << ( window_val_1_0_fu_869_p2 );

    SC_METHOD(thread_tmp_13_fu_1116_p1);
    sensitive << ( window_val_1_1_fu_1085_p2 );

    SC_METHOD(thread_tmp_14_fu_1132_p1);
    sensitive << ( window_val_1_2_fu_1099_p2 );

    SC_METHOD(thread_tmp_15_fu_1036_p1);
    sensitive << ( window_val_2_0_fu_977_p2 );

    SC_METHOD(thread_tmp_16_fu_1040_p1);
    sensitive << ( window_val_2_1_fu_990_p2 );

    SC_METHOD(thread_tmp_17_fu_1233_p1);
    sensitive << ( window_val_2_2_fu_1183_p2 );

    SC_METHOD(thread_tmp_1_fu_875_p4);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_653_p4 );

    SC_METHOD(thread_tmp_29_0_1_i_i_fu_1002_p2);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_9_reg_1619 );
    sensitive << ( tmp_10_reg_1627 );

    SC_METHOD(thread_tmp_29_0_2_i_i_fu_1012_p2);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_11_reg_1661 );
    sensitive << ( valInWindow_0_minVal_fu_1006_p3 );

    SC_METHOD(thread_tmp_29_1_1_i_i_fu_1120_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( valInWindow_0_minVal_2_reg_1708 );
    sensitive << ( tmp_13_fu_1116_p1 );

    SC_METHOD(thread_tmp_29_1_2_i_i_fu_1199_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( valInWindow_0_minVal_3_reg_1741 );
    sensitive << ( tmp_14_reg_1747 );
    sensitive << ( sel_tmp6_reg_1761 );
    sensitive << ( sel_tmp9_reg_1766 );

    SC_METHOD(thread_tmp_29_1_i_i_fu_1024_p2);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_12_reg_1669 );
    sensitive << ( valInWindow_0_minVal_1_fu_1017_p3 );

    SC_METHOD(thread_tmp_29_2_1_i_i_fu_1221_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( tmp_16_reg_1722 );
    sensitive << ( sel_tmp6_reg_1761 );
    sensitive << ( sel_tmp9_reg_1766 );
    sensitive << ( valInWindow_0_minVal_5_fu_1214_p3 );

    SC_METHOD(thread_tmp_29_2_2_i_i_fu_1374_p2);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( sel_tmp6_reg_1761 );
    sensitive << ( sel_tmp9_reg_1766 );
    sensitive << ( valInWindow_0_minVal_6_reg_1781 );
    sensitive << ( tmp_17_reg_1787 );

    SC_METHOD(thread_tmp_29_2_i_i_fu_1209_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( tmp_15_reg_1714 );
    sensitive << ( sel_tmp6_reg_1761 );
    sensitive << ( sel_tmp9_reg_1766 );
    sensitive << ( valInWindow_0_minVal_4_fu_1203_p3 );

    SC_METHOD(thread_tmp_2_fu_944_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( idxCol_assign_reg_637 );
    sensitive << ( ap_block_pp0_stage4_11001 );

    SC_METHOD(thread_tmp_2_i_cast_fu_1308_p1);
    sensitive << ( tmp_4_fu_1298_p4 );

    SC_METHOD(thread_tmp_35_0_1_i_i_fu_1044_p2);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_9_reg_1619 );
    sensitive << ( tmp_10_reg_1627 );

    SC_METHOD(thread_tmp_35_0_2_i_i_fu_1054_p2);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_11_reg_1661 );
    sensitive << ( valInWindow_0_maxVal_fu_1048_p3 );

    SC_METHOD(thread_tmp_35_1_1_i_i_fu_1136_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( valInWindow_0_maxVal_2_reg_1730 );
    sensitive << ( tmp_13_fu_1116_p1 );

    SC_METHOD(thread_tmp_35_1_2_i_i_fu_1237_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( tmp_14_reg_1747 );
    sensitive << ( valInWindow_0_maxVal_3_reg_1755 );
    sensitive << ( sel_tmp9_reg_1766 );

    SC_METHOD(thread_tmp_35_1_i_i_fu_1066_p2);
    sensitive << ( exitcond2_reg_1488 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_12_reg_1669 );
    sensitive << ( valInWindow_0_maxVal_1_fu_1059_p3 );

    SC_METHOD(thread_tmp_35_2_1_i_i_fu_1259_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( tmp_16_reg_1722 );
    sensitive << ( sel_tmp9_reg_1766 );
    sensitive << ( valInWindow_0_maxVal_5_fu_1252_p3 );

    SC_METHOD(thread_tmp_35_2_2_i_i_fu_1384_p2);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( sel_tmp9_reg_1766 );
    sensitive << ( tmp_17_reg_1787 );
    sensitive << ( valInWindow_0_maxVal_6_reg_1795 );

    SC_METHOD(thread_tmp_35_2_i_i_fu_1247_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( exitcond2_reg_1488_pp0_iter1_reg );
    sensitive << ( tmp_15_reg_1714 );
    sensitive << ( sel_tmp9_reg_1766 );
    sensitive << ( valInWindow_0_maxVal_4_fu_1241_p3 );

    SC_METHOD(thread_tmp_3_fu_747_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond2_fu_735_p2 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_677_p4 );

    SC_METHOD(thread_tmp_4_fu_1298_p4);
    sensitive << ( p_neg_i_fu_1292_p2 );

    SC_METHOD(thread_tmp_5_fu_891_p4);
    sensitive << ( idxCol_assign_reg_637 );

    SC_METHOD(thread_tmp_5_i_fu_1341_p1);
    sensitive << ( tmp_4_i_reg_1806 );

    SC_METHOD(thread_tmp_6_i_fu_1322_p2);
    sensitive << ( tmp_2_i_cast_fu_1308_p1 );

    SC_METHOD(thread_tmp_7_0_1_i_fu_791_p1);
    sensitive << ( pixConvolved_fu_785_p2 );

    SC_METHOD(thread_tmp_7_0_2_i_fu_832_p1);
    sensitive << ( col_assign_0_2_i_fu_826_p2 );

    SC_METHOD(thread_tmp_7_0_i_fu_778_p1);
    sensitive << ( ap_phi_mux_pixConvolved_assign_phi_fu_665_p4 );

    SC_METHOD(thread_tmp_7_fu_1354_p1);
    sensitive << ( valOutput_1_fu_1348_p3 );

    SC_METHOD(thread_tmp_7_i_cast_fu_1344_p1);
    sensitive << ( tmp_5_i_fu_1341_p1 );

    SC_METHOD(thread_tmp_8_fu_1358_p3);
    sensitive << ( valOutput_1_fu_1348_p3 );

    SC_METHOD(thread_tmp_9_fu_839_p1);
    sensitive << ( window_val_0_0_fu_806_p2 );

    SC_METHOD(thread_tmp_data_V_fu_1408_p3);
    sensitive << ( sel_tmp9_reg_1766 );
    sensitive << ( valInWindow_0_maxVal_7_fu_1388_p3 );
    sensitive << ( sel_tmp10_fu_1401_p3 );

    SC_METHOD(thread_tmp_i_fu_741_p1);
    sensitive << ( ap_phi_mux_idxCol_assign_phi_fu_641_p4 );

    SC_METHOD(thread_tmp_tr_i_fu_1280_p1);
    sensitive << ( valOutput_fu_1275_p2 );

    SC_METHOD(thread_valInWindow_0_maxVal_1_fu_1059_p3);
    sensitive << ( tmp_11_reg_1661 );
    sensitive << ( valInWindow_0_maxVal_fu_1048_p3 );
    sensitive << ( tmp_35_0_2_i_i_fu_1054_p2 );

    SC_METHOD(thread_valInWindow_0_maxVal_2_fu_1071_p3);
    sensitive << ( tmp_12_reg_1669 );
    sensitive << ( valInWindow_0_maxVal_1_fu_1059_p3 );
    sensitive << ( tmp_35_1_i_i_fu_1066_p2 );

    SC_METHOD(thread_valInWindow_0_maxVal_3_fu_1141_p3);
    sensitive << ( valInWindow_0_maxVal_2_reg_1730 );
    sensitive << ( tmp_13_fu_1116_p1 );
    sensitive << ( tmp_35_1_1_i_i_fu_1136_p2 );

    SC_METHOD(thread_valInWindow_0_maxVal_4_fu_1241_p3);
    sensitive << ( tmp_14_reg_1747 );
    sensitive << ( valInWindow_0_maxVal_3_reg_1755 );
    sensitive << ( tmp_35_1_2_i_i_fu_1237_p2 );

    SC_METHOD(thread_valInWindow_0_maxVal_5_fu_1252_p3);
    sensitive << ( tmp_15_reg_1714 );
    sensitive << ( valInWindow_0_maxVal_4_fu_1241_p3 );
    sensitive << ( tmp_35_2_i_i_fu_1247_p2 );

    SC_METHOD(thread_valInWindow_0_maxVal_6_fu_1264_p3);
    sensitive << ( tmp_16_reg_1722 );
    sensitive << ( valInWindow_0_maxVal_5_fu_1252_p3 );
    sensitive << ( tmp_35_2_1_i_i_fu_1259_p2 );

    SC_METHOD(thread_valInWindow_0_maxVal_7_fu_1388_p3);
    sensitive << ( tmp_17_reg_1787 );
    sensitive << ( valInWindow_0_maxVal_6_reg_1795 );
    sensitive << ( tmp_35_2_2_i_i_fu_1384_p2 );

    SC_METHOD(thread_valInWindow_0_maxVal_fu_1048_p3);
    sensitive << ( tmp_9_reg_1619 );
    sensitive << ( tmp_10_reg_1627 );
    sensitive << ( tmp_35_0_1_i_i_fu_1044_p2 );

    SC_METHOD(thread_valInWindow_0_minVal_1_fu_1017_p3);
    sensitive << ( tmp_11_reg_1661 );
    sensitive << ( valInWindow_0_minVal_fu_1006_p3 );
    sensitive << ( tmp_29_0_2_i_i_fu_1012_p2 );

    SC_METHOD(thread_valInWindow_0_minVal_2_fu_1029_p3);
    sensitive << ( tmp_12_reg_1669 );
    sensitive << ( valInWindow_0_minVal_1_fu_1017_p3 );
    sensitive << ( tmp_29_1_i_i_fu_1024_p2 );

    SC_METHOD(thread_valInWindow_0_minVal_3_fu_1125_p3);
    sensitive << ( valInWindow_0_minVal_2_reg_1708 );
    sensitive << ( tmp_13_fu_1116_p1 );
    sensitive << ( tmp_29_1_1_i_i_fu_1120_p2 );

    SC_METHOD(thread_valInWindow_0_minVal_4_fu_1203_p3);
    sensitive << ( valInWindow_0_minVal_3_reg_1741 );
    sensitive << ( tmp_14_reg_1747 );
    sensitive << ( tmp_29_1_2_i_i_fu_1199_p2 );

    SC_METHOD(thread_valInWindow_0_minVal_5_fu_1214_p3);
    sensitive << ( tmp_15_reg_1714 );
    sensitive << ( valInWindow_0_minVal_4_fu_1203_p3 );
    sensitive << ( tmp_29_2_i_i_fu_1209_p2 );

    SC_METHOD(thread_valInWindow_0_minVal_6_fu_1226_p3);
    sensitive << ( tmp_16_reg_1722 );
    sensitive << ( valInWindow_0_minVal_5_fu_1214_p3 );
    sensitive << ( tmp_29_2_1_i_i_fu_1221_p2 );

    SC_METHOD(thread_valInWindow_0_minVal_7_fu_1378_p3);
    sensitive << ( valInWindow_0_minVal_6_reg_1781 );
    sensitive << ( tmp_17_reg_1787 );
    sensitive << ( tmp_29_2_2_i_i_fu_1374_p2 );

    SC_METHOD(thread_valInWindow_0_minVal_fu_1006_p3);
    sensitive << ( tmp_9_reg_1619 );
    sensitive << ( tmp_10_reg_1627 );
    sensitive << ( tmp_29_0_1_i_i_fu_1002_p2 );

    SC_METHOD(thread_valOutput_1_fu_1348_p3);
    sensitive << ( tmp_6_reg_1801 );
    sensitive << ( tmp_6_i_reg_1811 );
    sensitive << ( tmp_7_i_cast_fu_1344_p1 );

    SC_METHOD(thread_valOutput_fu_1275_p2);
    sensitive << ( tmp3_reg_1736 );
    sensitive << ( tmp7_fu_1271_p2 );

    SC_METHOD(thread_window_val_0_0_fu_806_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( reg_696 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_window_val_0_0_fu_806_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( window_val_0_0_fu_806_p10 );

    SC_METHOD(thread_window_val_0_0_fu_806_p10);
    sensitive << ( lineBuff_val_0_q0 );

    SC_METHOD(thread_window_val_0_0_fu_806_p2);
    sensitive << ( window_val_0_0_fu_806_p0 );
    sensitive << ( window_val_0_0_fu_806_p1 );

    SC_METHOD(thread_window_val_0_1_fu_820_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( reg_700 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_window_val_0_1_fu_820_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( window_val_0_1_fu_820_p10 );

    SC_METHOD(thread_window_val_0_1_fu_820_p10);
    sensitive << ( lineBuff_val_0_q1 );

    SC_METHOD(thread_window_val_0_1_fu_820_p2);
    sensitive << ( window_val_0_1_fu_820_p0 );
    sensitive << ( window_val_0_1_fu_820_p1 );

    SC_METHOD(thread_window_val_0_2_fu_855_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( reg_704 );

    SC_METHOD(thread_window_val_0_2_fu_855_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( window_val_0_2_fu_855_p10 );

    SC_METHOD(thread_window_val_0_2_fu_855_p10);
    sensitive << ( lineBuff_val_0_q1 );

    SC_METHOD(thread_window_val_0_2_fu_855_p2);
    sensitive << ( window_val_0_2_fu_855_p0 );
    sensitive << ( window_val_0_2_fu_855_p1 );

    SC_METHOD(thread_window_val_1_0_fu_869_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( reg_708 );

    SC_METHOD(thread_window_val_1_0_fu_869_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( window_val_1_0_fu_869_p10 );

    SC_METHOD(thread_window_val_1_0_fu_869_p10);
    sensitive << ( reg_712 );

    SC_METHOD(thread_window_val_1_0_fu_869_p2);
    sensitive << ( window_val_1_0_fu_869_p0 );
    sensitive << ( window_val_1_0_fu_869_p1 );

    SC_METHOD(thread_window_val_1_1_fu_1085_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_696 );

    SC_METHOD(thread_window_val_1_1_fu_1085_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( window_val_1_1_fu_1085_p10 );

    SC_METHOD(thread_window_val_1_1_fu_1085_p10);
    sensitive << ( lineBuff_val_1_load_2_reg_1594 );

    SC_METHOD(thread_window_val_1_1_fu_1085_p2);
    sensitive << ( window_val_1_1_fu_1085_p0 );
    sensitive << ( window_val_1_1_fu_1085_p1 );

    SC_METHOD(thread_window_val_1_2_fu_1099_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_700 );

    SC_METHOD(thread_window_val_1_2_fu_1099_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( window_val_1_2_fu_1099_p10 );

    SC_METHOD(thread_window_val_1_2_fu_1099_p10);
    sensitive << ( reg_712 );

    SC_METHOD(thread_window_val_1_2_fu_1099_p2);
    sensitive << ( window_val_1_2_fu_1099_p0 );
    sensitive << ( window_val_1_2_fu_1099_p1 );

    SC_METHOD(thread_window_val_2_0_fu_977_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_704 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_window_val_2_0_fu_977_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( window_val_2_0_fu_977_p10 );

    SC_METHOD(thread_window_val_2_0_fu_977_p10);
    sensitive << ( lineBuff_val_2_load_1_reg_1604 );

    SC_METHOD(thread_window_val_2_0_fu_977_p2);
    sensitive << ( window_val_2_0_fu_977_p0 );
    sensitive << ( window_val_2_0_fu_977_p1 );

    SC_METHOD(thread_window_val_2_1_fu_990_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( reg_708 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_window_val_2_1_fu_990_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( window_val_2_1_fu_990_p10 );

    SC_METHOD(thread_window_val_2_1_fu_990_p10);
    sensitive << ( lineBuff_val_2_load_2_reg_1609 );

    SC_METHOD(thread_window_val_2_1_fu_990_p2);
    sensitive << ( window_val_2_1_fu_990_p0 );
    sensitive << ( window_val_2_1_fu_990_p1 );

    SC_METHOD(thread_window_val_2_2_fu_1183_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_704 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_window_val_2_2_fu_1183_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( window_val_2_2_fu_1183_p10 );

    SC_METHOD(thread_window_val_2_2_fu_1183_p10);
    sensitive << ( lineBuff_val_2_load_3_reg_1645 );

    SC_METHOD(thread_window_val_2_2_fu_1183_p2);
    sensitive << ( window_val_2_2_fu_1183_p0 );
    sensitive << ( window_val_2_2_fu_1183_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_1416_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( exitcond2_fu_735_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "processImage_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inStream_V_data_V_dout, "(port)inStream_V_data_V_dout");
    sc_trace(mVcdFile, inStream_V_data_V_empty_n, "(port)inStream_V_data_V_empty_n");
    sc_trace(mVcdFile, inStream_V_data_V_read, "(port)inStream_V_data_V_read");
    sc_trace(mVcdFile, inStream_V_keep_V_dout, "(port)inStream_V_keep_V_dout");
    sc_trace(mVcdFile, inStream_V_keep_V_empty_n, "(port)inStream_V_keep_V_empty_n");
    sc_trace(mVcdFile, inStream_V_keep_V_read, "(port)inStream_V_keep_V_read");
    sc_trace(mVcdFile, inStream_V_strb_V_dout, "(port)inStream_V_strb_V_dout");
    sc_trace(mVcdFile, inStream_V_strb_V_empty_n, "(port)inStream_V_strb_V_empty_n");
    sc_trace(mVcdFile, inStream_V_strb_V_read, "(port)inStream_V_strb_V_read");
    sc_trace(mVcdFile, inStream_V_user_V_dout, "(port)inStream_V_user_V_dout");
    sc_trace(mVcdFile, inStream_V_user_V_empty_n, "(port)inStream_V_user_V_empty_n");
    sc_trace(mVcdFile, inStream_V_user_V_read, "(port)inStream_V_user_V_read");
    sc_trace(mVcdFile, inStream_V_last_V_dout, "(port)inStream_V_last_V_dout");
    sc_trace(mVcdFile, inStream_V_last_V_empty_n, "(port)inStream_V_last_V_empty_n");
    sc_trace(mVcdFile, inStream_V_last_V_read, "(port)inStream_V_last_V_read");
    sc_trace(mVcdFile, inStream_V_id_V_dout, "(port)inStream_V_id_V_dout");
    sc_trace(mVcdFile, inStream_V_id_V_empty_n, "(port)inStream_V_id_V_empty_n");
    sc_trace(mVcdFile, inStream_V_id_V_read, "(port)inStream_V_id_V_read");
    sc_trace(mVcdFile, inStream_V_dest_V_dout, "(port)inStream_V_dest_V_dout");
    sc_trace(mVcdFile, inStream_V_dest_V_empty_n, "(port)inStream_V_dest_V_empty_n");
    sc_trace(mVcdFile, inStream_V_dest_V_read, "(port)inStream_V_dest_V_read");
    sc_trace(mVcdFile, outStream_V_data_V_din, "(port)outStream_V_data_V_din");
    sc_trace(mVcdFile, outStream_V_data_V_full_n, "(port)outStream_V_data_V_full_n");
    sc_trace(mVcdFile, outStream_V_data_V_write, "(port)outStream_V_data_V_write");
    sc_trace(mVcdFile, outStream_V_keep_V_din, "(port)outStream_V_keep_V_din");
    sc_trace(mVcdFile, outStream_V_keep_V_full_n, "(port)outStream_V_keep_V_full_n");
    sc_trace(mVcdFile, outStream_V_keep_V_write, "(port)outStream_V_keep_V_write");
    sc_trace(mVcdFile, outStream_V_strb_V_din, "(port)outStream_V_strb_V_din");
    sc_trace(mVcdFile, outStream_V_strb_V_full_n, "(port)outStream_V_strb_V_full_n");
    sc_trace(mVcdFile, outStream_V_strb_V_write, "(port)outStream_V_strb_V_write");
    sc_trace(mVcdFile, outStream_V_user_V_din, "(port)outStream_V_user_V_din");
    sc_trace(mVcdFile, outStream_V_user_V_full_n, "(port)outStream_V_user_V_full_n");
    sc_trace(mVcdFile, outStream_V_user_V_write, "(port)outStream_V_user_V_write");
    sc_trace(mVcdFile, outStream_V_last_V_din, "(port)outStream_V_last_V_din");
    sc_trace(mVcdFile, outStream_V_last_V_full_n, "(port)outStream_V_last_V_full_n");
    sc_trace(mVcdFile, outStream_V_last_V_write, "(port)outStream_V_last_V_write");
    sc_trace(mVcdFile, outStream_V_id_V_din, "(port)outStream_V_id_V_din");
    sc_trace(mVcdFile, outStream_V_id_V_full_n, "(port)outStream_V_id_V_full_n");
    sc_trace(mVcdFile, outStream_V_id_V_write, "(port)outStream_V_id_V_write");
    sc_trace(mVcdFile, outStream_V_dest_V_din, "(port)outStream_V_dest_V_din");
    sc_trace(mVcdFile, outStream_V_dest_V_full_n, "(port)outStream_V_dest_V_full_n");
    sc_trace(mVcdFile, outStream_V_dest_V_write, "(port)outStream_V_dest_V_write");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, kernel_address1, "(port)kernel_address1");
    sc_trace(mVcdFile, kernel_ce1, "(port)kernel_ce1");
    sc_trace(mVcdFile, kernel_q1, "(port)kernel_q1");
    sc_trace(mVcdFile, operation, "(port)operation");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, inStream_V_data_V_blk_n, "inStream_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond2_reg_1488, "exitcond2_reg_1488");
    sc_trace(mVcdFile, inStream_V_keep_V_blk_n, "inStream_V_keep_V_blk_n");
    sc_trace(mVcdFile, inStream_V_strb_V_blk_n, "inStream_V_strb_V_blk_n");
    sc_trace(mVcdFile, inStream_V_user_V_blk_n, "inStream_V_user_V_blk_n");
    sc_trace(mVcdFile, inStream_V_last_V_blk_n, "inStream_V_last_V_blk_n");
    sc_trace(mVcdFile, inStream_V_id_V_blk_n, "inStream_V_id_V_blk_n");
    sc_trace(mVcdFile, inStream_V_dest_V_blk_n, "inStream_V_dest_V_blk_n");
    sc_trace(mVcdFile, outStream_V_data_V_blk_n, "outStream_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, tmp_3_reg_1507, "tmp_3_reg_1507");
    sc_trace(mVcdFile, tmp_3_reg_1507_pp0_iter1_reg, "tmp_3_reg_1507_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond_fu_1416_p2, "exitcond_fu_1416_p2");
    sc_trace(mVcdFile, outStream_V_keep_V_blk_n, "outStream_V_keep_V_blk_n");
    sc_trace(mVcdFile, outStream_V_strb_V_blk_n, "outStream_V_strb_V_blk_n");
    sc_trace(mVcdFile, outStream_V_user_V_blk_n, "outStream_V_user_V_blk_n");
    sc_trace(mVcdFile, outStream_V_last_V_blk_n, "outStream_V_last_V_blk_n");
    sc_trace(mVcdFile, outStream_V_id_V_blk_n, "outStream_V_id_V_blk_n");
    sc_trace(mVcdFile, outStream_V_dest_V_blk_n, "outStream_V_dest_V_blk_n");
    sc_trace(mVcdFile, tmp_dest_V_1_reg_572, "tmp_dest_V_1_reg_572");
    sc_trace(mVcdFile, tmp_id_V_1_reg_585, "tmp_id_V_1_reg_585");
    sc_trace(mVcdFile, tmp_user_V_1_reg_598, "tmp_user_V_1_reg_598");
    sc_trace(mVcdFile, tmp_strb_V_1_reg_611, "tmp_strb_V_1_reg_611");
    sc_trace(mVcdFile, tmp_keep_V_1_reg_624, "tmp_keep_V_1_reg_624");
    sc_trace(mVcdFile, idxCol_assign_reg_637, "idxCol_assign_reg_637");
    sc_trace(mVcdFile, idxRow_reg_649, "idxRow_reg_649");
    sc_trace(mVcdFile, pixConvolved_assign_reg_661, "pixConvolved_assign_reg_661");
    sc_trace(mVcdFile, countWait_reg_673, "countWait_reg_673");
    sc_trace(mVcdFile, reg_696, "reg_696");
    sc_trace(mVcdFile, inStream_V_id_V0_status, "inStream_V_id_V0_status");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage3_iter1, "ap_block_state10_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, reg_700, "reg_700");
    sc_trace(mVcdFile, reg_704, "reg_704");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage2_iter1, "ap_block_state9_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, outStream_V_id_V1_status, "outStream_V_id_V1_status");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage4_iter1, "ap_block_state11_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, reg_708, "reg_708");
    sc_trace(mVcdFile, lineBuff_val_1_q0, "lineBuff_val_1_q0");
    sc_trace(mVcdFile, reg_712, "reg_712");
    sc_trace(mVcdFile, lineBuff_val_1_q1, "lineBuff_val_1_q1");
    sc_trace(mVcdFile, sel_tmp2_fu_717_p2, "sel_tmp2_fu_717_p2");
    sc_trace(mVcdFile, sel_tmp2_reg_1473, "sel_tmp2_reg_1473");
    sc_trace(mVcdFile, sel_tmp5_fu_723_p2, "sel_tmp5_fu_723_p2");
    sc_trace(mVcdFile, sel_tmp5_reg_1478, "sel_tmp5_reg_1478");
    sc_trace(mVcdFile, sel_tmp8_fu_729_p2, "sel_tmp8_fu_729_p2");
    sc_trace(mVcdFile, sel_tmp8_reg_1483, "sel_tmp8_reg_1483");
    sc_trace(mVcdFile, exitcond2_fu_735_p2, "exitcond2_fu_735_p2");
    sc_trace(mVcdFile, exitcond2_reg_1488_pp0_iter1_reg, "exitcond2_reg_1488_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_i_fu_741_p1, "tmp_i_fu_741_p1");
    sc_trace(mVcdFile, tmp_i_reg_1492, "tmp_i_reg_1492");
    sc_trace(mVcdFile, lineBuff_val_1_addr_reg_1497, "lineBuff_val_1_addr_reg_1497");
    sc_trace(mVcdFile, lineBuff_val_2_addr_reg_1502, "lineBuff_val_2_addr_reg_1502");
    sc_trace(mVcdFile, tmp_3_fu_747_p2, "tmp_3_fu_747_p2");
    sc_trace(mVcdFile, tmp_keep_V_reg_1511, "tmp_keep_V_reg_1511");
    sc_trace(mVcdFile, tmp_keep_V_reg_1511_pp0_iter1_reg, "tmp_keep_V_reg_1511_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_strb_V_reg_1517, "tmp_strb_V_reg_1517");
    sc_trace(mVcdFile, tmp_strb_V_reg_1517_pp0_iter1_reg, "tmp_strb_V_reg_1517_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_user_V_reg_1523, "tmp_user_V_reg_1523");
    sc_trace(mVcdFile, tmp_user_V_reg_1523_pp0_iter1_reg, "tmp_user_V_reg_1523_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_id_V_reg_1529, "tmp_id_V_reg_1529");
    sc_trace(mVcdFile, tmp_id_V_reg_1529_pp0_iter1_reg, "tmp_id_V_reg_1529_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_dest_V_reg_1535, "tmp_dest_V_reg_1535");
    sc_trace(mVcdFile, tmp_dest_V_reg_1535_pp0_iter1_reg, "tmp_dest_V_reg_1535_pp0_iter1_reg");
    sc_trace(mVcdFile, pixConvolved_fu_785_p2, "pixConvolved_fu_785_p2");
    sc_trace(mVcdFile, pixConvolved_reg_1546, "pixConvolved_reg_1546");
    sc_trace(mVcdFile, window_val_0_0_fu_806_p2, "window_val_0_0_fu_806_p2");
    sc_trace(mVcdFile, window_val_0_0_reg_1579, "window_val_0_0_reg_1579");
    sc_trace(mVcdFile, window_val_0_1_fu_820_p2, "window_val_0_1_fu_820_p2");
    sc_trace(mVcdFile, window_val_0_1_reg_1584, "window_val_0_1_reg_1584");
    sc_trace(mVcdFile, lineBuff_val_1_load_2_reg_1594, "lineBuff_val_1_load_2_reg_1594");
    sc_trace(mVcdFile, lineBuff_val_2_q0, "lineBuff_val_2_q0");
    sc_trace(mVcdFile, lineBuff_val_2_load_1_reg_1604, "lineBuff_val_2_load_1_reg_1604");
    sc_trace(mVcdFile, lineBuff_val_2_q1, "lineBuff_val_2_q1");
    sc_trace(mVcdFile, lineBuff_val_2_load_2_reg_1609, "lineBuff_val_2_load_2_reg_1609");
    sc_trace(mVcdFile, tmp_9_fu_839_p1, "tmp_9_fu_839_p1");
    sc_trace(mVcdFile, tmp_9_reg_1619, "tmp_9_reg_1619");
    sc_trace(mVcdFile, tmp_10_fu_843_p1, "tmp_10_fu_843_p1");
    sc_trace(mVcdFile, tmp_10_reg_1627, "tmp_10_reg_1627");
    sc_trace(mVcdFile, window_val_0_2_fu_855_p2, "window_val_0_2_fu_855_p2");
    sc_trace(mVcdFile, window_val_0_2_reg_1635, "window_val_0_2_reg_1635");
    sc_trace(mVcdFile, window_val_1_0_fu_869_p2, "window_val_1_0_fu_869_p2");
    sc_trace(mVcdFile, window_val_1_0_reg_1640, "window_val_1_0_reg_1640");
    sc_trace(mVcdFile, lineBuff_val_2_load_3_reg_1645, "lineBuff_val_2_load_3_reg_1645");
    sc_trace(mVcdFile, or_cond_fu_907_p2, "or_cond_fu_907_p2");
    sc_trace(mVcdFile, or_cond_reg_1650, "or_cond_reg_1650");
    sc_trace(mVcdFile, tmp4_fu_913_p2, "tmp4_fu_913_p2");
    sc_trace(mVcdFile, tmp4_reg_1656, "tmp4_reg_1656");
    sc_trace(mVcdFile, tmp_11_fu_917_p1, "tmp_11_fu_917_p1");
    sc_trace(mVcdFile, tmp_11_reg_1661, "tmp_11_reg_1661");
    sc_trace(mVcdFile, tmp_12_fu_921_p1, "tmp_12_fu_921_p1");
    sc_trace(mVcdFile, tmp_12_reg_1669, "tmp_12_reg_1669");
    sc_trace(mVcdFile, sel_tmp3_fu_932_p2, "sel_tmp3_fu_932_p2");
    sc_trace(mVcdFile, sel_tmp3_reg_1677, "sel_tmp3_reg_1677");
    sc_trace(mVcdFile, sel_tmp4_fu_937_p3, "sel_tmp4_fu_937_p3");
    sc_trace(mVcdFile, sel_tmp4_reg_1682, "sel_tmp4_reg_1682");
    sc_trace(mVcdFile, tmp_2_fu_944_p2, "tmp_2_fu_944_p2");
    sc_trace(mVcdFile, tmp_2_reg_1687, "tmp_2_reg_1687");
    sc_trace(mVcdFile, idxCol_1_fu_956_p3, "idxCol_1_fu_956_p3");
    sc_trace(mVcdFile, idxCol_1_reg_1693, "idxCol_1_reg_1693");
    sc_trace(mVcdFile, phitmp_fu_964_p2, "phitmp_fu_964_p2");
    sc_trace(mVcdFile, phitmp_reg_1698, "phitmp_reg_1698");
    sc_trace(mVcdFile, tmp1_fu_996_p2, "tmp1_fu_996_p2");
    sc_trace(mVcdFile, tmp1_reg_1703, "tmp1_reg_1703");
    sc_trace(mVcdFile, valInWindow_0_minVal_2_fu_1029_p3, "valInWindow_0_minVal_2_fu_1029_p3");
    sc_trace(mVcdFile, valInWindow_0_minVal_2_reg_1708, "valInWindow_0_minVal_2_reg_1708");
    sc_trace(mVcdFile, tmp_15_fu_1036_p1, "tmp_15_fu_1036_p1");
    sc_trace(mVcdFile, tmp_15_reg_1714, "tmp_15_reg_1714");
    sc_trace(mVcdFile, tmp_16_fu_1040_p1, "tmp_16_fu_1040_p1");
    sc_trace(mVcdFile, tmp_16_reg_1722, "tmp_16_reg_1722");
    sc_trace(mVcdFile, valInWindow_0_maxVal_2_fu_1071_p3, "valInWindow_0_maxVal_2_fu_1071_p3");
    sc_trace(mVcdFile, valInWindow_0_maxVal_2_reg_1730, "valInWindow_0_maxVal_2_reg_1730");
    sc_trace(mVcdFile, tmp3_fu_1111_p2, "tmp3_fu_1111_p2");
    sc_trace(mVcdFile, tmp3_reg_1736, "tmp3_reg_1736");
    sc_trace(mVcdFile, valInWindow_0_minVal_3_fu_1125_p3, "valInWindow_0_minVal_3_fu_1125_p3");
    sc_trace(mVcdFile, valInWindow_0_minVal_3_reg_1741, "valInWindow_0_minVal_3_reg_1741");
    sc_trace(mVcdFile, tmp_14_fu_1132_p1, "tmp_14_fu_1132_p1");
    sc_trace(mVcdFile, tmp_14_reg_1747, "tmp_14_reg_1747");
    sc_trace(mVcdFile, valInWindow_0_maxVal_3_fu_1141_p3, "valInWindow_0_maxVal_3_fu_1141_p3");
    sc_trace(mVcdFile, valInWindow_0_maxVal_3_reg_1755, "valInWindow_0_maxVal_3_reg_1755");
    sc_trace(mVcdFile, sel_tmp6_fu_1148_p2, "sel_tmp6_fu_1148_p2");
    sc_trace(mVcdFile, sel_tmp6_reg_1761, "sel_tmp6_reg_1761");
    sc_trace(mVcdFile, sel_tmp9_fu_1158_p2, "sel_tmp9_fu_1158_p2");
    sc_trace(mVcdFile, sel_tmp9_reg_1766, "sel_tmp9_reg_1766");
    sc_trace(mVcdFile, pixConvolved_2_fu_1169_p3, "pixConvolved_2_fu_1169_p3");
    sc_trace(mVcdFile, pixConvolved_2_reg_1771, "pixConvolved_2_reg_1771");
    sc_trace(mVcdFile, tmp6_fu_1194_p2, "tmp6_fu_1194_p2");
    sc_trace(mVcdFile, tmp6_reg_1776, "tmp6_reg_1776");
    sc_trace(mVcdFile, valInWindow_0_minVal_6_fu_1226_p3, "valInWindow_0_minVal_6_fu_1226_p3");
    sc_trace(mVcdFile, valInWindow_0_minVal_6_reg_1781, "valInWindow_0_minVal_6_reg_1781");
    sc_trace(mVcdFile, tmp_17_fu_1233_p1, "tmp_17_fu_1233_p1");
    sc_trace(mVcdFile, tmp_17_reg_1787, "tmp_17_reg_1787");
    sc_trace(mVcdFile, valInWindow_0_maxVal_6_fu_1264_p3, "valInWindow_0_maxVal_6_fu_1264_p3");
    sc_trace(mVcdFile, valInWindow_0_maxVal_6_reg_1795, "valInWindow_0_maxVal_6_reg_1795");
    sc_trace(mVcdFile, tmp_6_reg_1801, "tmp_6_reg_1801");
    sc_trace(mVcdFile, tmp_4_i_reg_1806, "tmp_4_i_reg_1806");
    sc_trace(mVcdFile, tmp_6_i_fu_1322_p2, "tmp_6_i_fu_1322_p2");
    sc_trace(mVcdFile, tmp_6_i_reg_1811, "tmp_6_i_reg_1811");
    sc_trace(mVcdFile, idxRow_1_fu_1334_p3, "idxRow_1_fu_1334_p3");
    sc_trace(mVcdFile, idxRow_1_reg_1816, "idxRow_1_reg_1816");
    sc_trace(mVcdFile, countWait_2_fu_1422_p2, "countWait_2_fu_1422_p2");
    sc_trace(mVcdFile, ap_block_state13, "ap_block_state13");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, lineBuff_val_0_address0, "lineBuff_val_0_address0");
    sc_trace(mVcdFile, lineBuff_val_0_ce0, "lineBuff_val_0_ce0");
    sc_trace(mVcdFile, lineBuff_val_0_we0, "lineBuff_val_0_we0");
    sc_trace(mVcdFile, lineBuff_val_0_q0, "lineBuff_val_0_q0");
    sc_trace(mVcdFile, lineBuff_val_0_address1, "lineBuff_val_0_address1");
    sc_trace(mVcdFile, lineBuff_val_0_ce1, "lineBuff_val_0_ce1");
    sc_trace(mVcdFile, lineBuff_val_0_q1, "lineBuff_val_0_q1");
    sc_trace(mVcdFile, lineBuff_val_1_address0, "lineBuff_val_1_address0");
    sc_trace(mVcdFile, lineBuff_val_1_ce0, "lineBuff_val_1_ce0");
    sc_trace(mVcdFile, lineBuff_val_1_we0, "lineBuff_val_1_we0");
    sc_trace(mVcdFile, lineBuff_val_1_address1, "lineBuff_val_1_address1");
    sc_trace(mVcdFile, lineBuff_val_1_ce1, "lineBuff_val_1_ce1");
    sc_trace(mVcdFile, lineBuff_val_2_address0, "lineBuff_val_2_address0");
    sc_trace(mVcdFile, lineBuff_val_2_ce0, "lineBuff_val_2_ce0");
    sc_trace(mVcdFile, lineBuff_val_2_we0, "lineBuff_val_2_we0");
    sc_trace(mVcdFile, lineBuff_val_2_address1, "lineBuff_val_2_address1");
    sc_trace(mVcdFile, lineBuff_val_2_ce1, "lineBuff_val_2_ce1");
    sc_trace(mVcdFile, ap_phi_mux_idxCol_assign_phi_fu_641_p4, "ap_phi_mux_idxCol_assign_phi_fu_641_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_idxRow_phi_fu_653_p4, "ap_phi_mux_idxRow_phi_fu_653_p4");
    sc_trace(mVcdFile, ap_phi_mux_pixConvolved_assign_phi_fu_665_p4, "ap_phi_mux_pixConvolved_assign_phi_fu_665_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_phi_mux_countWait_phi_fu_677_p4, "ap_phi_mux_countWait_phi_fu_677_p4");
    sc_trace(mVcdFile, countWait_1_reg_685, "countWait_1_reg_685");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_7_0_i_fu_778_p1, "tmp_7_0_i_fu_778_p1");
    sc_trace(mVcdFile, tmp_7_0_1_i_fu_791_p1, "tmp_7_0_1_i_fu_791_p1");
    sc_trace(mVcdFile, tmp_7_0_2_i_fu_832_p1, "tmp_7_0_2_i_fu_832_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, inStream_V_id_V0_update, "inStream_V_id_V0_update");
    sc_trace(mVcdFile, outStream_V_id_V1_update, "outStream_V_id_V1_update");
    sc_trace(mVcdFile, tmp_data_V_fu_1408_p3, "tmp_data_V_fu_1408_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage4_01001, "ap_block_pp0_stage4_01001");
    sc_trace(mVcdFile, window_val_0_0_fu_806_p0, "window_val_0_0_fu_806_p0");
    sc_trace(mVcdFile, window_val_0_0_fu_806_p1, "window_val_0_0_fu_806_p1");
    sc_trace(mVcdFile, window_val_0_1_fu_820_p0, "window_val_0_1_fu_820_p0");
    sc_trace(mVcdFile, window_val_0_1_fu_820_p1, "window_val_0_1_fu_820_p1");
    sc_trace(mVcdFile, col_assign_0_2_i_fu_826_p2, "col_assign_0_2_i_fu_826_p2");
    sc_trace(mVcdFile, window_val_0_2_fu_855_p0, "window_val_0_2_fu_855_p0");
    sc_trace(mVcdFile, window_val_0_2_fu_855_p1, "window_val_0_2_fu_855_p1");
    sc_trace(mVcdFile, window_val_1_0_fu_869_p0, "window_val_1_0_fu_869_p0");
    sc_trace(mVcdFile, window_val_1_0_fu_869_p1, "window_val_1_0_fu_869_p1");
    sc_trace(mVcdFile, tmp_1_fu_875_p4, "tmp_1_fu_875_p4");
    sc_trace(mVcdFile, tmp_5_fu_891_p4, "tmp_5_fu_891_p4");
    sc_trace(mVcdFile, icmp_fu_885_p2, "icmp_fu_885_p2");
    sc_trace(mVcdFile, icmp4_fu_901_p2, "icmp4_fu_901_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_925_p3, "sel_tmp1_fu_925_p3");
    sc_trace(mVcdFile, idxCol_fu_950_p2, "idxCol_fu_950_p2");
    sc_trace(mVcdFile, window_val_2_0_fu_977_p0, "window_val_2_0_fu_977_p0");
    sc_trace(mVcdFile, window_val_2_0_fu_977_p1, "window_val_2_0_fu_977_p1");
    sc_trace(mVcdFile, window_val_2_1_fu_990_p0, "window_val_2_1_fu_990_p0");
    sc_trace(mVcdFile, window_val_2_1_fu_990_p1, "window_val_2_1_fu_990_p1");
    sc_trace(mVcdFile, window_val_2_1_fu_990_p2, "window_val_2_1_fu_990_p2");
    sc_trace(mVcdFile, window_val_2_0_fu_977_p2, "window_val_2_0_fu_977_p2");
    sc_trace(mVcdFile, tmp_29_0_1_i_i_fu_1002_p2, "tmp_29_0_1_i_i_fu_1002_p2");
    sc_trace(mVcdFile, valInWindow_0_minVal_fu_1006_p3, "valInWindow_0_minVal_fu_1006_p3");
    sc_trace(mVcdFile, tmp_29_0_2_i_i_fu_1012_p2, "tmp_29_0_2_i_i_fu_1012_p2");
    sc_trace(mVcdFile, valInWindow_0_minVal_1_fu_1017_p3, "valInWindow_0_minVal_1_fu_1017_p3");
    sc_trace(mVcdFile, tmp_29_1_i_i_fu_1024_p2, "tmp_29_1_i_i_fu_1024_p2");
    sc_trace(mVcdFile, tmp_35_0_1_i_i_fu_1044_p2, "tmp_35_0_1_i_i_fu_1044_p2");
    sc_trace(mVcdFile, valInWindow_0_maxVal_fu_1048_p3, "valInWindow_0_maxVal_fu_1048_p3");
    sc_trace(mVcdFile, tmp_35_0_2_i_i_fu_1054_p2, "tmp_35_0_2_i_i_fu_1054_p2");
    sc_trace(mVcdFile, valInWindow_0_maxVal_1_fu_1059_p3, "valInWindow_0_maxVal_1_fu_1059_p3");
    sc_trace(mVcdFile, tmp_35_1_i_i_fu_1066_p2, "tmp_35_1_i_i_fu_1066_p2");
    sc_trace(mVcdFile, window_val_1_1_fu_1085_p0, "window_val_1_1_fu_1085_p0");
    sc_trace(mVcdFile, window_val_1_1_fu_1085_p1, "window_val_1_1_fu_1085_p1");
    sc_trace(mVcdFile, window_val_1_2_fu_1099_p0, "window_val_1_2_fu_1099_p0");
    sc_trace(mVcdFile, window_val_1_2_fu_1099_p1, "window_val_1_2_fu_1099_p1");
    sc_trace(mVcdFile, window_val_1_1_fu_1085_p2, "window_val_1_1_fu_1085_p2");
    sc_trace(mVcdFile, window_val_1_2_fu_1099_p2, "window_val_1_2_fu_1099_p2");
    sc_trace(mVcdFile, tmp2_fu_1105_p2, "tmp2_fu_1105_p2");
    sc_trace(mVcdFile, tmp_13_fu_1116_p1, "tmp_13_fu_1116_p1");
    sc_trace(mVcdFile, tmp_29_1_1_i_i_fu_1120_p2, "tmp_29_1_1_i_i_fu_1120_p2");
    sc_trace(mVcdFile, tmp_35_1_1_i_i_fu_1136_p2, "tmp_35_1_1_i_i_fu_1136_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_1152_p3, "sel_tmp7_fu_1152_p3");
    sc_trace(mVcdFile, pixConvolved_1_fu_1162_p3, "pixConvolved_1_fu_1162_p3");
    sc_trace(mVcdFile, window_val_2_2_fu_1183_p0, "window_val_2_2_fu_1183_p0");
    sc_trace(mVcdFile, window_val_2_2_fu_1183_p1, "window_val_2_2_fu_1183_p1");
    sc_trace(mVcdFile, window_val_2_2_fu_1183_p2, "window_val_2_2_fu_1183_p2");
    sc_trace(mVcdFile, tmp5_fu_1189_p2, "tmp5_fu_1189_p2");
    sc_trace(mVcdFile, tmp_29_1_2_i_i_fu_1199_p2, "tmp_29_1_2_i_i_fu_1199_p2");
    sc_trace(mVcdFile, valInWindow_0_minVal_4_fu_1203_p3, "valInWindow_0_minVal_4_fu_1203_p3");
    sc_trace(mVcdFile, tmp_29_2_i_i_fu_1209_p2, "tmp_29_2_i_i_fu_1209_p2");
    sc_trace(mVcdFile, valInWindow_0_minVal_5_fu_1214_p3, "valInWindow_0_minVal_5_fu_1214_p3");
    sc_trace(mVcdFile, tmp_29_2_1_i_i_fu_1221_p2, "tmp_29_2_1_i_i_fu_1221_p2");
    sc_trace(mVcdFile, tmp_35_1_2_i_i_fu_1237_p2, "tmp_35_1_2_i_i_fu_1237_p2");
    sc_trace(mVcdFile, valInWindow_0_maxVal_4_fu_1241_p3, "valInWindow_0_maxVal_4_fu_1241_p3");
    sc_trace(mVcdFile, tmp_35_2_i_i_fu_1247_p2, "tmp_35_2_i_i_fu_1247_p2");
    sc_trace(mVcdFile, valInWindow_0_maxVal_5_fu_1252_p3, "valInWindow_0_maxVal_5_fu_1252_p3");
    sc_trace(mVcdFile, tmp_35_2_1_i_i_fu_1259_p2, "tmp_35_2_1_i_i_fu_1259_p2");
    sc_trace(mVcdFile, tmp7_fu_1271_p2, "tmp7_fu_1271_p2");
    sc_trace(mVcdFile, valOutput_fu_1275_p2, "valOutput_fu_1275_p2");
    sc_trace(mVcdFile, tmp_tr_i_fu_1280_p1, "tmp_tr_i_fu_1280_p1");
    sc_trace(mVcdFile, p_neg_i_fu_1292_p2, "p_neg_i_fu_1292_p2");
    sc_trace(mVcdFile, tmp_4_fu_1298_p4, "tmp_4_fu_1298_p4");
    sc_trace(mVcdFile, tmp_2_i_cast_fu_1308_p1, "tmp_2_i_cast_fu_1308_p1");
    sc_trace(mVcdFile, idxRow_2_fu_1328_p2, "idxRow_2_fu_1328_p2");
    sc_trace(mVcdFile, tmp_5_i_fu_1341_p1, "tmp_5_i_fu_1341_p1");
    sc_trace(mVcdFile, tmp_7_i_cast_fu_1344_p1, "tmp_7_i_cast_fu_1344_p1");
    sc_trace(mVcdFile, valOutput_1_fu_1348_p3, "valOutput_1_fu_1348_p3");
    sc_trace(mVcdFile, tmp_8_fu_1358_p3, "tmp_8_fu_1358_p3");
    sc_trace(mVcdFile, tmp_7_fu_1354_p1, "tmp_7_fu_1354_p1");
    sc_trace(mVcdFile, tmp_29_2_2_i_i_fu_1374_p2, "tmp_29_2_2_i_i_fu_1374_p2");
    sc_trace(mVcdFile, tmp_35_2_2_i_i_fu_1384_p2, "tmp_35_2_2_i_i_fu_1384_p2");
    sc_trace(mVcdFile, p_i_fu_1366_p3, "p_i_fu_1366_p3");
    sc_trace(mVcdFile, valInWindow_0_minVal_7_fu_1378_p3, "valInWindow_0_minVal_7_fu_1378_p3");
    sc_trace(mVcdFile, sel_tmp_fu_1394_p3, "sel_tmp_fu_1394_p3");
    sc_trace(mVcdFile, valInWindow_0_maxVal_7_fu_1388_p3, "valInWindow_0_maxVal_7_fu_1388_p3");
    sc_trace(mVcdFile, sel_tmp10_fu_1401_p3, "sel_tmp10_fu_1401_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, window_val_0_0_fu_806_p10, "window_val_0_0_fu_806_p10");
    sc_trace(mVcdFile, window_val_0_1_fu_820_p10, "window_val_0_1_fu_820_p10");
    sc_trace(mVcdFile, window_val_0_2_fu_855_p10, "window_val_0_2_fu_855_p10");
    sc_trace(mVcdFile, window_val_1_0_fu_869_p10, "window_val_1_0_fu_869_p10");
    sc_trace(mVcdFile, window_val_1_1_fu_1085_p10, "window_val_1_1_fu_1085_p10");
    sc_trace(mVcdFile, window_val_1_2_fu_1099_p10, "window_val_1_2_fu_1099_p10");
    sc_trace(mVcdFile, window_val_2_0_fu_977_p10, "window_val_2_0_fu_977_p10");
    sc_trace(mVcdFile, window_val_2_1_fu_990_p10, "window_val_2_1_fu_990_p10");
    sc_trace(mVcdFile, window_val_2_2_fu_1183_p10, "window_val_2_2_fu_1183_p10");
#endif

    }
    mHdltvinHandle.open("processImage.hdltvin.dat");
    mHdltvoutHandle.open("processImage.hdltvout.dat");
}

processImage::~processImage() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete lineBuff_val_0_U;
    delete lineBuff_val_1_U;
    delete lineBuff_val_2_U;
}

void processImage::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        countWait_1_reg_685 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        countWait_1_reg_685 = countWait_2_fu_1422_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        countWait_reg_673 = phitmp_reg_1698.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        countWait_reg_673 = ap_const_lv19_1;
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        idxCol_assign_reg_637 = idxCol_1_reg_1693.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        idxCol_assign_reg_637 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        idxRow_reg_649 = idxRow_1_reg_1816.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        idxRow_reg_649 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        pixConvolved_assign_reg_661 = pixConvolved_2_reg_1771.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        pixConvolved_assign_reg_661 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0))) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
            reg_712 = lineBuff_val_1_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
            reg_712 = lineBuff_val_1_q0.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond2_reg_1488 = exitcond2_fu_735_p2.read();
        exitcond2_reg_1488_pp0_iter1_reg = exitcond2_reg_1488.read();
        tmp_3_reg_1507_pp0_iter1_reg = tmp_3_reg_1507.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        idxCol_1_reg_1693 = idxCol_1_fu_956_p3.read();
        lineBuff_val_2_load_3_reg_1645 = lineBuff_val_2_q1.read();
        phitmp_reg_1698 = phitmp_fu_964_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        idxRow_1_reg_1816 = idxRow_1_fu_1334_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_735_p2.read()))) {
        lineBuff_val_1_addr_reg_1497 =  (sc_lv<9>) (tmp_i_fu_741_p1.read());
        lineBuff_val_2_addr_reg_1502 =  (sc_lv<9>) (tmp_i_fu_741_p1.read());
        tmp_3_reg_1507 = tmp_3_fu_747_p2.read();
        tmp_i_reg_1492 = tmp_i_fu_741_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_1_load_2_reg_1594 = lineBuff_val_1_q1.read();
        lineBuff_val_2_load_1_reg_1604 = lineBuff_val_2_q0.read();
        lineBuff_val_2_load_2_reg_1609 = lineBuff_val_2_q1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        or_cond_reg_1650 = or_cond_fu_907_p2.read();
        sel_tmp3_reg_1677 = sel_tmp3_fu_932_p2.read();
        sel_tmp4_reg_1682 = sel_tmp4_fu_937_p3.read();
        tmp4_reg_1656 = tmp4_fu_913_p2.read();
        tmp_11_reg_1661 = tmp_11_fu_917_p1.read();
        tmp_12_reg_1669 = tmp_12_fu_921_p1.read();
        tmp_2_reg_1687 = tmp_2_fu_944_p2.read();
        window_val_0_2_reg_1635 = window_val_0_2_fu_855_p2.read();
        window_val_1_0_reg_1640 = window_val_1_0_fu_869_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        pixConvolved_2_reg_1771 = pixConvolved_2_fu_1169_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        pixConvolved_reg_1546 = pixConvolved_fu_785_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        reg_696 = kernel_q0.read();
        reg_700 = kernel_q1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_704 = kernel_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        reg_708 = kernel_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sel_tmp2_reg_1473 = sel_tmp2_fu_717_p2.read();
        sel_tmp5_reg_1478 = sel_tmp5_fu_723_p2.read();
        sel_tmp8_reg_1483 = sel_tmp8_fu_729_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        sel_tmp6_reg_1761 = sel_tmp6_fu_1148_p2.read();
        sel_tmp9_reg_1766 = sel_tmp9_fu_1158_p2.read();
        tmp_14_reg_1747 = tmp_14_fu_1132_p1.read();
        valInWindow_0_maxVal_3_reg_1755 = valInWindow_0_maxVal_3_fu_1141_p3.read();
        valInWindow_0_minVal_3_reg_1741 = valInWindow_0_minVal_3_fu_1125_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, sel_tmp3_reg_1677.read()))) {
        tmp1_reg_1703 = tmp1_fu_996_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, sel_tmp3_reg_1677.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        tmp3_reg_1736 = tmp3_fu_1111_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, sel_tmp3_reg_1677.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, sel_tmp6_reg_1761.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, sel_tmp9_reg_1766.read()))) {
        tmp6_reg_1776 = tmp6_fu_1194_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_10_reg_1627 = tmp_10_fu_843_p1.read();
        tmp_9_reg_1619 = tmp_9_fu_839_p1.read();
        window_val_0_0_reg_1579 = window_val_0_0_fu_806_p2.read();
        window_val_0_1_reg_1584 = window_val_0_1_fu_820_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_15_reg_1714 = tmp_15_fu_1036_p1.read();
        tmp_16_reg_1722 = tmp_16_fu_1040_p1.read();
        valInWindow_0_maxVal_2_reg_1730 = valInWindow_0_maxVal_2_fu_1071_p3.read();
        valInWindow_0_minVal_2_reg_1708 = valInWindow_0_minVal_2_fu_1029_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        tmp_17_reg_1787 = tmp_17_fu_1233_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, sel_tmp3_reg_1677.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, sel_tmp6_reg_1761.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, sel_tmp9_reg_1766.read()))) {
        tmp_4_i_reg_1806 = valOutput_fu_1275_p2.read().range(15, 3);
        tmp_6_i_reg_1811 = tmp_6_i_fu_1322_p2.read();
        tmp_6_reg_1801 = valOutput_fu_1275_p2.read().range(15, 15);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        tmp_dest_V_1_reg_572 = tmp_dest_V_reg_1535_pp0_iter1_reg.read();
        tmp_id_V_1_reg_585 = tmp_id_V_reg_1529_pp0_iter1_reg.read();
        tmp_keep_V_1_reg_624 = tmp_keep_V_reg_1511_pp0_iter1_reg.read();
        tmp_strb_V_1_reg_611 = tmp_strb_V_reg_1517_pp0_iter1_reg.read();
        tmp_user_V_1_reg_598 = tmp_user_V_reg_1523_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_dest_V_reg_1535 = inStream_V_dest_V_dout.read();
        tmp_id_V_reg_1529 = inStream_V_id_V_dout.read();
        tmp_keep_V_reg_1511 = inStream_V_keep_V_dout.read();
        tmp_strb_V_reg_1517 = inStream_V_strb_V_dout.read();
        tmp_user_V_reg_1523 = inStream_V_user_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_dest_V_reg_1535_pp0_iter1_reg = tmp_dest_V_reg_1535.read();
        tmp_id_V_reg_1529_pp0_iter1_reg = tmp_id_V_reg_1529.read();
        tmp_keep_V_reg_1511_pp0_iter1_reg = tmp_keep_V_reg_1511.read();
        tmp_strb_V_reg_1517_pp0_iter1_reg = tmp_strb_V_reg_1517.read();
        tmp_user_V_reg_1523_pp0_iter1_reg = tmp_user_V_reg_1523.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, sel_tmp9_reg_1766.read()))) {
        valInWindow_0_maxVal_6_reg_1795 = valInWindow_0_maxVal_6_fu_1264_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, sel_tmp9_reg_1766.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, sel_tmp6_reg_1761.read()))) {
        valInWindow_0_minVal_6_reg_1781 = valInWindow_0_minVal_6_fu_1226_p3.read();
    }
}

void processImage::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void processImage::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void processImage::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void processImage::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void processImage::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void processImage::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void processImage::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[6];
}

void processImage::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[7];
}

void processImage::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V0_status.read()));
}

void processImage::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V0_status.read()));
}

void processImage::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage4_01001() {
    ap_block_pp0_stage4_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_state10_pp0_stage3_iter1() {
    ap_block_state10_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state11_pp0_stage4_iter1() {
    ap_block_state11_pp0_stage4_iter1 = (esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_state13() {
    ap_block_state13 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V0_status.read()));
}

void processImage::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state9_pp0_stage2_iter1() {
    ap_block_state9_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_735_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void processImage::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1416_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void processImage::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void processImage::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void processImage::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void processImage::thread_ap_phi_mux_countWait_phi_fu_677_p4() {
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_countWait_phi_fu_677_p4 = phitmp_reg_1698.read();
    } else {
        ap_phi_mux_countWait_phi_fu_677_p4 = countWait_reg_673.read();
    }
}

void processImage::thread_ap_phi_mux_idxCol_assign_phi_fu_641_p4() {
    if ((esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_idxCol_assign_phi_fu_641_p4 = idxCol_1_reg_1693.read();
    } else {
        ap_phi_mux_idxCol_assign_phi_fu_641_p4 = idxCol_assign_reg_637.read();
    }
}

void processImage::thread_ap_phi_mux_idxRow_phi_fu_653_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()))) {
        ap_phi_mux_idxRow_phi_fu_653_p4 = idxRow_1_reg_1816.read();
    } else {
        ap_phi_mux_idxRow_phi_fu_653_p4 = idxRow_reg_649.read();
    }
}

void processImage::thread_ap_phi_mux_pixConvolved_assign_phi_fu_665_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_1488_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        ap_phi_mux_pixConvolved_assign_phi_fu_665_p4 = pixConvolved_2_reg_1771.read();
    } else {
        ap_phi_mux_pixConvolved_assign_phi_fu_665_p4 = pixConvolved_assign_reg_661.read();
    }
}

void processImage::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1416_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void processImage::thread_col_assign_0_2_i_fu_826_p2() {
    col_assign_0_2_i_fu_826_p2 = (!ap_const_lv32_2.is_01() || !pixConvolved_assign_reg_661.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(pixConvolved_assign_reg_661.read()));
}

void processImage::thread_countWait_2_fu_1422_p2() {
    countWait_2_fu_1422_p2 = (!countWait_1_reg_685.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(countWait_1_reg_685.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void processImage::thread_exitcond2_fu_735_p2() {
    exitcond2_fu_735_p2 = (!ap_phi_mux_countWait_phi_fu_677_p4.read().is_01() || !ap_const_lv19_40001.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_countWait_phi_fu_677_p4.read() == ap_const_lv19_40001);
}

void processImage::thread_exitcond_fu_1416_p2() {
    exitcond_fu_1416_p2 = (!countWait_1_reg_685.read().is_01() || !ap_const_lv10_201.is_01())? sc_lv<1>(): sc_lv<1>(countWait_1_reg_685.read() == ap_const_lv10_201);
}

void processImage::thread_icmp4_fu_901_p2() {
    icmp4_fu_901_p2 = (!tmp_5_fu_891_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_5_fu_891_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void processImage::thread_icmp_fu_885_p2() {
    icmp_fu_885_p2 = (!tmp_1_fu_875_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_1_fu_875_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void processImage::thread_idxCol_1_fu_956_p3() {
    idxCol_1_fu_956_p3 = (!tmp_2_fu_944_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_fu_944_p2.read()[0].to_bool())? idxCol_fu_950_p2.read(): ap_const_lv32_0);
}

void processImage::thread_idxCol_fu_950_p2() {
    idxCol_fu_950_p2 = (!ap_const_lv32_1.is_01() || !idxCol_assign_reg_637.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(idxCol_assign_reg_637.read()));
}

void processImage::thread_idxRow_1_fu_1334_p3() {
    idxRow_1_fu_1334_p3 = (!tmp_2_reg_1687.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_1687.read()[0].to_bool())? idxRow_reg_649.read(): idxRow_2_fu_1328_p2.read());
}

void processImage::thread_idxRow_2_fu_1328_p2() {
    idxRow_2_fu_1328_p2 = (!ap_const_lv32_1.is_01() || !idxRow_reg_649.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(idxRow_reg_649.read()));
}

void processImage::thread_inStream_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0))) {
        inStream_V_data_V_blk_n = inStream_V_data_V_empty_n.read();
    } else {
        inStream_V_data_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_data_V_read() {
    inStream_V_data_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_dest_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0))) {
        inStream_V_dest_V_blk_n = inStream_V_dest_V_empty_n.read();
    } else {
        inStream_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_dest_V_read() {
    inStream_V_dest_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_id_V0_status() {
    inStream_V_id_V0_status = (inStream_V_data_V_empty_n.read() & inStream_V_keep_V_empty_n.read() & inStream_V_strb_V_empty_n.read() & inStream_V_user_V_empty_n.read() & inStream_V_last_V_empty_n.read() & inStream_V_id_V_empty_n.read() & inStream_V_dest_V_empty_n.read());
}

void processImage::thread_inStream_V_id_V0_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        inStream_V_id_V0_update = ap_const_logic_1;
    } else {
        inStream_V_id_V0_update = ap_const_logic_0;
    }
}

void processImage::thread_inStream_V_id_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0))) {
        inStream_V_id_V_blk_n = inStream_V_id_V_empty_n.read();
    } else {
        inStream_V_id_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_id_V_read() {
    inStream_V_id_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_keep_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0))) {
        inStream_V_keep_V_blk_n = inStream_V_keep_V_empty_n.read();
    } else {
        inStream_V_keep_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_keep_V_read() {
    inStream_V_keep_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0))) {
        inStream_V_last_V_blk_n = inStream_V_last_V_empty_n.read();
    } else {
        inStream_V_last_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_last_V_read() {
    inStream_V_last_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_strb_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0))) {
        inStream_V_strb_V_blk_n = inStream_V_strb_V_empty_n.read();
    } else {
        inStream_V_strb_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_strb_V_read() {
    inStream_V_strb_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_user_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0))) {
        inStream_V_user_V_blk_n = inStream_V_user_V_empty_n.read();
    } else {
        inStream_V_user_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_user_V_read() {
    inStream_V_user_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_kernel_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_8);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_6);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_4);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_0);
        } else {
            kernel_address0 = "XXXX";
        }
    } else {
        kernel_address0 = "XXXX";
    }
}

void processImage::thread_kernel_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_7);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_5);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_3);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_1);
        } else {
            kernel_address1 = "XXXX";
        }
    } else {
        kernel_address1 = "XXXX";
    }
}

void processImage::thread_kernel_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void processImage::thread_kernel_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_ce1 = ap_const_logic_1;
    } else {
        kernel_ce1 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_0_address0 =  (sc_lv<9>) (tmp_7_0_i_fu_778_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_0_address0 =  (sc_lv<9>) (tmp_i_reg_1492.read());
        } else {
            lineBuff_val_0_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_0_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void processImage::thread_lineBuff_val_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            lineBuff_val_0_address1 =  (sc_lv<9>) (tmp_7_0_2_i_fu_832_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_0_address1 =  (sc_lv<9>) (tmp_7_0_1_i_fu_791_p1.read());
        } else {
            lineBuff_val_0_address1 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_0_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void processImage::thread_lineBuff_val_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_0_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_ce0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_0_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_0_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_0_ce1 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_we0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 =  (sc_lv<9>) (tmp_7_0_i_fu_778_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 = lineBuff_val_1_addr_reg_1497.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 =  (sc_lv<9>) (tmp_i_fu_741_p1.read());
        } else {
            lineBuff_val_1_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_1_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void processImage::thread_lineBuff_val_1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address1 =  (sc_lv<9>) (tmp_7_0_2_i_fu_832_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address1 =  (sc_lv<9>) (tmp_7_0_1_i_fu_791_p1.read());
        } else {
            lineBuff_val_1_address1 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_1_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void processImage::thread_lineBuff_val_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_1_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_ce0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_1_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_1_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_1_ce1 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_1_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_we0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 =  (sc_lv<9>) (tmp_7_0_i_fu_778_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 = lineBuff_val_2_addr_reg_1502.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 =  (sc_lv<9>) (tmp_i_fu_741_p1.read());
        } else {
            lineBuff_val_2_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_2_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void processImage::thread_lineBuff_val_2_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address1 =  (sc_lv<9>) (tmp_7_0_2_i_fu_832_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address1 =  (sc_lv<9>) (tmp_7_0_1_i_fu_791_p1.read());
        } else {
            lineBuff_val_2_address1 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_2_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void processImage::thread_lineBuff_val_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_2_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_ce0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_2_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_2_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_2_ce1 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_1488.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_2_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_we0 = ap_const_logic_0;
    }
}

void processImage::thread_or_cond_fu_907_p2() {
    or_cond_fu_907_p2 = (icmp_fu_885_p2.read() & icmp4_fu_901_p2.read());
}

void processImage::thread_outStream_V_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read())))) {
        outStream_V_data_V_blk_n = outStream_V_data_V_full_n.read();
    } else {
        outStream_V_data_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_data_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_data_V_din = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0))) {
        outStream_V_data_V_din = tmp_data_V_fu_1408_p3.read();
    } else {
        outStream_V_data_V_din =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void processImage::thread_outStream_V_data_V_write() {
    outStream_V_data_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_dest_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read())))) {
        outStream_V_dest_V_blk_n = outStream_V_dest_V_full_n.read();
    } else {
        outStream_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_dest_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_dest_V_din = tmp_dest_V_1_reg_572.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0))) {
        outStream_V_dest_V_din = tmp_dest_V_reg_1535_pp0_iter1_reg.read();
    } else {
        outStream_V_dest_V_din =  (sc_lv<6>) ("XXXXXX");
    }
}

void processImage::thread_outStream_V_dest_V_write() {
    outStream_V_dest_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_id_V1_status() {
    outStream_V_id_V1_status = (outStream_V_data_V_full_n.read() & outStream_V_keep_V_full_n.read() & outStream_V_strb_V_full_n.read() & outStream_V_user_V_full_n.read() & outStream_V_last_V_full_n.read() & outStream_V_id_V_full_n.read() & outStream_V_dest_V_full_n.read());
}

void processImage::thread_outStream_V_id_V1_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        outStream_V_id_V1_update = ap_const_logic_1;
    } else {
        outStream_V_id_V1_update = ap_const_logic_0;
    }
}

void processImage::thread_outStream_V_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read())))) {
        outStream_V_id_V_blk_n = outStream_V_id_V_full_n.read();
    } else {
        outStream_V_id_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_id_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_id_V_din = tmp_id_V_1_reg_585.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0))) {
        outStream_V_id_V_din = tmp_id_V_reg_1529_pp0_iter1_reg.read();
    } else {
        outStream_V_id_V_din =  (sc_lv<5>) ("XXXXX");
    }
}

void processImage::thread_outStream_V_id_V_write() {
    outStream_V_id_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_keep_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read())))) {
        outStream_V_keep_V_blk_n = outStream_V_keep_V_full_n.read();
    } else {
        outStream_V_keep_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_keep_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_keep_V_din = tmp_keep_V_1_reg_624.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0))) {
        outStream_V_keep_V_din = tmp_keep_V_reg_1511_pp0_iter1_reg.read();
    } else {
        outStream_V_keep_V_din =  (sc_lv<1>) ("X");
    }
}

void processImage::thread_outStream_V_keep_V_write() {
    outStream_V_keep_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_last_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read())))) {
        outStream_V_last_V_blk_n = outStream_V_last_V_full_n.read();
    } else {
        outStream_V_last_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_last_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_last_V_din = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0))) {
        outStream_V_last_V_din = ap_const_lv1_0;
    } else {
        outStream_V_last_V_din =  (sc_lv<1>) ("X");
    }
}

void processImage::thread_outStream_V_last_V_write() {
    outStream_V_last_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_strb_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read())))) {
        outStream_V_strb_V_blk_n = outStream_V_strb_V_full_n.read();
    } else {
        outStream_V_strb_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_strb_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_strb_V_din = tmp_strb_V_1_reg_611.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0))) {
        outStream_V_strb_V_din = tmp_strb_V_reg_1517_pp0_iter1_reg.read();
    } else {
        outStream_V_strb_V_din =  (sc_lv<1>) ("X");
    }
}

void processImage::thread_outStream_V_strb_V_write() {
    outStream_V_strb_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_user_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read())))) {
        outStream_V_user_V_blk_n = outStream_V_user_V_full_n.read();
    } else {
        outStream_V_user_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_user_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_user_V_din = tmp_user_V_1_reg_598.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_3_reg_1507_pp0_iter1_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0))) {
        outStream_V_user_V_din = tmp_user_V_reg_1523_pp0_iter1_reg.read();
    } else {
        outStream_V_user_V_din =  (sc_lv<2>) ("XX");
    }
}

void processImage::thread_outStream_V_user_V_write() {
    outStream_V_user_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_p_i_fu_1366_p3() {
    p_i_fu_1366_p3 = (!tmp_8_fu_1358_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_8_fu_1358_p3.read()[0].to_bool())? ap_const_lv8_0: tmp_7_fu_1354_p1.read());
}

void processImage::thread_p_neg_i_fu_1292_p2() {
    p_neg_i_fu_1292_p2 = (!ap_const_lv17_0.is_01() || !tmp_tr_i_fu_1280_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_0) - sc_bigint<17>(tmp_tr_i_fu_1280_p1.read()));
}

void processImage::thread_phitmp_fu_964_p2() {
    phitmp_fu_964_p2 = (!countWait_reg_673.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(countWait_reg_673.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void processImage::thread_pixConvolved_1_fu_1162_p3() {
    pixConvolved_1_fu_1162_p3 = (!sel_tmp9_fu_1158_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_1158_p2.read()[0].to_bool())? pixConvolved_reg_1546.read(): sel_tmp7_fu_1152_p3.read());
}

void processImage::thread_pixConvolved_2_fu_1169_p3() {
    pixConvolved_2_fu_1169_p3 = (!tmp_2_reg_1687.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_1687.read()[0].to_bool())? pixConvolved_1_fu_1162_p3.read(): ap_const_lv32_0);
}

void processImage::thread_pixConvolved_fu_785_p2() {
    pixConvolved_fu_785_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_pixConvolved_assign_phi_fu_665_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_pixConvolved_assign_phi_fu_665_p4.read()));
}

void processImage::thread_sel_tmp10_fu_1401_p3() {
    sel_tmp10_fu_1401_p3 = (!sel_tmp6_reg_1761.read()[0].is_01())? sc_lv<8>(): ((sel_tmp6_reg_1761.read()[0].to_bool())? valInWindow_0_minVal_7_fu_1378_p3.read(): sel_tmp_fu_1394_p3.read());
}

void processImage::thread_sel_tmp1_fu_925_p3() {
    sel_tmp1_fu_925_p3 = (!or_cond_fu_907_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_907_p2.read()[0].to_bool())? pixConvolved_reg_1546.read(): pixConvolved_assign_reg_661.read());
}

void processImage::thread_sel_tmp2_fu_717_p2() {
    sel_tmp2_fu_717_p2 = (!operation.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(operation.read() == ap_const_lv32_0);
}

void processImage::thread_sel_tmp3_fu_932_p2() {
    sel_tmp3_fu_932_p2 = (or_cond_fu_907_p2.read() & sel_tmp2_reg_1473.read());
}

void processImage::thread_sel_tmp4_fu_937_p3() {
    sel_tmp4_fu_937_p3 = (!sel_tmp3_fu_932_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_932_p2.read()[0].to_bool())? pixConvolved_reg_1546.read(): sel_tmp1_fu_925_p3.read());
}

void processImage::thread_sel_tmp5_fu_723_p2() {
    sel_tmp5_fu_723_p2 = (!operation.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(operation.read() == ap_const_lv32_1);
}

void processImage::thread_sel_tmp6_fu_1148_p2() {
    sel_tmp6_fu_1148_p2 = (or_cond_reg_1650.read() & sel_tmp5_reg_1478.read());
}

void processImage::thread_sel_tmp7_fu_1152_p3() {
    sel_tmp7_fu_1152_p3 = (!sel_tmp6_fu_1148_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_fu_1148_p2.read()[0].to_bool())? pixConvolved_reg_1546.read(): sel_tmp4_reg_1682.read());
}

void processImage::thread_sel_tmp8_fu_729_p2() {
    sel_tmp8_fu_729_p2 = (!operation.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): sc_lv<1>(operation.read() == ap_const_lv32_2);
}

void processImage::thread_sel_tmp9_fu_1158_p2() {
    sel_tmp9_fu_1158_p2 = (or_cond_reg_1650.read() & sel_tmp8_reg_1483.read());
}

void processImage::thread_sel_tmp_fu_1394_p3() {
    sel_tmp_fu_1394_p3 = (!sel_tmp3_reg_1677.read()[0].is_01())? sc_lv<8>(): ((sel_tmp3_reg_1677.read()[0].to_bool())? p_i_fu_1366_p3.read(): ap_const_lv8_0);
}

void processImage::thread_tmp1_fu_996_p2() {
    tmp1_fu_996_p2 = (!window_val_2_1_fu_990_p2.read().is_01() || !window_val_2_0_fu_977_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(window_val_2_1_fu_990_p2.read()) + sc_biguint<16>(window_val_2_0_fu_977_p2.read()));
}

void processImage::thread_tmp2_fu_1105_p2() {
    tmp2_fu_1105_p2 = (!window_val_1_1_fu_1085_p2.read().is_01() || !window_val_1_2_fu_1099_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(window_val_1_1_fu_1085_p2.read()) + sc_biguint<16>(window_val_1_2_fu_1099_p2.read()));
}

void processImage::thread_tmp3_fu_1111_p2() {
    tmp3_fu_1111_p2 = (!tmp1_reg_1703.read().is_01() || !tmp2_fu_1105_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp1_reg_1703.read()) + sc_biguint<16>(tmp2_fu_1105_p2.read()));
}

void processImage::thread_tmp4_fu_913_p2() {
    tmp4_fu_913_p2 = (!window_val_0_0_reg_1579.read().is_01() || !window_val_0_1_reg_1584.read().is_01())? sc_lv<16>(): (sc_biguint<16>(window_val_0_0_reg_1579.read()) + sc_biguint<16>(window_val_0_1_reg_1584.read()));
}

void processImage::thread_tmp5_fu_1189_p2() {
    tmp5_fu_1189_p2 = (!window_val_2_2_fu_1183_p2.read().is_01() || !window_val_0_2_reg_1635.read().is_01())? sc_lv<16>(): (sc_biguint<16>(window_val_2_2_fu_1183_p2.read()) + sc_biguint<16>(window_val_0_2_reg_1635.read()));
}

void processImage::thread_tmp6_fu_1194_p2() {
    tmp6_fu_1194_p2 = (!window_val_1_0_reg_1640.read().is_01() || !tmp5_fu_1189_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(window_val_1_0_reg_1640.read()) + sc_biguint<16>(tmp5_fu_1189_p2.read()));
}

void processImage::thread_tmp7_fu_1271_p2() {
    tmp7_fu_1271_p2 = (!tmp4_reg_1656.read().is_01() || !tmp6_reg_1776.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp4_reg_1656.read()) + sc_biguint<16>(tmp6_reg_1776.read()));
}

void processImage::thread_tmp_10_fu_843_p1() {
    tmp_10_fu_843_p1 = window_val_0_1_fu_820_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_11_fu_917_p1() {
    tmp_11_fu_917_p1 = window_val_0_2_fu_855_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_12_fu_921_p1() {
    tmp_12_fu_921_p1 = window_val_1_0_fu_869_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_13_fu_1116_p1() {
    tmp_13_fu_1116_p1 = window_val_1_1_fu_1085_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_14_fu_1132_p1() {
    tmp_14_fu_1132_p1 = window_val_1_2_fu_1099_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_15_fu_1036_p1() {
    tmp_15_fu_1036_p1 = window_val_2_0_fu_977_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_16_fu_1040_p1() {
    tmp_16_fu_1040_p1 = window_val_2_1_fu_990_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_17_fu_1233_p1() {
    tmp_17_fu_1233_p1 = window_val_2_2_fu_1183_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_1_fu_875_p4() {
    tmp_1_fu_875_p4 = ap_phi_mux_idxRow_phi_fu_653_p4.read().range(31, 1);
}

void processImage::thread_tmp_29_0_1_i_i_fu_1002_p2() {
    tmp_29_0_1_i_i_fu_1002_p2 = (!tmp_10_reg_1627.read().is_01() || !tmp_9_reg_1619.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_10_reg_1627.read()) < sc_biguint<8>(tmp_9_reg_1619.read()));
}

void processImage::thread_tmp_29_0_2_i_i_fu_1012_p2() {
    tmp_29_0_2_i_i_fu_1012_p2 = (!tmp_11_reg_1661.read().is_01() || !valInWindow_0_minVal_fu_1006_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_11_reg_1661.read()) < sc_biguint<8>(valInWindow_0_minVal_fu_1006_p3.read()));
}

void processImage::thread_tmp_29_1_1_i_i_fu_1120_p2() {
    tmp_29_1_1_i_i_fu_1120_p2 = (!tmp_13_fu_1116_p1.read().is_01() || !valInWindow_0_minVal_2_reg_1708.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_13_fu_1116_p1.read()) < sc_biguint<8>(valInWindow_0_minVal_2_reg_1708.read()));
}

void processImage::thread_tmp_29_1_2_i_i_fu_1199_p2() {
    tmp_29_1_2_i_i_fu_1199_p2 = (!tmp_14_reg_1747.read().is_01() || !valInWindow_0_minVal_3_reg_1741.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_14_reg_1747.read()) < sc_biguint<8>(valInWindow_0_minVal_3_reg_1741.read()));
}

void processImage::thread_tmp_29_1_i_i_fu_1024_p2() {
    tmp_29_1_i_i_fu_1024_p2 = (!tmp_12_reg_1669.read().is_01() || !valInWindow_0_minVal_1_fu_1017_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_12_reg_1669.read()) < sc_biguint<8>(valInWindow_0_minVal_1_fu_1017_p3.read()));
}

void processImage::thread_tmp_29_2_1_i_i_fu_1221_p2() {
    tmp_29_2_1_i_i_fu_1221_p2 = (!tmp_16_reg_1722.read().is_01() || !valInWindow_0_minVal_5_fu_1214_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_16_reg_1722.read()) < sc_biguint<8>(valInWindow_0_minVal_5_fu_1214_p3.read()));
}

void processImage::thread_tmp_29_2_2_i_i_fu_1374_p2() {
    tmp_29_2_2_i_i_fu_1374_p2 = (!tmp_17_reg_1787.read().is_01() || !valInWindow_0_minVal_6_reg_1781.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_17_reg_1787.read()) < sc_biguint<8>(valInWindow_0_minVal_6_reg_1781.read()));
}

void processImage::thread_tmp_29_2_i_i_fu_1209_p2() {
    tmp_29_2_i_i_fu_1209_p2 = (!tmp_15_reg_1714.read().is_01() || !valInWindow_0_minVal_4_fu_1203_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_15_reg_1714.read()) < sc_biguint<8>(valInWindow_0_minVal_4_fu_1203_p3.read()));
}

void processImage::thread_tmp_2_fu_944_p2() {
    tmp_2_fu_944_p2 = (!idxCol_assign_reg_637.read().is_01() || !ap_const_lv32_1FF.is_01())? sc_lv<1>(): (sc_bigint<32>(idxCol_assign_reg_637.read()) < sc_bigint<32>(ap_const_lv32_1FF));
}

void processImage::thread_tmp_2_i_cast_fu_1308_p1() {
    tmp_2_i_cast_fu_1308_p1 = esl_zext<15,14>(tmp_4_fu_1298_p4.read());
}

void processImage::thread_tmp_35_0_1_i_i_fu_1044_p2() {
    tmp_35_0_1_i_i_fu_1044_p2 = (!tmp_10_reg_1627.read().is_01() || !tmp_9_reg_1619.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_10_reg_1627.read()) > sc_biguint<8>(tmp_9_reg_1619.read()));
}

void processImage::thread_tmp_35_0_2_i_i_fu_1054_p2() {
    tmp_35_0_2_i_i_fu_1054_p2 = (!tmp_11_reg_1661.read().is_01() || !valInWindow_0_maxVal_fu_1048_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_11_reg_1661.read()) > sc_biguint<8>(valInWindow_0_maxVal_fu_1048_p3.read()));
}

void processImage::thread_tmp_35_1_1_i_i_fu_1136_p2() {
    tmp_35_1_1_i_i_fu_1136_p2 = (!tmp_13_fu_1116_p1.read().is_01() || !valInWindow_0_maxVal_2_reg_1730.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_13_fu_1116_p1.read()) > sc_biguint<8>(valInWindow_0_maxVal_2_reg_1730.read()));
}

void processImage::thread_tmp_35_1_2_i_i_fu_1237_p2() {
    tmp_35_1_2_i_i_fu_1237_p2 = (!tmp_14_reg_1747.read().is_01() || !valInWindow_0_maxVal_3_reg_1755.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_14_reg_1747.read()) > sc_biguint<8>(valInWindow_0_maxVal_3_reg_1755.read()));
}

void processImage::thread_tmp_35_1_i_i_fu_1066_p2() {
    tmp_35_1_i_i_fu_1066_p2 = (!tmp_12_reg_1669.read().is_01() || !valInWindow_0_maxVal_1_fu_1059_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_12_reg_1669.read()) > sc_biguint<8>(valInWindow_0_maxVal_1_fu_1059_p3.read()));
}

void processImage::thread_tmp_35_2_1_i_i_fu_1259_p2() {
    tmp_35_2_1_i_i_fu_1259_p2 = (!tmp_16_reg_1722.read().is_01() || !valInWindow_0_maxVal_5_fu_1252_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_16_reg_1722.read()) > sc_biguint<8>(valInWindow_0_maxVal_5_fu_1252_p3.read()));
}

void processImage::thread_tmp_35_2_2_i_i_fu_1384_p2() {
    tmp_35_2_2_i_i_fu_1384_p2 = (!tmp_17_reg_1787.read().is_01() || !valInWindow_0_maxVal_6_reg_1795.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_17_reg_1787.read()) > sc_biguint<8>(valInWindow_0_maxVal_6_reg_1795.read()));
}

void processImage::thread_tmp_35_2_i_i_fu_1247_p2() {
    tmp_35_2_i_i_fu_1247_p2 = (!tmp_15_reg_1714.read().is_01() || !valInWindow_0_maxVal_4_fu_1241_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_15_reg_1714.read()) > sc_biguint<8>(valInWindow_0_maxVal_4_fu_1241_p3.read()));
}

void processImage::thread_tmp_3_fu_747_p2() {
    tmp_3_fu_747_p2 = (!ap_phi_mux_countWait_phi_fu_677_p4.read().is_01() || !ap_const_lv19_201.is_01())? sc_lv<1>(): (sc_biguint<19>(ap_phi_mux_countWait_phi_fu_677_p4.read()) > sc_biguint<19>(ap_const_lv19_201));
}

void processImage::thread_tmp_4_fu_1298_p4() {
    tmp_4_fu_1298_p4 = p_neg_i_fu_1292_p2.read().range(16, 3);
}

void processImage::thread_tmp_5_fu_891_p4() {
    tmp_5_fu_891_p4 = idxCol_assign_reg_637.read().range(31, 1);
}

void processImage::thread_tmp_5_i_fu_1341_p1() {
    tmp_5_i_fu_1341_p1 = esl_sext<14,13>(tmp_4_i_reg_1806.read());
}

void processImage::thread_tmp_6_i_fu_1322_p2() {
    tmp_6_i_fu_1322_p2 = (!ap_const_lv15_0.is_01() || !tmp_2_i_cast_fu_1308_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(ap_const_lv15_0) - sc_biguint<15>(tmp_2_i_cast_fu_1308_p1.read()));
}

void processImage::thread_tmp_7_0_1_i_fu_791_p1() {
    tmp_7_0_1_i_fu_791_p1 = esl_zext<64,32>(pixConvolved_fu_785_p2.read());
}

void processImage::thread_tmp_7_0_2_i_fu_832_p1() {
    tmp_7_0_2_i_fu_832_p1 = esl_zext<64,32>(col_assign_0_2_i_fu_826_p2.read());
}

void processImage::thread_tmp_7_0_i_fu_778_p1() {
    tmp_7_0_i_fu_778_p1 = esl_zext<64,32>(ap_phi_mux_pixConvolved_assign_phi_fu_665_p4.read());
}

void processImage::thread_tmp_7_fu_1354_p1() {
    tmp_7_fu_1354_p1 = valOutput_1_fu_1348_p3.read().range(8-1, 0);
}

void processImage::thread_tmp_7_i_cast_fu_1344_p1() {
    tmp_7_i_cast_fu_1344_p1 = esl_zext<15,14>(tmp_5_i_fu_1341_p1.read());
}

void processImage::thread_tmp_8_fu_1358_p3() {
    tmp_8_fu_1358_p3 = valOutput_1_fu_1348_p3.read().range(14, 14);
}

void processImage::thread_tmp_9_fu_839_p1() {
    tmp_9_fu_839_p1 = window_val_0_0_fu_806_p2.read().range(8-1, 0);
}

void processImage::thread_tmp_data_V_fu_1408_p3() {
    tmp_data_V_fu_1408_p3 = (!sel_tmp9_reg_1766.read()[0].is_01())? sc_lv<8>(): ((sel_tmp9_reg_1766.read()[0].to_bool())? valInWindow_0_maxVal_7_fu_1388_p3.read(): sel_tmp10_fu_1401_p3.read());
}

void processImage::thread_tmp_i_fu_741_p1() {
    tmp_i_fu_741_p1 = esl_zext<64,32>(ap_phi_mux_idxCol_assign_phi_fu_641_p4.read());
}

void processImage::thread_tmp_tr_i_fu_1280_p1() {
    tmp_tr_i_fu_1280_p1 = esl_sext<17,16>(valOutput_fu_1275_p2.read());
}

void processImage::thread_valInWindow_0_maxVal_1_fu_1059_p3() {
    valInWindow_0_maxVal_1_fu_1059_p3 = (!tmp_35_0_2_i_i_fu_1054_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_35_0_2_i_i_fu_1054_p2.read()[0].to_bool())? tmp_11_reg_1661.read(): valInWindow_0_maxVal_fu_1048_p3.read());
}

void processImage::thread_valInWindow_0_maxVal_2_fu_1071_p3() {
    valInWindow_0_maxVal_2_fu_1071_p3 = (!tmp_35_1_i_i_fu_1066_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_35_1_i_i_fu_1066_p2.read()[0].to_bool())? tmp_12_reg_1669.read(): valInWindow_0_maxVal_1_fu_1059_p3.read());
}

void processImage::thread_valInWindow_0_maxVal_3_fu_1141_p3() {
    valInWindow_0_maxVal_3_fu_1141_p3 = (!tmp_35_1_1_i_i_fu_1136_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_35_1_1_i_i_fu_1136_p2.read()[0].to_bool())? tmp_13_fu_1116_p1.read(): valInWindow_0_maxVal_2_reg_1730.read());
}

void processImage::thread_valInWindow_0_maxVal_4_fu_1241_p3() {
    valInWindow_0_maxVal_4_fu_1241_p3 = (!tmp_35_1_2_i_i_fu_1237_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_35_1_2_i_i_fu_1237_p2.read()[0].to_bool())? tmp_14_reg_1747.read(): valInWindow_0_maxVal_3_reg_1755.read());
}

void processImage::thread_valInWindow_0_maxVal_5_fu_1252_p3() {
    valInWindow_0_maxVal_5_fu_1252_p3 = (!tmp_35_2_i_i_fu_1247_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_35_2_i_i_fu_1247_p2.read()[0].to_bool())? tmp_15_reg_1714.read(): valInWindow_0_maxVal_4_fu_1241_p3.read());
}

void processImage::thread_valInWindow_0_maxVal_6_fu_1264_p3() {
    valInWindow_0_maxVal_6_fu_1264_p3 = (!tmp_35_2_1_i_i_fu_1259_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_35_2_1_i_i_fu_1259_p2.read()[0].to_bool())? tmp_16_reg_1722.read(): valInWindow_0_maxVal_5_fu_1252_p3.read());
}

void processImage::thread_valInWindow_0_maxVal_7_fu_1388_p3() {
    valInWindow_0_maxVal_7_fu_1388_p3 = (!tmp_35_2_2_i_i_fu_1384_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_35_2_2_i_i_fu_1384_p2.read()[0].to_bool())? tmp_17_reg_1787.read(): valInWindow_0_maxVal_6_reg_1795.read());
}

void processImage::thread_valInWindow_0_maxVal_fu_1048_p3() {
    valInWindow_0_maxVal_fu_1048_p3 = (!tmp_35_0_1_i_i_fu_1044_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_35_0_1_i_i_fu_1044_p2.read()[0].to_bool())? tmp_10_reg_1627.read(): tmp_9_reg_1619.read());
}

void processImage::thread_valInWindow_0_minVal_1_fu_1017_p3() {
    valInWindow_0_minVal_1_fu_1017_p3 = (!tmp_29_0_2_i_i_fu_1012_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_29_0_2_i_i_fu_1012_p2.read()[0].to_bool())? tmp_11_reg_1661.read(): valInWindow_0_minVal_fu_1006_p3.read());
}

void processImage::thread_valInWindow_0_minVal_2_fu_1029_p3() {
    valInWindow_0_minVal_2_fu_1029_p3 = (!tmp_29_1_i_i_fu_1024_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_29_1_i_i_fu_1024_p2.read()[0].to_bool())? tmp_12_reg_1669.read(): valInWindow_0_minVal_1_fu_1017_p3.read());
}

void processImage::thread_valInWindow_0_minVal_3_fu_1125_p3() {
    valInWindow_0_minVal_3_fu_1125_p3 = (!tmp_29_1_1_i_i_fu_1120_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_29_1_1_i_i_fu_1120_p2.read()[0].to_bool())? tmp_13_fu_1116_p1.read(): valInWindow_0_minVal_2_reg_1708.read());
}

void processImage::thread_valInWindow_0_minVal_4_fu_1203_p3() {
    valInWindow_0_minVal_4_fu_1203_p3 = (!tmp_29_1_2_i_i_fu_1199_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_29_1_2_i_i_fu_1199_p2.read()[0].to_bool())? tmp_14_reg_1747.read(): valInWindow_0_minVal_3_reg_1741.read());
}

void processImage::thread_valInWindow_0_minVal_5_fu_1214_p3() {
    valInWindow_0_minVal_5_fu_1214_p3 = (!tmp_29_2_i_i_fu_1209_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_29_2_i_i_fu_1209_p2.read()[0].to_bool())? tmp_15_reg_1714.read(): valInWindow_0_minVal_4_fu_1203_p3.read());
}

void processImage::thread_valInWindow_0_minVal_6_fu_1226_p3() {
    valInWindow_0_minVal_6_fu_1226_p3 = (!tmp_29_2_1_i_i_fu_1221_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_29_2_1_i_i_fu_1221_p2.read()[0].to_bool())? tmp_16_reg_1722.read(): valInWindow_0_minVal_5_fu_1214_p3.read());
}

void processImage::thread_valInWindow_0_minVal_7_fu_1378_p3() {
    valInWindow_0_minVal_7_fu_1378_p3 = (!tmp_29_2_2_i_i_fu_1374_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_29_2_2_i_i_fu_1374_p2.read()[0].to_bool())? tmp_17_reg_1787.read(): valInWindow_0_minVal_6_reg_1781.read());
}

void processImage::thread_valInWindow_0_minVal_fu_1006_p3() {
    valInWindow_0_minVal_fu_1006_p3 = (!tmp_29_0_1_i_i_fu_1002_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_29_0_1_i_i_fu_1002_p2.read()[0].to_bool())? tmp_10_reg_1627.read(): tmp_9_reg_1619.read());
}

void processImage::thread_valOutput_1_fu_1348_p3() {
    valOutput_1_fu_1348_p3 = (!tmp_6_reg_1801.read()[0].is_01())? sc_lv<15>(): ((tmp_6_reg_1801.read()[0].to_bool())? tmp_6_i_reg_1811.read(): tmp_7_i_cast_fu_1344_p1.read());
}

void processImage::thread_valOutput_fu_1275_p2() {
    valOutput_fu_1275_p2 = (!tmp3_reg_1736.read().is_01() || !tmp7_fu_1271_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp3_reg_1736.read()) + sc_biguint<16>(tmp7_fu_1271_p2.read()));
}

void processImage::thread_window_val_0_0_fu_806_p0() {
    window_val_0_0_fu_806_p0 = reg_696.read();
}

void processImage::thread_window_val_0_0_fu_806_p1() {
    window_val_0_0_fu_806_p1 =  (sc_lv<8>) (window_val_0_0_fu_806_p10.read());
}

void processImage::thread_window_val_0_0_fu_806_p10() {
    window_val_0_0_fu_806_p10 = esl_zext<16,8>(lineBuff_val_0_q0.read());
}

void processImage::thread_window_val_0_0_fu_806_p2() {
    window_val_0_0_fu_806_p2 = (!window_val_0_0_fu_806_p0.read().is_01() || !window_val_0_0_fu_806_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_0_0_fu_806_p0.read()) * sc_biguint<8>(window_val_0_0_fu_806_p1.read());
}

void processImage::thread_window_val_0_1_fu_820_p0() {
    window_val_0_1_fu_820_p0 = reg_700.read();
}

void processImage::thread_window_val_0_1_fu_820_p1() {
    window_val_0_1_fu_820_p1 =  (sc_lv<8>) (window_val_0_1_fu_820_p10.read());
}

void processImage::thread_window_val_0_1_fu_820_p10() {
    window_val_0_1_fu_820_p10 = esl_zext<16,8>(lineBuff_val_0_q1.read());
}

void processImage::thread_window_val_0_1_fu_820_p2() {
    window_val_0_1_fu_820_p2 = (!window_val_0_1_fu_820_p0.read().is_01() || !window_val_0_1_fu_820_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_0_1_fu_820_p0.read()) * sc_biguint<8>(window_val_0_1_fu_820_p1.read());
}

void processImage::thread_window_val_0_2_fu_855_p0() {
    window_val_0_2_fu_855_p0 = reg_704.read();
}

void processImage::thread_window_val_0_2_fu_855_p1() {
    window_val_0_2_fu_855_p1 =  (sc_lv<8>) (window_val_0_2_fu_855_p10.read());
}

void processImage::thread_window_val_0_2_fu_855_p10() {
    window_val_0_2_fu_855_p10 = esl_zext<16,8>(lineBuff_val_0_q1.read());
}

void processImage::thread_window_val_0_2_fu_855_p2() {
    window_val_0_2_fu_855_p2 = (!window_val_0_2_fu_855_p0.read().is_01() || !window_val_0_2_fu_855_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_0_2_fu_855_p0.read()) * sc_biguint<8>(window_val_0_2_fu_855_p1.read());
}

void processImage::thread_window_val_1_0_fu_869_p0() {
    window_val_1_0_fu_869_p0 = reg_708.read();
}

void processImage::thread_window_val_1_0_fu_869_p1() {
    window_val_1_0_fu_869_p1 =  (sc_lv<8>) (window_val_1_0_fu_869_p10.read());
}

void processImage::thread_window_val_1_0_fu_869_p10() {
    window_val_1_0_fu_869_p10 = esl_zext<16,8>(reg_712.read());
}

void processImage::thread_window_val_1_0_fu_869_p2() {
    window_val_1_0_fu_869_p2 = (!window_val_1_0_fu_869_p0.read().is_01() || !window_val_1_0_fu_869_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_1_0_fu_869_p0.read()) * sc_biguint<8>(window_val_1_0_fu_869_p1.read());
}

void processImage::thread_window_val_1_1_fu_1085_p0() {
    window_val_1_1_fu_1085_p0 = reg_696.read();
}

void processImage::thread_window_val_1_1_fu_1085_p1() {
    window_val_1_1_fu_1085_p1 =  (sc_lv<8>) (window_val_1_1_fu_1085_p10.read());
}

void processImage::thread_window_val_1_1_fu_1085_p10() {
    window_val_1_1_fu_1085_p10 = esl_zext<16,8>(lineBuff_val_1_load_2_reg_1594.read());
}

void processImage::thread_window_val_1_1_fu_1085_p2() {
    window_val_1_1_fu_1085_p2 = (!window_val_1_1_fu_1085_p0.read().is_01() || !window_val_1_1_fu_1085_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_1_1_fu_1085_p0.read()) * sc_biguint<8>(window_val_1_1_fu_1085_p1.read());
}

void processImage::thread_window_val_1_2_fu_1099_p0() {
    window_val_1_2_fu_1099_p0 = reg_700.read();
}

void processImage::thread_window_val_1_2_fu_1099_p1() {
    window_val_1_2_fu_1099_p1 =  (sc_lv<8>) (window_val_1_2_fu_1099_p10.read());
}

void processImage::thread_window_val_1_2_fu_1099_p10() {
    window_val_1_2_fu_1099_p10 = esl_zext<16,8>(reg_712.read());
}

void processImage::thread_window_val_1_2_fu_1099_p2() {
    window_val_1_2_fu_1099_p2 = (!window_val_1_2_fu_1099_p0.read().is_01() || !window_val_1_2_fu_1099_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_1_2_fu_1099_p0.read()) * sc_biguint<8>(window_val_1_2_fu_1099_p1.read());
}

void processImage::thread_window_val_2_0_fu_977_p0() {
    window_val_2_0_fu_977_p0 = reg_704.read();
}

void processImage::thread_window_val_2_0_fu_977_p1() {
    window_val_2_0_fu_977_p1 =  (sc_lv<8>) (window_val_2_0_fu_977_p10.read());
}

void processImage::thread_window_val_2_0_fu_977_p10() {
    window_val_2_0_fu_977_p10 = esl_zext<16,8>(lineBuff_val_2_load_1_reg_1604.read());
}

void processImage::thread_window_val_2_0_fu_977_p2() {
    window_val_2_0_fu_977_p2 = (!window_val_2_0_fu_977_p0.read().is_01() || !window_val_2_0_fu_977_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_2_0_fu_977_p0.read()) * sc_biguint<8>(window_val_2_0_fu_977_p1.read());
}

void processImage::thread_window_val_2_1_fu_990_p0() {
    window_val_2_1_fu_990_p0 = reg_708.read();
}

void processImage::thread_window_val_2_1_fu_990_p1() {
    window_val_2_1_fu_990_p1 =  (sc_lv<8>) (window_val_2_1_fu_990_p10.read());
}

void processImage::thread_window_val_2_1_fu_990_p10() {
    window_val_2_1_fu_990_p10 = esl_zext<16,8>(lineBuff_val_2_load_2_reg_1609.read());
}

void processImage::thread_window_val_2_1_fu_990_p2() {
    window_val_2_1_fu_990_p2 = (!window_val_2_1_fu_990_p0.read().is_01() || !window_val_2_1_fu_990_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_2_1_fu_990_p0.read()) * sc_biguint<8>(window_val_2_1_fu_990_p1.read());
}

void processImage::thread_window_val_2_2_fu_1183_p0() {
    window_val_2_2_fu_1183_p0 = reg_704.read();
}

void processImage::thread_window_val_2_2_fu_1183_p1() {
    window_val_2_2_fu_1183_p1 =  (sc_lv<8>) (window_val_2_2_fu_1183_p10.read());
}

void processImage::thread_window_val_2_2_fu_1183_p10() {
    window_val_2_2_fu_1183_p10 = esl_zext<16,8>(lineBuff_val_2_load_3_reg_1645.read());
}

void processImage::thread_window_val_2_2_fu_1183_p2() {
    window_val_2_2_fu_1183_p2 = (!window_val_2_2_fu_1183_p0.read().is_01() || !window_val_2_2_fu_1183_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_2_2_fu_1183_p0.read()) * sc_biguint<8>(window_val_2_2_fu_1183_p1.read());
}

void processImage::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_735_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_735_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1416_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1416_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void processImage::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_data_V_dout\" :  \"" << inStream_V_data_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_data_V_empty_n\" :  \"" << inStream_V_data_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_data_V_read\" :  \"" << inStream_V_data_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_keep_V_dout\" :  \"" << inStream_V_keep_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_keep_V_empty_n\" :  \"" << inStream_V_keep_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_keep_V_read\" :  \"" << inStream_V_keep_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_strb_V_dout\" :  \"" << inStream_V_strb_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_strb_V_empty_n\" :  \"" << inStream_V_strb_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_strb_V_read\" :  \"" << inStream_V_strb_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_user_V_dout\" :  \"" << inStream_V_user_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_user_V_empty_n\" :  \"" << inStream_V_user_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_user_V_read\" :  \"" << inStream_V_user_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_last_V_dout\" :  \"" << inStream_V_last_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_last_V_empty_n\" :  \"" << inStream_V_last_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_last_V_read\" :  \"" << inStream_V_last_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_id_V_dout\" :  \"" << inStream_V_id_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_id_V_empty_n\" :  \"" << inStream_V_id_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_id_V_read\" :  \"" << inStream_V_id_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_dest_V_dout\" :  \"" << inStream_V_dest_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_dest_V_empty_n\" :  \"" << inStream_V_dest_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_dest_V_read\" :  \"" << inStream_V_dest_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_data_V_din\" :  \"" << outStream_V_data_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_data_V_full_n\" :  \"" << outStream_V_data_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_data_V_write\" :  \"" << outStream_V_data_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_keep_V_din\" :  \"" << outStream_V_keep_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_keep_V_full_n\" :  \"" << outStream_V_keep_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_keep_V_write\" :  \"" << outStream_V_keep_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_strb_V_din\" :  \"" << outStream_V_strb_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_strb_V_full_n\" :  \"" << outStream_V_strb_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_strb_V_write\" :  \"" << outStream_V_strb_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_user_V_din\" :  \"" << outStream_V_user_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_user_V_full_n\" :  \"" << outStream_V_user_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_user_V_write\" :  \"" << outStream_V_user_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_last_V_din\" :  \"" << outStream_V_last_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_last_V_full_n\" :  \"" << outStream_V_last_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_last_V_write\" :  \"" << outStream_V_last_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_id_V_din\" :  \"" << outStream_V_id_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_id_V_full_n\" :  \"" << outStream_V_id_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_id_V_write\" :  \"" << outStream_V_id_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_dest_V_din\" :  \"" << outStream_V_dest_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_dest_V_full_n\" :  \"" << outStream_V_dest_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_dest_V_write\" :  \"" << outStream_V_dest_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address1\" :  \"" << kernel_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce1\" :  \"" << kernel_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q1\" :  \"" << kernel_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"operation\" :  \"" << operation.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

