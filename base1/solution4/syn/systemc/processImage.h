// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _processImage_HH_
#define _processImage_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "processImage_mac_eOg.h"
#include "processImage_mac_fYi.h"
#include "processImage_linebkb.h"
#include "processImage_KERNEL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_KERNEL_BUS_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_KERNEL_BUS_DATA_WIDTH = 32>
struct processImage : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<8> > inStream_TDATA;
    sc_in< sc_logic > inStream_TVALID;
    sc_out< sc_logic > inStream_TREADY;
    sc_in< sc_lv<1> > inStream_TKEEP;
    sc_in< sc_lv<1> > inStream_TSTRB;
    sc_in< sc_lv<2> > inStream_TUSER;
    sc_in< sc_lv<1> > inStream_TLAST;
    sc_in< sc_lv<5> > inStream_TID;
    sc_in< sc_lv<6> > inStream_TDEST;
    sc_out< sc_lv<8> > outStream_TDATA;
    sc_out< sc_logic > outStream_TVALID;
    sc_in< sc_logic > outStream_TREADY;
    sc_out< sc_lv<1> > outStream_TKEEP;
    sc_out< sc_lv<1> > outStream_TSTRB;
    sc_out< sc_lv<2> > outStream_TUSER;
    sc_out< sc_lv<1> > outStream_TLAST;
    sc_out< sc_lv<5> > outStream_TID;
    sc_out< sc_lv<6> > outStream_TDEST;
    sc_in< sc_logic > s_axi_KERNEL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_KERNEL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_KERNEL_BUS_ADDR_WIDTH> > s_axi_KERNEL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_KERNEL_BUS_WVALID;
    sc_out< sc_logic > s_axi_KERNEL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_KERNEL_BUS_DATA_WIDTH> > s_axi_KERNEL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_KERNEL_BUS_DATA_WIDTH/8> > s_axi_KERNEL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_KERNEL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_KERNEL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_KERNEL_BUS_ADDR_WIDTH> > s_axi_KERNEL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_KERNEL_BUS_RVALID;
    sc_in< sc_logic > s_axi_KERNEL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_KERNEL_BUS_DATA_WIDTH> > s_axi_KERNEL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_KERNEL_BUS_RRESP;
    sc_out< sc_logic > s_axi_KERNEL_BUS_BVALID;
    sc_in< sc_logic > s_axi_KERNEL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_KERNEL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    processImage(sc_module_name name);
    SC_HAS_PROCESS(processImage);

    ~processImage();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    processImage_KERNEL_BUS_s_axi<C_S_AXI_KERNEL_BUS_ADDR_WIDTH,C_S_AXI_KERNEL_BUS_DATA_WIDTH>* processImage_KERNEL_BUS_s_axi_U;
    processImage_linebkb* lineBuff_val_0_U;
    processImage_linebkb* lineBuff_val_1_U;
    processImage_linebkb* lineBuff_val_2_U;
    processImage_mac_eOg<1,1,8,8,8,8>* processImage_mac_eOg_U1;
    processImage_mac_eOg<1,1,8,8,8,8>* processImage_mac_eOg_U2;
    processImage_mac_fYi<1,1,8,8,8,8>* processImage_mac_fYi_U3;
    processImage_mac_eOg<1,1,8,8,8,8>* processImage_mac_eOg_U4;
    processImage_mac_eOg<1,1,8,8,8,8>* processImage_mac_eOg_U5;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<8> > inStream_V_data_V_0_data_out;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_data_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_data_V_0_ack_out;
    sc_signal< sc_lv<8> > inStream_V_data_V_0_payload_A;
    sc_signal< sc_lv<8> > inStream_V_data_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_data_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_data_V_0_sel;
    sc_signal< sc_logic > inStream_V_data_V_0_load_A;
    sc_signal< sc_logic > inStream_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_data_V_0_state;
    sc_signal< sc_logic > inStream_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > inStream_V_keep_V_0_data_out;
    sc_signal< sc_logic > inStream_V_keep_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_keep_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_keep_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_keep_V_0_ack_out;
    sc_signal< sc_lv<1> > inStream_V_keep_V_0_payload_A;
    sc_signal< sc_lv<1> > inStream_V_keep_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_keep_V_0_sel;
    sc_signal< sc_logic > inStream_V_keep_V_0_load_A;
    sc_signal< sc_logic > inStream_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_keep_V_0_state;
    sc_signal< sc_logic > inStream_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > inStream_V_strb_V_0_data_out;
    sc_signal< sc_logic > inStream_V_strb_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_strb_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_strb_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_strb_V_0_ack_out;
    sc_signal< sc_lv<1> > inStream_V_strb_V_0_payload_A;
    sc_signal< sc_lv<1> > inStream_V_strb_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_strb_V_0_sel;
    sc_signal< sc_logic > inStream_V_strb_V_0_load_A;
    sc_signal< sc_logic > inStream_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_strb_V_0_state;
    sc_signal< sc_logic > inStream_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > inStream_V_user_V_0_data_out;
    sc_signal< sc_logic > inStream_V_user_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_user_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_user_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_user_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_V_user_V_0_payload_A;
    sc_signal< sc_lv<2> > inStream_V_user_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_user_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_user_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_user_V_0_sel;
    sc_signal< sc_logic > inStream_V_user_V_0_load_A;
    sc_signal< sc_logic > inStream_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_user_V_0_state;
    sc_signal< sc_logic > inStream_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > inStream_V_id_V_0_data_out;
    sc_signal< sc_logic > inStream_V_id_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_id_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_id_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_id_V_0_ack_out;
    sc_signal< sc_lv<5> > inStream_V_id_V_0_payload_A;
    sc_signal< sc_lv<5> > inStream_V_id_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_id_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_id_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_id_V_0_sel;
    sc_signal< sc_logic > inStream_V_id_V_0_load_A;
    sc_signal< sc_logic > inStream_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_id_V_0_state;
    sc_signal< sc_logic > inStream_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > inStream_V_dest_V_0_data_out;
    sc_signal< sc_logic > inStream_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_dest_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_dest_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > inStream_V_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > inStream_V_dest_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_dest_V_0_sel;
    sc_signal< sc_logic > inStream_V_dest_V_0_load_A;
    sc_signal< sc_logic > inStream_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_dest_V_0_state;
    sc_signal< sc_logic > inStream_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > outStream_V_data_V_1_data_in;
    sc_signal< sc_lv<8> > outStream_V_data_V_1_data_out;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_data_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_data_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_V_data_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_V_data_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_data_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_data_V_1_sel;
    sc_signal< sc_logic > outStream_V_data_V_1_load_A;
    sc_signal< sc_logic > outStream_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_data_V_1_state;
    sc_signal< sc_logic > outStream_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > outStream_V_keep_V_1_data_in;
    sc_signal< sc_lv<1> > outStream_V_keep_V_1_data_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_keep_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_keep_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel;
    sc_signal< sc_logic > outStream_V_keep_V_1_load_A;
    sc_signal< sc_logic > outStream_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_keep_V_1_state;
    sc_signal< sc_logic > outStream_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > outStream_V_strb_V_1_data_in;
    sc_signal< sc_lv<1> > outStream_V_strb_V_1_data_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_strb_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_strb_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel;
    sc_signal< sc_logic > outStream_V_strb_V_1_load_A;
    sc_signal< sc_logic > outStream_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_strb_V_1_state;
    sc_signal< sc_logic > outStream_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_in;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_out;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_out;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_payload_A;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_user_V_1_sel;
    sc_signal< sc_logic > outStream_V_user_V_1_load_A;
    sc_signal< sc_logic > outStream_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_state;
    sc_signal< sc_logic > outStream_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_in;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_out;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_last_V_1_sel;
    sc_signal< sc_logic > outStream_V_last_V_1_load_A;
    sc_signal< sc_logic > outStream_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_last_V_1_state;
    sc_signal< sc_logic > outStream_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_in;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_out;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_out;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_payload_A;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_id_V_1_sel;
    sc_signal< sc_logic > outStream_V_id_V_1_load_A;
    sc_signal< sc_logic > outStream_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_id_V_1_state;
    sc_signal< sc_logic > outStream_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_in;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel;
    sc_signal< sc_logic > outStream_V_dest_V_1_load_A;
    sc_signal< sc_logic > outStream_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_dest_V_1_state;
    sc_signal< sc_logic > outStream_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > kernel_0;
    sc_signal< sc_lv<8> > kernel_1;
    sc_signal< sc_lv<8> > kernel_2;
    sc_signal< sc_lv<8> > kernel_3;
    sc_signal< sc_lv<8> > kernel_4;
    sc_signal< sc_lv<8> > kernel_5;
    sc_signal< sc_lv<8> > kernel_6;
    sc_signal< sc_lv<8> > kernel_7;
    sc_signal< sc_lv<8> > kernel_8;
    sc_signal< sc_logic > inStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond2_reg_705;
    sc_signal< sc_logic > outStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_8_reg_729;
    sc_signal< sc_lv<1> > tmp_8_reg_729_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_8_reg_729_pp0_iter2_reg;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > exitcond_fu_618_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<5> > tmp_id_V_1_reg_366;
    sc_signal< sc_lv<2> > tmp_user_V_1_reg_379;
    sc_signal< sc_lv<1> > tmp_strb_V_1_reg_392;
    sc_signal< sc_lv<1> > tmp_keep_V_1_reg_405;
    sc_signal< sc_lv<6> > tmp_dest_V_1_reg_418;
    sc_signal< sc_lv<10> > idxCol_assign_reg_431;
    sc_signal< sc_lv<19> > countWait_reg_442;
    sc_signal< sc_lv<8> > lineBuff_val_1_q1;
    sc_signal< sc_lv<8> > reg_465;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state8_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > exitcond2_reg_705_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond2_fu_469_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_705_pp0_iter2_reg;
    sc_signal< sc_lv<64> > tmp_2_fu_483_p1;
    sc_signal< sc_lv<64> > tmp_2_reg_709;
    sc_signal< sc_lv<9> > lineBuff_val_1_addr_reg_714;
    sc_signal< sc_lv<9> > lineBuff_val_2_addr_reg_719;
    sc_signal< sc_lv<10> > tmp_7_fu_539_p3;
    sc_signal< sc_lv<10> > tmp_7_reg_724;
    sc_signal< sc_lv<1> > tmp_8_fu_547_p2;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_733;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_733_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_739;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_739_pp0_iter1_reg;
    sc_signal< sc_lv<2> > tmp_user_V_reg_745;
    sc_signal< sc_lv<2> > tmp_user_V_reg_745_pp0_iter1_reg;
    sc_signal< sc_lv<5> > tmp_id_V_reg_751;
    sc_signal< sc_lv<5> > tmp_id_V_reg_751_pp0_iter1_reg;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_757;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_757_pp0_iter1_reg;
    sc_signal< sc_lv<8> > kernel_0_read_reg_763;
    sc_signal< sc_lv<8> > kernel_1_read_reg_768;
    sc_signal< sc_lv<8> > kernel_2_read_reg_773;
    sc_signal< sc_lv<8> > kernel_3_read_reg_778;
    sc_signal< sc_lv<8> > kernel_3_read_reg_778_pp0_iter1_reg;
    sc_signal< sc_lv<8> > kernel_4_read_reg_783;
    sc_signal< sc_lv<8> > kernel_5_read_reg_788;
    sc_signal< sc_lv<8> > kernel_6_read_reg_793;
    sc_signal< sc_lv<8> > kernel_6_read_reg_793_pp0_iter1_reg;
    sc_signal< sc_lv<8> > kernel_7_read_reg_798;
    sc_signal< sc_lv<8> > kernel_8_read_reg_803;
    sc_signal< sc_lv<8> > kernel_8_read_reg_803_pp0_iter1_reg;
    sc_signal< sc_lv<19> > phitmp_fu_578_p2;
    sc_signal< sc_lv<19> > phitmp_reg_808;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<8> > tmp_13_0_i_fu_584_p2;
    sc_signal< sc_lv<8> > tmp_13_0_i_reg_813;
    sc_signal< sc_lv<8> > lineBuff_val_0_q1;
    sc_signal< sc_lv<8> > lineBuff_val_0_load_1_reg_818;
    sc_signal< sc_lv<8> > lineBuff_val_1_q0;
    sc_signal< sc_lv<8> > lineBuff_val_1_load_3_reg_823;
    sc_signal< sc_lv<8> > lineBuff_val_2_q1;
    sc_signal< sc_lv<8> > lineBuff_val_2_load_1_reg_828;
    sc_signal< sc_lv<8> > tmp_13_2_1_i_fu_589_p2;
    sc_signal< sc_lv<8> > tmp_13_2_1_i_reg_833;
    sc_signal< sc_lv<8> > tmp_13_0_2_i_fu_594_p2;
    sc_signal< sc_lv<8> > tmp_13_0_2_i_reg_838;
    sc_signal< sc_lv<8> > lineBuff_val_2_load_3_reg_843;
    sc_signal< sc_lv<8> > grp_fu_630_p3;
    sc_signal< sc_lv<8> > tmp2_reg_848;
    sc_signal< sc_lv<8> > grp_fu_635_p3;
    sc_signal< sc_lv<8> > tmp5_reg_853;
    sc_signal< sc_lv<8> > tmp4_fu_604_p2;
    sc_signal< sc_lv<8> > tmp4_reg_858;
    sc_signal< sc_lv<8> > tmp_data_V_fu_612_p2;
    sc_signal< sc_lv<10> > i_1_fu_624_p2;
    sc_signal< sc_lv<10> > i_1_reg_871;
    sc_signal< bool > ap_block_state11;
    sc_signal< bool > ap_block_state11_io;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<9> > lineBuff_val_0_address0;
    sc_signal< sc_logic > lineBuff_val_0_ce0;
    sc_signal< sc_logic > lineBuff_val_0_we0;
    sc_signal< sc_lv<8> > lineBuff_val_0_q0;
    sc_signal< sc_lv<9> > lineBuff_val_0_address1;
    sc_signal< sc_logic > lineBuff_val_0_ce1;
    sc_signal< sc_lv<9> > lineBuff_val_1_address0;
    sc_signal< sc_logic > lineBuff_val_1_ce0;
    sc_signal< sc_logic > lineBuff_val_1_we0;
    sc_signal< sc_lv<9> > lineBuff_val_1_address1;
    sc_signal< sc_logic > lineBuff_val_1_ce1;
    sc_signal< sc_lv<9> > lineBuff_val_2_address0;
    sc_signal< sc_logic > lineBuff_val_2_ce0;
    sc_signal< sc_logic > lineBuff_val_2_we0;
    sc_signal< sc_lv<8> > lineBuff_val_2_q0;
    sc_signal< sc_lv<9> > lineBuff_val_2_address1;
    sc_signal< sc_logic > lineBuff_val_2_ce1;
    sc_signal< sc_lv<10> > ap_phi_mux_idxCol_assign_phi_fu_435_p4;
    sc_signal< sc_lv<19> > ap_phi_mux_countWait_phi_fu_446_p4;
    sc_signal< sc_lv<10> > i_reg_454;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<32> > idxCol_assign_cast_fu_479_p1;
    sc_signal< sc_lv<11> > idxCol_assign_cast8_fu_475_p1;
    sc_signal< sc_lv<11> > tmp_6_fu_489_p2;
    sc_signal< sc_lv<9> > tmp_4_fu_507_p1;
    sc_signal< sc_lv<9> > tmp_9_fu_511_p2;
    sc_signal< sc_lv<10> > tmp_10_fu_517_p3;
    sc_signal< sc_lv<9> > tmp_3_fu_503_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_495_p3;
    sc_signal< sc_lv<10> > tmp_11_fu_525_p2;
    sc_signal< sc_lv<10> > tmp_5_fu_531_p3;
    sc_signal< sc_lv<8> > tmp_13_0_i_fu_584_p0;
    sc_signal< sc_lv<8> > tmp_13_2_1_i_fu_589_p0;
    sc_signal< sc_lv<8> > tmp_13_0_2_i_fu_594_p0;
    sc_signal< sc_lv<8> > grp_fu_641_p3;
    sc_signal< sc_lv<8> > grp_fu_653_p3;
    sc_signal< sc_lv<8> > tmp1_fu_608_p2;
    sc_signal< sc_lv<8> > grp_fu_635_p2;
    sc_signal< sc_lv<8> > grp_fu_647_p3;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_state10;
    static const sc_lv<7> ap_ST_fsm_state11;
    static const sc_lv<7> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<19> ap_const_lv19_40001;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<19> ap_const_lv19_201;
    static const sc_lv<10> ap_const_lv10_201;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state11();
    void thread_ap_block_state11_io();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage2_iter1();
    void thread_ap_block_state8_io();
    void thread_ap_block_state8_pp0_stage0_iter2();
    void thread_ap_block_state9_io();
    void thread_ap_block_state9_pp0_stage1_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_countWait_phi_fu_446_p4();
    void thread_ap_phi_mux_idxCol_assign_phi_fu_435_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond2_fu_469_p2();
    void thread_exitcond_fu_618_p2();
    void thread_grp_fu_635_p2();
    void thread_i_1_fu_624_p2();
    void thread_idxCol_assign_cast8_fu_475_p1();
    void thread_idxCol_assign_cast_fu_479_p1();
    void thread_inStream_TDATA_blk_n();
    void thread_inStream_TREADY();
    void thread_inStream_V_data_V_0_ack_in();
    void thread_inStream_V_data_V_0_ack_out();
    void thread_inStream_V_data_V_0_data_out();
    void thread_inStream_V_data_V_0_load_A();
    void thread_inStream_V_data_V_0_load_B();
    void thread_inStream_V_data_V_0_sel();
    void thread_inStream_V_data_V_0_state_cmp_full();
    void thread_inStream_V_data_V_0_vld_in();
    void thread_inStream_V_data_V_0_vld_out();
    void thread_inStream_V_dest_V_0_ack_in();
    void thread_inStream_V_dest_V_0_ack_out();
    void thread_inStream_V_dest_V_0_data_out();
    void thread_inStream_V_dest_V_0_load_A();
    void thread_inStream_V_dest_V_0_load_B();
    void thread_inStream_V_dest_V_0_sel();
    void thread_inStream_V_dest_V_0_state_cmp_full();
    void thread_inStream_V_dest_V_0_vld_in();
    void thread_inStream_V_dest_V_0_vld_out();
    void thread_inStream_V_id_V_0_ack_in();
    void thread_inStream_V_id_V_0_ack_out();
    void thread_inStream_V_id_V_0_data_out();
    void thread_inStream_V_id_V_0_load_A();
    void thread_inStream_V_id_V_0_load_B();
    void thread_inStream_V_id_V_0_sel();
    void thread_inStream_V_id_V_0_state_cmp_full();
    void thread_inStream_V_id_V_0_vld_in();
    void thread_inStream_V_id_V_0_vld_out();
    void thread_inStream_V_keep_V_0_ack_in();
    void thread_inStream_V_keep_V_0_ack_out();
    void thread_inStream_V_keep_V_0_data_out();
    void thread_inStream_V_keep_V_0_load_A();
    void thread_inStream_V_keep_V_0_load_B();
    void thread_inStream_V_keep_V_0_sel();
    void thread_inStream_V_keep_V_0_state_cmp_full();
    void thread_inStream_V_keep_V_0_vld_in();
    void thread_inStream_V_keep_V_0_vld_out();
    void thread_inStream_V_strb_V_0_ack_in();
    void thread_inStream_V_strb_V_0_ack_out();
    void thread_inStream_V_strb_V_0_data_out();
    void thread_inStream_V_strb_V_0_load_A();
    void thread_inStream_V_strb_V_0_load_B();
    void thread_inStream_V_strb_V_0_sel();
    void thread_inStream_V_strb_V_0_state_cmp_full();
    void thread_inStream_V_strb_V_0_vld_in();
    void thread_inStream_V_strb_V_0_vld_out();
    void thread_inStream_V_user_V_0_ack_in();
    void thread_inStream_V_user_V_0_ack_out();
    void thread_inStream_V_user_V_0_data_out();
    void thread_inStream_V_user_V_0_load_A();
    void thread_inStream_V_user_V_0_load_B();
    void thread_inStream_V_user_V_0_sel();
    void thread_inStream_V_user_V_0_state_cmp_full();
    void thread_inStream_V_user_V_0_vld_in();
    void thread_inStream_V_user_V_0_vld_out();
    void thread_lineBuff_val_0_address0();
    void thread_lineBuff_val_0_address1();
    void thread_lineBuff_val_0_ce0();
    void thread_lineBuff_val_0_ce1();
    void thread_lineBuff_val_0_we0();
    void thread_lineBuff_val_1_address0();
    void thread_lineBuff_val_1_address1();
    void thread_lineBuff_val_1_ce0();
    void thread_lineBuff_val_1_ce1();
    void thread_lineBuff_val_1_we0();
    void thread_lineBuff_val_2_address0();
    void thread_lineBuff_val_2_address1();
    void thread_lineBuff_val_2_ce0();
    void thread_lineBuff_val_2_ce1();
    void thread_lineBuff_val_2_we0();
    void thread_outStream_TDATA();
    void thread_outStream_TDATA_blk_n();
    void thread_outStream_TDEST();
    void thread_outStream_TID();
    void thread_outStream_TKEEP();
    void thread_outStream_TLAST();
    void thread_outStream_TSTRB();
    void thread_outStream_TUSER();
    void thread_outStream_TVALID();
    void thread_outStream_V_data_V_1_ack_in();
    void thread_outStream_V_data_V_1_ack_out();
    void thread_outStream_V_data_V_1_data_in();
    void thread_outStream_V_data_V_1_data_out();
    void thread_outStream_V_data_V_1_load_A();
    void thread_outStream_V_data_V_1_load_B();
    void thread_outStream_V_data_V_1_sel();
    void thread_outStream_V_data_V_1_state_cmp_full();
    void thread_outStream_V_data_V_1_vld_in();
    void thread_outStream_V_data_V_1_vld_out();
    void thread_outStream_V_dest_V_1_ack_in();
    void thread_outStream_V_dest_V_1_ack_out();
    void thread_outStream_V_dest_V_1_data_in();
    void thread_outStream_V_dest_V_1_data_out();
    void thread_outStream_V_dest_V_1_load_A();
    void thread_outStream_V_dest_V_1_load_B();
    void thread_outStream_V_dest_V_1_sel();
    void thread_outStream_V_dest_V_1_state_cmp_full();
    void thread_outStream_V_dest_V_1_vld_in();
    void thread_outStream_V_dest_V_1_vld_out();
    void thread_outStream_V_id_V_1_ack_in();
    void thread_outStream_V_id_V_1_ack_out();
    void thread_outStream_V_id_V_1_data_in();
    void thread_outStream_V_id_V_1_data_out();
    void thread_outStream_V_id_V_1_load_A();
    void thread_outStream_V_id_V_1_load_B();
    void thread_outStream_V_id_V_1_sel();
    void thread_outStream_V_id_V_1_state_cmp_full();
    void thread_outStream_V_id_V_1_vld_in();
    void thread_outStream_V_id_V_1_vld_out();
    void thread_outStream_V_keep_V_1_ack_in();
    void thread_outStream_V_keep_V_1_ack_out();
    void thread_outStream_V_keep_V_1_data_in();
    void thread_outStream_V_keep_V_1_data_out();
    void thread_outStream_V_keep_V_1_load_A();
    void thread_outStream_V_keep_V_1_load_B();
    void thread_outStream_V_keep_V_1_sel();
    void thread_outStream_V_keep_V_1_state_cmp_full();
    void thread_outStream_V_keep_V_1_vld_in();
    void thread_outStream_V_keep_V_1_vld_out();
    void thread_outStream_V_last_V_1_ack_in();
    void thread_outStream_V_last_V_1_ack_out();
    void thread_outStream_V_last_V_1_data_in();
    void thread_outStream_V_last_V_1_data_out();
    void thread_outStream_V_last_V_1_load_A();
    void thread_outStream_V_last_V_1_load_B();
    void thread_outStream_V_last_V_1_sel();
    void thread_outStream_V_last_V_1_state_cmp_full();
    void thread_outStream_V_last_V_1_vld_in();
    void thread_outStream_V_last_V_1_vld_out();
    void thread_outStream_V_strb_V_1_ack_in();
    void thread_outStream_V_strb_V_1_ack_out();
    void thread_outStream_V_strb_V_1_data_in();
    void thread_outStream_V_strb_V_1_data_out();
    void thread_outStream_V_strb_V_1_load_A();
    void thread_outStream_V_strb_V_1_load_B();
    void thread_outStream_V_strb_V_1_sel();
    void thread_outStream_V_strb_V_1_state_cmp_full();
    void thread_outStream_V_strb_V_1_vld_in();
    void thread_outStream_V_strb_V_1_vld_out();
    void thread_outStream_V_user_V_1_ack_in();
    void thread_outStream_V_user_V_1_ack_out();
    void thread_outStream_V_user_V_1_data_in();
    void thread_outStream_V_user_V_1_data_out();
    void thread_outStream_V_user_V_1_load_A();
    void thread_outStream_V_user_V_1_load_B();
    void thread_outStream_V_user_V_1_sel();
    void thread_outStream_V_user_V_1_state_cmp_full();
    void thread_outStream_V_user_V_1_vld_in();
    void thread_outStream_V_user_V_1_vld_out();
    void thread_phitmp_fu_578_p2();
    void thread_tmp1_fu_608_p2();
    void thread_tmp4_fu_604_p2();
    void thread_tmp_10_fu_517_p3();
    void thread_tmp_11_fu_525_p2();
    void thread_tmp_13_0_2_i_fu_594_p0();
    void thread_tmp_13_0_2_i_fu_594_p2();
    void thread_tmp_13_0_i_fu_584_p0();
    void thread_tmp_13_0_i_fu_584_p2();
    void thread_tmp_13_2_1_i_fu_589_p0();
    void thread_tmp_13_2_1_i_fu_589_p2();
    void thread_tmp_1_fu_495_p3();
    void thread_tmp_2_fu_483_p1();
    void thread_tmp_3_fu_503_p1();
    void thread_tmp_4_fu_507_p1();
    void thread_tmp_5_fu_531_p3();
    void thread_tmp_6_fu_489_p2();
    void thread_tmp_7_fu_539_p3();
    void thread_tmp_8_fu_547_p2();
    void thread_tmp_9_fu_511_p2();
    void thread_tmp_data_V_fu_612_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
