// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "processImage.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic processImage::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic processImage::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> processImage::ap_ST_fsm_state1 = "1";
const sc_lv<6> processImage::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> processImage::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> processImage::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> processImage::ap_ST_fsm_state11 = "10000";
const sc_lv<6> processImage::ap_ST_fsm_state12 = "100000";
const sc_lv<32> processImage::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool processImage::ap_const_boolean_1 = true;
const sc_lv<32> processImage::ap_const_lv32_2 = "10";
const bool processImage::ap_const_boolean_0 = false;
const sc_lv<1> processImage::ap_const_lv1_0 = "0";
const sc_lv<32> processImage::ap_const_lv32_3 = "11";
const sc_lv<1> processImage::ap_const_lv1_1 = "1";
const sc_lv<32> processImage::ap_const_lv32_5 = "101";
const sc_lv<32> processImage::ap_const_lv32_1 = "1";
const sc_lv<19> processImage::ap_const_lv19_1 = "1";
const sc_lv<10> processImage::ap_const_lv10_0 = "0000000000";
const sc_lv<32> processImage::ap_const_lv32_4 = "100";
const sc_lv<8> processImage::ap_const_lv8_0 = "00000000";
const sc_lv<19> processImage::ap_const_lv19_40001 = "1000000000000000001";
const sc_lv<32> processImage::ap_const_lv32_1F = "11111";
const sc_lv<31> processImage::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> processImage::ap_const_lv32_1FF = "111111111";
const sc_lv<19> processImage::ap_const_lv19_201 = "1000000001";
const sc_lv<32> processImage::ap_const_lv32_F = "1111";
const sc_lv<17> processImage::ap_const_lv17_0 = "00000000000000000";
const sc_lv<32> processImage::ap_const_lv32_10 = "10000";
const sc_lv<15> processImage::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> processImage::ap_const_lv32_E = "1110";
const sc_lv<10> processImage::ap_const_lv10_201 = "1000000001";
const sc_lv<10> processImage::ap_const_lv10_1 = "1";

processImage::processImage(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lineBuff_val_0_U = new processImage_linebkb("lineBuff_val_0_U");
    lineBuff_val_0_U->clk(ap_clk);
    lineBuff_val_0_U->reset(ap_rst);
    lineBuff_val_0_U->address0(lineBuff_val_0_address0);
    lineBuff_val_0_U->ce0(lineBuff_val_0_ce0);
    lineBuff_val_0_U->we0(lineBuff_val_0_we0);
    lineBuff_val_0_U->d0(lineBuff_val_1_q0);
    lineBuff_val_0_U->q0(lineBuff_val_0_q0);
    lineBuff_val_0_U->address1(lineBuff_val_0_address1);
    lineBuff_val_0_U->ce1(lineBuff_val_0_ce1);
    lineBuff_val_0_U->q1(lineBuff_val_0_q1);
    lineBuff_val_1_U = new processImage_linebkb("lineBuff_val_1_U");
    lineBuff_val_1_U->clk(ap_clk);
    lineBuff_val_1_U->reset(ap_rst);
    lineBuff_val_1_U->address0(lineBuff_val_1_address0);
    lineBuff_val_1_U->ce0(lineBuff_val_1_ce0);
    lineBuff_val_1_U->we0(lineBuff_val_1_we0);
    lineBuff_val_1_U->d0(lineBuff_val_2_q0);
    lineBuff_val_1_U->q0(lineBuff_val_1_q0);
    lineBuff_val_1_U->address1(lineBuff_val_1_address1);
    lineBuff_val_1_U->ce1(lineBuff_val_1_ce1);
    lineBuff_val_1_U->q1(lineBuff_val_1_q1);
    lineBuff_val_2_U = new processImage_linebkb("lineBuff_val_2_U");
    lineBuff_val_2_U->clk(ap_clk);
    lineBuff_val_2_U->reset(ap_rst);
    lineBuff_val_2_U->address0(lineBuff_val_2_address0);
    lineBuff_val_2_U->ce0(lineBuff_val_2_ce0);
    lineBuff_val_2_U->we0(lineBuff_val_2_we0);
    lineBuff_val_2_U->d0(inStream_V_data_V_dout);
    lineBuff_val_2_U->q0(lineBuff_val_2_q0);
    lineBuff_val_2_U->address1(lineBuff_val_2_address1);
    lineBuff_val_2_U->ce1(lineBuff_val_2_ce1);
    lineBuff_val_2_U->q1(lineBuff_val_2_q1);
    processImage_mac_eOg_U1 = new processImage_mac_eOg<1,1,8,8,16,16>("processImage_mac_eOg_U1");
    processImage_mac_eOg_U1->din0(kernel_1_read_reg_987);
    processImage_mac_eOg_U1->din1(grp_fu_859_p1);
    processImage_mac_eOg_U1->din2(window_val_0_0_reg_1067);
    processImage_mac_eOg_U1->dout(grp_fu_859_p3);
    processImage_mac_eOg_U2 = new processImage_mac_eOg<1,1,8,8,16,16>("processImage_mac_eOg_U2");
    processImage_mac_eOg_U2->din0(kernel_6_read_reg_1032);
    processImage_mac_eOg_U2->din1(grp_fu_866_p1);
    processImage_mac_eOg_U2->din2(grp_fu_866_p2);
    processImage_mac_eOg_U2->dout(grp_fu_866_p3);
    processImage_mac_eOg_U3 = new processImage_mac_eOg<1,1,8,8,16,16>("processImage_mac_eOg_U3");
    processImage_mac_eOg_U3->din0(kernel_2_read_reg_997);
    processImage_mac_eOg_U3->din1(grp_fu_874_p1);
    processImage_mac_eOg_U3->din2(window_val_2_2_reg_1112);
    processImage_mac_eOg_U3->dout(grp_fu_874_p3);
    processImage_mac_eOg_U4 = new processImage_mac_eOg<1,1,8,8,16,16>("processImage_mac_eOg_U4");
    processImage_mac_eOg_U4->din0(kernel_5_read_reg_1022);
    processImage_mac_eOg_U4->din1(grp_fu_881_p1);
    processImage_mac_eOg_U4->din2(window_val_1_1_reg_1082);
    processImage_mac_eOg_U4->dout(grp_fu_881_p3);
    processImage_mac_fYi_U5 = new processImage_mac_fYi<1,1,8,8,16,16>("processImage_mac_fYi_U5");
    processImage_mac_fYi_U5->din0(kernel_3_read_reg_1007_pp0_iter1_reg);
    processImage_mac_fYi_U5->din1(grp_fu_889_p1);
    processImage_mac_fYi_U5->din2(tmp2_reg_1132);
    processImage_mac_fYi_U5->dout(grp_fu_889_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( inStream_V_id_V0_status );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( inStream_V_id_V0_status );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_state10_pp0_stage2_iter2);
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_state12);
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( inStream_V_id_V0_status );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter2);

    SC_METHOD(thread_ap_condition_319);
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_cond_reg_916 );

    SC_METHOD(thread_ap_condition_337);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( exitcond2_reg_897_pp0_iter1_reg );
    sensitive << ( or_cond_reg_916_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond2_fu_498_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_countWait_phi_fu_474_p4);
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( countWait_reg_470 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( phitmp_reg_1062 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_idxCol_assign_phi_fu_451_p4);
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( idxCol_assign_reg_447 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( idxCol_1_reg_1052 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_idxRow_phi_fu_440_p4);
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( idxRow_reg_436 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( idxRow_1_reg_933 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_pixConvolved_assign_phi_fu_462_p4);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( pixConvolved_assign_reg_458 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond2_reg_897_pp0_iter1_reg );
    sensitive << ( pixConvolved_2_reg_1057 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( outStream_V_id_V1_status );

    SC_METHOD(thread_col_assign_1_0_2_fu_625_p2);
    sensitive << ( ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 );

    SC_METHOD(thread_countWait_2_fu_853_p2);
    sensitive << ( countWait_1_reg_482 );

    SC_METHOD(thread_exitcond2_fu_498_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_474_p4 );

    SC_METHOD(thread_exitcond_fu_847_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( countWait_1_reg_482 );

    SC_METHOD(thread_grp_fu_859_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond2_reg_897_pp0_iter1_reg );
    sensitive << ( or_cond_reg_916_pp0_iter1_reg );
    sensitive << ( grp_fu_859_p10 );

    SC_METHOD(thread_grp_fu_859_p10);
    sensitive << ( reg_493 );

    SC_METHOD(thread_grp_fu_866_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond2_reg_897_pp0_iter1_reg );
    sensitive << ( or_cond_reg_916_pp0_iter1_reg );
    sensitive << ( grp_fu_866_p10 );

    SC_METHOD(thread_grp_fu_866_p10);
    sensitive << ( lineBuff_val_2_load_1_reg_1092 );

    SC_METHOD(thread_grp_fu_866_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond2_reg_897_pp0_iter1_reg );
    sensitive << ( or_cond_reg_916_pp0_iter1_reg );
    sensitive << ( window_val_2_1_fu_708_p0 );
    sensitive << ( window_val_2_1_fu_708_p1 );

    SC_METHOD(thread_grp_fu_874_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond2_reg_897_pp0_iter1_reg );
    sensitive << ( or_cond_reg_916_pp0_iter1_reg );
    sensitive << ( grp_fu_874_p10 );

    SC_METHOD(thread_grp_fu_874_p10);
    sensitive << ( reg_493 );

    SC_METHOD(thread_grp_fu_881_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond2_reg_897_pp0_iter1_reg );
    sensitive << ( or_cond_reg_916_pp0_iter1_reg );
    sensitive << ( grp_fu_881_p10 );

    SC_METHOD(thread_grp_fu_881_p10);
    sensitive << ( lineBuff_val_1_load_3_reg_1107 );

    SC_METHOD(thread_grp_fu_889_p1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond2_reg_897_pp0_iter1_reg );
    sensitive << ( or_cond_reg_916_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( grp_fu_889_p10 );

    SC_METHOD(thread_grp_fu_889_p10);
    sensitive << ( lineBuff_val_1_load_1_reg_1077 );

    SC_METHOD(thread_icmp3_fu_536_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond2_fu_498_p2 );
    sensitive << ( tmp_4_fu_526_p4 );

    SC_METHOD(thread_icmp_fu_520_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond2_fu_498_p2 );
    sensitive << ( tmp_2_fu_510_p4 );

    SC_METHOD(thread_idxCol_1_fu_638_p3);
    sensitive << ( tmp_12_reg_922 );
    sensitive << ( idxCol_reg_928 );

    SC_METHOD(thread_idxCol_fu_554_p2);
    sensitive << ( ap_phi_mux_idxCol_assign_phi_fu_451_p4 );

    SC_METHOD(thread_idxRow_1_fu_566_p3);
    sensitive << ( tmp_12_fu_548_p2 );
    sensitive << ( ap_phi_mux_idxRow_phi_fu_440_p4 );
    sensitive << ( idxRow_2_fu_560_p2 );

    SC_METHOD(thread_idxRow_2_fu_560_p2);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_440_p4 );

    SC_METHOD(thread_inStream_V_data_V_blk_n);
    sensitive << ( inStream_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_897 );

    SC_METHOD(thread_inStream_V_data_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_dest_V_blk_n);
    sensitive << ( inStream_V_dest_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_897 );

    SC_METHOD(thread_inStream_V_dest_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_id_V0_status);
    sensitive << ( inStream_V_data_V_empty_n );
    sensitive << ( inStream_V_keep_V_empty_n );
    sensitive << ( inStream_V_strb_V_empty_n );
    sensitive << ( inStream_V_user_V_empty_n );
    sensitive << ( inStream_V_last_V_empty_n );
    sensitive << ( inStream_V_id_V_empty_n );
    sensitive << ( inStream_V_dest_V_empty_n );

    SC_METHOD(thread_inStream_V_id_V0_update);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_inStream_V_id_V_blk_n);
    sensitive << ( inStream_V_id_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_897 );

    SC_METHOD(thread_inStream_V_id_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_keep_V_blk_n);
    sensitive << ( inStream_V_keep_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_897 );

    SC_METHOD(thread_inStream_V_keep_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_last_V_blk_n);
    sensitive << ( inStream_V_last_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_897 );

    SC_METHOD(thread_inStream_V_last_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_strb_V_blk_n);
    sensitive << ( inStream_V_strb_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_897 );

    SC_METHOD(thread_inStream_V_strb_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_inStream_V_user_V_blk_n);
    sensitive << ( inStream_V_user_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond2_reg_897 );

    SC_METHOD(thread_inStream_V_user_V_read);
    sensitive << ( inStream_V_id_V0_update );

    SC_METHOD(thread_lineBuff_val_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_901 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_605_p1 );
    sensitive << ( tmp_19_0_2_fu_670_p1 );

    SC_METHOD(thread_lineBuff_val_0_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_19_0_1_fu_618_p1 );

    SC_METHOD(thread_lineBuff_val_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_s_fu_504_p1 );
    sensitive << ( lineBuff_val_1_addr_reg_906 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_19_0_1_fu_618_p1 );

    SC_METHOD(thread_lineBuff_val_1_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_605_p1 );
    sensitive << ( tmp_19_0_2_fu_670_p1 );

    SC_METHOD(thread_lineBuff_val_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_1_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_s_fu_504_p1 );
    sensitive << ( lineBuff_val_2_addr_reg_911 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_19_0_1_fu_618_p1 );

    SC_METHOD(thread_lineBuff_val_2_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_605_p1 );
    sensitive << ( tmp_19_0_2_fu_670_p1 );

    SC_METHOD(thread_lineBuff_val_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_2_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_reg_897 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_or_cond_fu_542_p2);
    sensitive << ( icmp_fu_520_p2 );
    sensitive << ( icmp3_fu_536_p2 );

    SC_METHOD(thread_outStream_V_data_V_blk_n);
    sensitive << ( outStream_V_data_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );

    SC_METHOD(thread_outStream_V_data_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( tmp_data_V_reg_1152 );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_outStream_V_data_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_dest_V_blk_n);
    sensitive << ( outStream_V_dest_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );

    SC_METHOD(thread_outStream_V_dest_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( tmp_dest_V_1_reg_423 );
    sensitive << ( tmp_dest_V_reg_966_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_outStream_V_dest_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_id_V1_status);
    sensitive << ( outStream_V_data_V_full_n );
    sensitive << ( outStream_V_keep_V_full_n );
    sensitive << ( outStream_V_strb_V_full_n );
    sensitive << ( outStream_V_user_V_full_n );
    sensitive << ( outStream_V_last_V_full_n );
    sensitive << ( outStream_V_id_V_full_n );
    sensitive << ( outStream_V_dest_V_full_n );

    SC_METHOD(thread_outStream_V_id_V1_update);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_outStream_V_id_V_blk_n);
    sensitive << ( outStream_V_id_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );

    SC_METHOD(thread_outStream_V_id_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( tmp_id_V_1_reg_371 );
    sensitive << ( tmp_id_V_reg_960_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_outStream_V_id_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_keep_V_blk_n);
    sensitive << ( outStream_V_keep_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );

    SC_METHOD(thread_outStream_V_keep_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( tmp_keep_V_1_reg_410 );
    sensitive << ( tmp_keep_V_reg_942_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_outStream_V_keep_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_last_V_blk_n);
    sensitive << ( outStream_V_last_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );

    SC_METHOD(thread_outStream_V_last_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_outStream_V_last_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_strb_V_blk_n);
    sensitive << ( outStream_V_strb_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );

    SC_METHOD(thread_outStream_V_strb_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( tmp_strb_V_1_reg_397 );
    sensitive << ( tmp_strb_V_reg_948_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_outStream_V_strb_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_outStream_V_user_V_blk_n);
    sensitive << ( outStream_V_user_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );

    SC_METHOD(thread_outStream_V_user_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_13_reg_938_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( tmp_user_V_1_reg_384 );
    sensitive << ( tmp_user_V_reg_954_pp0_iter2_reg );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_outStream_V_user_V_write);
    sensitive << ( outStream_V_id_V1_update );

    SC_METHOD(thread_p_neg_fu_780_p2);
    sensitive << ( tmp_7_tr_fu_777_p1 );

    SC_METHOD(thread_phitmp8_fu_832_p3);
    sensitive << ( tmp_11_fu_824_p3 );
    sensitive << ( tmp_10_fu_820_p1 );

    SC_METHOD(thread_phitmp_fu_651_p2);
    sensitive << ( countWait_reg_470 );

    SC_METHOD(thread_pixConvolved_1_fu_631_p3);
    sensitive << ( or_cond_reg_916 );
    sensitive << ( ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 );
    sensitive << ( pixConvolved_fu_612_p2 );

    SC_METHOD(thread_pixConvolved_2_fu_644_p3);
    sensitive << ( tmp_12_reg_922 );
    sensitive << ( pixConvolved_1_fu_631_p3 );

    SC_METHOD(thread_pixConvolved_fu_612_p2);
    sensitive << ( ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 );

    SC_METHOD(thread_tmp4_fu_750_p2);
    sensitive << ( tmp1_reg_1122 );
    sensitive << ( grp_fu_889_p3 );

    SC_METHOD(thread_tmp7_fu_740_p2);
    sensitive << ( tmp8_reg_1117 );
    sensitive << ( grp_fu_881_p3 );

    SC_METHOD(thread_tmp_10_cast_fu_809_p1);
    sensitive << ( tmp_8_fu_800_p1 );

    SC_METHOD(thread_tmp_10_fu_820_p1);
    sensitive << ( valOutput_1_fu_813_p3 );

    SC_METHOD(thread_tmp_11_fu_824_p3);
    sensitive << ( valOutput_1_fu_813_p3 );

    SC_METHOD(thread_tmp_12_fu_548_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond2_fu_498_p2 );
    sensitive << ( ap_phi_mux_idxCol_assign_phi_fu_451_p4 );

    SC_METHOD(thread_tmp_13_fu_574_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond2_fu_498_p2 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_474_p4 );

    SC_METHOD(thread_tmp_19_0_1_fu_618_p1);
    sensitive << ( pixConvolved_fu_612_p2 );

    SC_METHOD(thread_tmp_19_0_2_fu_670_p1);
    sensitive << ( col_assign_1_0_2_reg_992 );

    SC_METHOD(thread_tmp_2_fu_510_p4);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_440_p4 );

    SC_METHOD(thread_tmp_3_cast_fu_796_p1);
    sensitive << ( tmp_6_fu_786_p4 );

    SC_METHOD(thread_tmp_3_fu_605_p1);
    sensitive << ( ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 );

    SC_METHOD(thread_tmp_4_fu_526_p4);
    sensitive << ( ap_phi_mux_idxCol_assign_phi_fu_451_p4 );

    SC_METHOD(thread_tmp_6_fu_786_p4);
    sensitive << ( p_neg_fu_780_p2 );

    SC_METHOD(thread_tmp_7_tr_fu_777_p1);
    sensitive << ( valOutput_reg_1137 );

    SC_METHOD(thread_tmp_8_fu_800_p1);
    sensitive << ( tmp_7_reg_1147 );

    SC_METHOD(thread_tmp_9_fu_803_p2);
    sensitive << ( tmp_3_cast_fu_796_p1 );

    SC_METHOD(thread_tmp_data_V_fu_840_p3);
    sensitive << ( or_cond_reg_916_pp0_iter2_reg );
    sensitive << ( phitmp8_fu_832_p3 );

    SC_METHOD(thread_tmp_s_fu_504_p1);
    sensitive << ( ap_phi_mux_idxCol_assign_phi_fu_451_p4 );

    SC_METHOD(thread_valOutput_1_fu_813_p3);
    sensitive << ( tmp_5_reg_1142 );
    sensitive << ( tmp_9_fu_803_p2 );
    sensitive << ( tmp_10_cast_fu_809_p1 );

    SC_METHOD(thread_valOutput_fu_754_p2);
    sensitive << ( tmp7_reg_1127 );
    sensitive << ( tmp4_fu_750_p2 );

    SC_METHOD(thread_window_val_0_0_fu_664_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( kernel_0_read_reg_977 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_window_val_0_0_fu_664_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( window_val_0_0_fu_664_p10 );

    SC_METHOD(thread_window_val_0_0_fu_664_p10);
    sensitive << ( lineBuff_val_0_q0 );

    SC_METHOD(thread_window_val_0_0_fu_664_p2);
    sensitive << ( window_val_0_0_fu_664_p0 );
    sensitive << ( window_val_0_0_fu_664_p1 );

    SC_METHOD(thread_window_val_1_1_fu_683_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( kernel_4_read_reg_1017 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_window_val_1_1_fu_683_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( window_val_1_1_fu_683_p10 );

    SC_METHOD(thread_window_val_1_1_fu_683_p10);
    sensitive << ( lineBuff_val_1_q0 );

    SC_METHOD(thread_window_val_1_1_fu_683_p2);
    sensitive << ( window_val_1_1_fu_683_p0 );
    sensitive << ( window_val_1_1_fu_683_p1 );

    SC_METHOD(thread_window_val_2_1_fu_708_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( kernel_7_read_reg_1042 );

    SC_METHOD(thread_window_val_2_1_fu_708_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( window_val_2_1_fu_708_p10 );

    SC_METHOD(thread_window_val_2_1_fu_708_p10);
    sensitive << ( lineBuff_val_2_load_2_reg_1097 );

    SC_METHOD(thread_window_val_2_2_fu_721_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( kernel_8_read_reg_1047 );

    SC_METHOD(thread_window_val_2_2_fu_721_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( window_val_2_2_fu_721_p10 );

    SC_METHOD(thread_window_val_2_2_fu_721_p10);
    sensitive << ( lineBuff_val_2_q1 );

    SC_METHOD(thread_window_val_2_2_fu_721_p2);
    sensitive << ( window_val_2_2_fu_721_p0 );
    sensitive << ( window_val_2_2_fu_721_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_847_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond2_fu_498_p2 );
    sensitive << ( outStream_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "processImage_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inStream_V_data_V_dout, "(port)inStream_V_data_V_dout");
    sc_trace(mVcdFile, inStream_V_data_V_empty_n, "(port)inStream_V_data_V_empty_n");
    sc_trace(mVcdFile, inStream_V_data_V_read, "(port)inStream_V_data_V_read");
    sc_trace(mVcdFile, inStream_V_keep_V_dout, "(port)inStream_V_keep_V_dout");
    sc_trace(mVcdFile, inStream_V_keep_V_empty_n, "(port)inStream_V_keep_V_empty_n");
    sc_trace(mVcdFile, inStream_V_keep_V_read, "(port)inStream_V_keep_V_read");
    sc_trace(mVcdFile, inStream_V_strb_V_dout, "(port)inStream_V_strb_V_dout");
    sc_trace(mVcdFile, inStream_V_strb_V_empty_n, "(port)inStream_V_strb_V_empty_n");
    sc_trace(mVcdFile, inStream_V_strb_V_read, "(port)inStream_V_strb_V_read");
    sc_trace(mVcdFile, inStream_V_user_V_dout, "(port)inStream_V_user_V_dout");
    sc_trace(mVcdFile, inStream_V_user_V_empty_n, "(port)inStream_V_user_V_empty_n");
    sc_trace(mVcdFile, inStream_V_user_V_read, "(port)inStream_V_user_V_read");
    sc_trace(mVcdFile, inStream_V_last_V_dout, "(port)inStream_V_last_V_dout");
    sc_trace(mVcdFile, inStream_V_last_V_empty_n, "(port)inStream_V_last_V_empty_n");
    sc_trace(mVcdFile, inStream_V_last_V_read, "(port)inStream_V_last_V_read");
    sc_trace(mVcdFile, inStream_V_id_V_dout, "(port)inStream_V_id_V_dout");
    sc_trace(mVcdFile, inStream_V_id_V_empty_n, "(port)inStream_V_id_V_empty_n");
    sc_trace(mVcdFile, inStream_V_id_V_read, "(port)inStream_V_id_V_read");
    sc_trace(mVcdFile, inStream_V_dest_V_dout, "(port)inStream_V_dest_V_dout");
    sc_trace(mVcdFile, inStream_V_dest_V_empty_n, "(port)inStream_V_dest_V_empty_n");
    sc_trace(mVcdFile, inStream_V_dest_V_read, "(port)inStream_V_dest_V_read");
    sc_trace(mVcdFile, outStream_V_data_V_din, "(port)outStream_V_data_V_din");
    sc_trace(mVcdFile, outStream_V_data_V_full_n, "(port)outStream_V_data_V_full_n");
    sc_trace(mVcdFile, outStream_V_data_V_write, "(port)outStream_V_data_V_write");
    sc_trace(mVcdFile, outStream_V_keep_V_din, "(port)outStream_V_keep_V_din");
    sc_trace(mVcdFile, outStream_V_keep_V_full_n, "(port)outStream_V_keep_V_full_n");
    sc_trace(mVcdFile, outStream_V_keep_V_write, "(port)outStream_V_keep_V_write");
    sc_trace(mVcdFile, outStream_V_strb_V_din, "(port)outStream_V_strb_V_din");
    sc_trace(mVcdFile, outStream_V_strb_V_full_n, "(port)outStream_V_strb_V_full_n");
    sc_trace(mVcdFile, outStream_V_strb_V_write, "(port)outStream_V_strb_V_write");
    sc_trace(mVcdFile, outStream_V_user_V_din, "(port)outStream_V_user_V_din");
    sc_trace(mVcdFile, outStream_V_user_V_full_n, "(port)outStream_V_user_V_full_n");
    sc_trace(mVcdFile, outStream_V_user_V_write, "(port)outStream_V_user_V_write");
    sc_trace(mVcdFile, outStream_V_last_V_din, "(port)outStream_V_last_V_din");
    sc_trace(mVcdFile, outStream_V_last_V_full_n, "(port)outStream_V_last_V_full_n");
    sc_trace(mVcdFile, outStream_V_last_V_write, "(port)outStream_V_last_V_write");
    sc_trace(mVcdFile, outStream_V_id_V_din, "(port)outStream_V_id_V_din");
    sc_trace(mVcdFile, outStream_V_id_V_full_n, "(port)outStream_V_id_V_full_n");
    sc_trace(mVcdFile, outStream_V_id_V_write, "(port)outStream_V_id_V_write");
    sc_trace(mVcdFile, outStream_V_dest_V_din, "(port)outStream_V_dest_V_din");
    sc_trace(mVcdFile, outStream_V_dest_V_full_n, "(port)outStream_V_dest_V_full_n");
    sc_trace(mVcdFile, outStream_V_dest_V_write, "(port)outStream_V_dest_V_write");
    sc_trace(mVcdFile, kernel_0, "(port)kernel_0");
    sc_trace(mVcdFile, kernel_1, "(port)kernel_1");
    sc_trace(mVcdFile, kernel_2, "(port)kernel_2");
    sc_trace(mVcdFile, kernel_3, "(port)kernel_3");
    sc_trace(mVcdFile, kernel_4, "(port)kernel_4");
    sc_trace(mVcdFile, kernel_5, "(port)kernel_5");
    sc_trace(mVcdFile, kernel_6, "(port)kernel_6");
    sc_trace(mVcdFile, kernel_7, "(port)kernel_7");
    sc_trace(mVcdFile, kernel_8, "(port)kernel_8");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, inStream_V_data_V_blk_n, "inStream_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond2_reg_897, "exitcond2_reg_897");
    sc_trace(mVcdFile, inStream_V_keep_V_blk_n, "inStream_V_keep_V_blk_n");
    sc_trace(mVcdFile, inStream_V_strb_V_blk_n, "inStream_V_strb_V_blk_n");
    sc_trace(mVcdFile, inStream_V_user_V_blk_n, "inStream_V_user_V_blk_n");
    sc_trace(mVcdFile, inStream_V_last_V_blk_n, "inStream_V_last_V_blk_n");
    sc_trace(mVcdFile, inStream_V_id_V_blk_n, "inStream_V_id_V_blk_n");
    sc_trace(mVcdFile, inStream_V_dest_V_blk_n, "inStream_V_dest_V_blk_n");
    sc_trace(mVcdFile, outStream_V_data_V_blk_n, "outStream_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_13_reg_938, "tmp_13_reg_938");
    sc_trace(mVcdFile, tmp_13_reg_938_pp0_iter2_reg, "tmp_13_reg_938_pp0_iter2_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, exitcond_fu_847_p2, "exitcond_fu_847_p2");
    sc_trace(mVcdFile, outStream_V_keep_V_blk_n, "outStream_V_keep_V_blk_n");
    sc_trace(mVcdFile, outStream_V_strb_V_blk_n, "outStream_V_strb_V_blk_n");
    sc_trace(mVcdFile, outStream_V_user_V_blk_n, "outStream_V_user_V_blk_n");
    sc_trace(mVcdFile, outStream_V_last_V_blk_n, "outStream_V_last_V_blk_n");
    sc_trace(mVcdFile, outStream_V_id_V_blk_n, "outStream_V_id_V_blk_n");
    sc_trace(mVcdFile, outStream_V_dest_V_blk_n, "outStream_V_dest_V_blk_n");
    sc_trace(mVcdFile, tmp_id_V_1_reg_371, "tmp_id_V_1_reg_371");
    sc_trace(mVcdFile, tmp_user_V_1_reg_384, "tmp_user_V_1_reg_384");
    sc_trace(mVcdFile, tmp_strb_V_1_reg_397, "tmp_strb_V_1_reg_397");
    sc_trace(mVcdFile, tmp_keep_V_1_reg_410, "tmp_keep_V_1_reg_410");
    sc_trace(mVcdFile, tmp_dest_V_1_reg_423, "tmp_dest_V_1_reg_423");
    sc_trace(mVcdFile, idxRow_reg_436, "idxRow_reg_436");
    sc_trace(mVcdFile, idxCol_assign_reg_447, "idxCol_assign_reg_447");
    sc_trace(mVcdFile, pixConvolved_assign_reg_458, "pixConvolved_assign_reg_458");
    sc_trace(mVcdFile, countWait_reg_470, "countWait_reg_470");
    sc_trace(mVcdFile, lineBuff_val_0_q1, "lineBuff_val_0_q1");
    sc_trace(mVcdFile, reg_493, "reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter2, "ap_block_state8_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, or_cond_reg_916, "or_cond_reg_916");
    sc_trace(mVcdFile, lineBuff_val_0_q0, "lineBuff_val_0_q0");
    sc_trace(mVcdFile, inStream_V_id_V0_status, "inStream_V_id_V0_status");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter2, "ap_block_state9_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, exitcond2_reg_897_pp0_iter1_reg, "exitcond2_reg_897_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond_reg_916_pp0_iter1_reg, "or_cond_reg_916_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond2_fu_498_p2, "exitcond2_fu_498_p2");
    sc_trace(mVcdFile, exitcond2_reg_897_pp0_iter2_reg, "exitcond2_reg_897_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_s_fu_504_p1, "tmp_s_fu_504_p1");
    sc_trace(mVcdFile, tmp_s_reg_901, "tmp_s_reg_901");
    sc_trace(mVcdFile, lineBuff_val_1_addr_reg_906, "lineBuff_val_1_addr_reg_906");
    sc_trace(mVcdFile, lineBuff_val_2_addr_reg_911, "lineBuff_val_2_addr_reg_911");
    sc_trace(mVcdFile, or_cond_fu_542_p2, "or_cond_fu_542_p2");
    sc_trace(mVcdFile, or_cond_reg_916_pp0_iter2_reg, "or_cond_reg_916_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_12_fu_548_p2, "tmp_12_fu_548_p2");
    sc_trace(mVcdFile, tmp_12_reg_922, "tmp_12_reg_922");
    sc_trace(mVcdFile, idxCol_fu_554_p2, "idxCol_fu_554_p2");
    sc_trace(mVcdFile, idxCol_reg_928, "idxCol_reg_928");
    sc_trace(mVcdFile, idxRow_1_fu_566_p3, "idxRow_1_fu_566_p3");
    sc_trace(mVcdFile, idxRow_1_reg_933, "idxRow_1_reg_933");
    sc_trace(mVcdFile, tmp_13_fu_574_p2, "tmp_13_fu_574_p2");
    sc_trace(mVcdFile, tmp_13_reg_938_pp0_iter1_reg, "tmp_13_reg_938_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_keep_V_reg_942, "tmp_keep_V_reg_942");
    sc_trace(mVcdFile, tmp_keep_V_reg_942_pp0_iter1_reg, "tmp_keep_V_reg_942_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_keep_V_reg_942_pp0_iter2_reg, "tmp_keep_V_reg_942_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_strb_V_reg_948, "tmp_strb_V_reg_948");
    sc_trace(mVcdFile, tmp_strb_V_reg_948_pp0_iter1_reg, "tmp_strb_V_reg_948_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_strb_V_reg_948_pp0_iter2_reg, "tmp_strb_V_reg_948_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_user_V_reg_954, "tmp_user_V_reg_954");
    sc_trace(mVcdFile, tmp_user_V_reg_954_pp0_iter1_reg, "tmp_user_V_reg_954_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_user_V_reg_954_pp0_iter2_reg, "tmp_user_V_reg_954_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_id_V_reg_960, "tmp_id_V_reg_960");
    sc_trace(mVcdFile, tmp_id_V_reg_960_pp0_iter1_reg, "tmp_id_V_reg_960_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_id_V_reg_960_pp0_iter2_reg, "tmp_id_V_reg_960_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_dest_V_reg_966, "tmp_dest_V_reg_966");
    sc_trace(mVcdFile, tmp_dest_V_reg_966_pp0_iter1_reg, "tmp_dest_V_reg_966_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_dest_V_reg_966_pp0_iter2_reg, "tmp_dest_V_reg_966_pp0_iter2_reg");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage2_iter1, "ap_block_state7_pp0_stage2_iter1");
    sc_trace(mVcdFile, outStream_V_id_V1_status, "outStream_V_id_V1_status");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage2_iter2, "ap_block_state10_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, kernel_0_read_reg_977, "kernel_0_read_reg_977");
    sc_trace(mVcdFile, kernel_1_read_reg_987, "kernel_1_read_reg_987");
    sc_trace(mVcdFile, col_assign_1_0_2_fu_625_p2, "col_assign_1_0_2_fu_625_p2");
    sc_trace(mVcdFile, col_assign_1_0_2_reg_992, "col_assign_1_0_2_reg_992");
    sc_trace(mVcdFile, kernel_2_read_reg_997, "kernel_2_read_reg_997");
    sc_trace(mVcdFile, kernel_3_read_reg_1007, "kernel_3_read_reg_1007");
    sc_trace(mVcdFile, kernel_3_read_reg_1007_pp0_iter1_reg, "kernel_3_read_reg_1007_pp0_iter1_reg");
    sc_trace(mVcdFile, kernel_4_read_reg_1017, "kernel_4_read_reg_1017");
    sc_trace(mVcdFile, kernel_5_read_reg_1022, "kernel_5_read_reg_1022");
    sc_trace(mVcdFile, kernel_6_read_reg_1032, "kernel_6_read_reg_1032");
    sc_trace(mVcdFile, kernel_7_read_reg_1042, "kernel_7_read_reg_1042");
    sc_trace(mVcdFile, kernel_8_read_reg_1047, "kernel_8_read_reg_1047");
    sc_trace(mVcdFile, idxCol_1_fu_638_p3, "idxCol_1_fu_638_p3");
    sc_trace(mVcdFile, idxCol_1_reg_1052, "idxCol_1_reg_1052");
    sc_trace(mVcdFile, pixConvolved_2_fu_644_p3, "pixConvolved_2_fu_644_p3");
    sc_trace(mVcdFile, pixConvolved_2_reg_1057, "pixConvolved_2_reg_1057");
    sc_trace(mVcdFile, phitmp_fu_651_p2, "phitmp_fu_651_p2");
    sc_trace(mVcdFile, phitmp_reg_1062, "phitmp_reg_1062");
    sc_trace(mVcdFile, window_val_0_0_fu_664_p2, "window_val_0_0_fu_664_p2");
    sc_trace(mVcdFile, window_val_0_0_reg_1067, "window_val_0_0_reg_1067");
    sc_trace(mVcdFile, lineBuff_val_1_q1, "lineBuff_val_1_q1");
    sc_trace(mVcdFile, lineBuff_val_1_load_1_reg_1077, "lineBuff_val_1_load_1_reg_1077");
    sc_trace(mVcdFile, window_val_1_1_fu_683_p2, "window_val_1_1_fu_683_p2");
    sc_trace(mVcdFile, window_val_1_1_reg_1082, "window_val_1_1_reg_1082");
    sc_trace(mVcdFile, lineBuff_val_2_q1, "lineBuff_val_2_q1");
    sc_trace(mVcdFile, lineBuff_val_2_load_1_reg_1092, "lineBuff_val_2_load_1_reg_1092");
    sc_trace(mVcdFile, lineBuff_val_2_q0, "lineBuff_val_2_q0");
    sc_trace(mVcdFile, lineBuff_val_2_load_2_reg_1097, "lineBuff_val_2_load_2_reg_1097");
    sc_trace(mVcdFile, lineBuff_val_1_load_3_reg_1107, "lineBuff_val_1_load_3_reg_1107");
    sc_trace(mVcdFile, window_val_2_2_fu_721_p2, "window_val_2_2_fu_721_p2");
    sc_trace(mVcdFile, window_val_2_2_reg_1112, "window_val_2_2_reg_1112");
    sc_trace(mVcdFile, grp_fu_866_p3, "grp_fu_866_p3");
    sc_trace(mVcdFile, tmp8_reg_1117, "tmp8_reg_1117");
    sc_trace(mVcdFile, grp_fu_859_p3, "grp_fu_859_p3");
    sc_trace(mVcdFile, tmp1_reg_1122, "tmp1_reg_1122");
    sc_trace(mVcdFile, tmp7_fu_740_p2, "tmp7_fu_740_p2");
    sc_trace(mVcdFile, tmp7_reg_1127, "tmp7_reg_1127");
    sc_trace(mVcdFile, grp_fu_874_p3, "grp_fu_874_p3");
    sc_trace(mVcdFile, tmp2_reg_1132, "tmp2_reg_1132");
    sc_trace(mVcdFile, valOutput_fu_754_p2, "valOutput_fu_754_p2");
    sc_trace(mVcdFile, valOutput_reg_1137, "valOutput_reg_1137");
    sc_trace(mVcdFile, tmp_5_reg_1142, "tmp_5_reg_1142");
    sc_trace(mVcdFile, tmp_7_reg_1147, "tmp_7_reg_1147");
    sc_trace(mVcdFile, tmp_data_V_fu_840_p3, "tmp_data_V_fu_840_p3");
    sc_trace(mVcdFile, tmp_data_V_reg_1152, "tmp_data_V_reg_1152");
    sc_trace(mVcdFile, countWait_2_fu_853_p2, "countWait_2_fu_853_p2");
    sc_trace(mVcdFile, ap_block_state12, "ap_block_state12");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, lineBuff_val_0_address0, "lineBuff_val_0_address0");
    sc_trace(mVcdFile, lineBuff_val_0_ce0, "lineBuff_val_0_ce0");
    sc_trace(mVcdFile, lineBuff_val_0_we0, "lineBuff_val_0_we0");
    sc_trace(mVcdFile, lineBuff_val_0_address1, "lineBuff_val_0_address1");
    sc_trace(mVcdFile, lineBuff_val_0_ce1, "lineBuff_val_0_ce1");
    sc_trace(mVcdFile, lineBuff_val_1_address0, "lineBuff_val_1_address0");
    sc_trace(mVcdFile, lineBuff_val_1_ce0, "lineBuff_val_1_ce0");
    sc_trace(mVcdFile, lineBuff_val_1_we0, "lineBuff_val_1_we0");
    sc_trace(mVcdFile, lineBuff_val_1_q0, "lineBuff_val_1_q0");
    sc_trace(mVcdFile, lineBuff_val_1_address1, "lineBuff_val_1_address1");
    sc_trace(mVcdFile, lineBuff_val_1_ce1, "lineBuff_val_1_ce1");
    sc_trace(mVcdFile, lineBuff_val_2_address0, "lineBuff_val_2_address0");
    sc_trace(mVcdFile, lineBuff_val_2_ce0, "lineBuff_val_2_ce0");
    sc_trace(mVcdFile, lineBuff_val_2_we0, "lineBuff_val_2_we0");
    sc_trace(mVcdFile, lineBuff_val_2_address1, "lineBuff_val_2_address1");
    sc_trace(mVcdFile, lineBuff_val_2_ce1, "lineBuff_val_2_ce1");
    sc_trace(mVcdFile, ap_phi_mux_idxRow_phi_fu_440_p4, "ap_phi_mux_idxRow_phi_fu_440_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_idxCol_assign_phi_fu_451_p4, "ap_phi_mux_idxCol_assign_phi_fu_451_p4");
    sc_trace(mVcdFile, ap_phi_mux_pixConvolved_assign_phi_fu_462_p4, "ap_phi_mux_pixConvolved_assign_phi_fu_462_p4");
    sc_trace(mVcdFile, ap_phi_mux_countWait_phi_fu_474_p4, "ap_phi_mux_countWait_phi_fu_474_p4");
    sc_trace(mVcdFile, countWait_1_reg_482, "countWait_1_reg_482");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_3_fu_605_p1, "tmp_3_fu_605_p1");
    sc_trace(mVcdFile, tmp_19_0_1_fu_618_p1, "tmp_19_0_1_fu_618_p1");
    sc_trace(mVcdFile, tmp_19_0_2_fu_670_p1, "tmp_19_0_2_fu_670_p1");
    sc_trace(mVcdFile, inStream_V_id_V0_update, "inStream_V_id_V0_update");
    sc_trace(mVcdFile, outStream_V_id_V1_update, "outStream_V_id_V1_update");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, tmp_2_fu_510_p4, "tmp_2_fu_510_p4");
    sc_trace(mVcdFile, tmp_4_fu_526_p4, "tmp_4_fu_526_p4");
    sc_trace(mVcdFile, icmp_fu_520_p2, "icmp_fu_520_p2");
    sc_trace(mVcdFile, icmp3_fu_536_p2, "icmp3_fu_536_p2");
    sc_trace(mVcdFile, idxRow_2_fu_560_p2, "idxRow_2_fu_560_p2");
    sc_trace(mVcdFile, pixConvolved_fu_612_p2, "pixConvolved_fu_612_p2");
    sc_trace(mVcdFile, pixConvolved_1_fu_631_p3, "pixConvolved_1_fu_631_p3");
    sc_trace(mVcdFile, window_val_0_0_fu_664_p0, "window_val_0_0_fu_664_p0");
    sc_trace(mVcdFile, window_val_0_0_fu_664_p1, "window_val_0_0_fu_664_p1");
    sc_trace(mVcdFile, window_val_1_1_fu_683_p0, "window_val_1_1_fu_683_p0");
    sc_trace(mVcdFile, window_val_1_1_fu_683_p1, "window_val_1_1_fu_683_p1");
    sc_trace(mVcdFile, window_val_2_1_fu_708_p0, "window_val_2_1_fu_708_p0");
    sc_trace(mVcdFile, window_val_2_1_fu_708_p1, "window_val_2_1_fu_708_p1");
    sc_trace(mVcdFile, window_val_2_2_fu_721_p0, "window_val_2_2_fu_721_p0");
    sc_trace(mVcdFile, window_val_2_2_fu_721_p1, "window_val_2_2_fu_721_p1");
    sc_trace(mVcdFile, grp_fu_881_p3, "grp_fu_881_p3");
    sc_trace(mVcdFile, grp_fu_889_p3, "grp_fu_889_p3");
    sc_trace(mVcdFile, tmp4_fu_750_p2, "tmp4_fu_750_p2");
    sc_trace(mVcdFile, tmp_7_tr_fu_777_p1, "tmp_7_tr_fu_777_p1");
    sc_trace(mVcdFile, p_neg_fu_780_p2, "p_neg_fu_780_p2");
    sc_trace(mVcdFile, tmp_6_fu_786_p4, "tmp_6_fu_786_p4");
    sc_trace(mVcdFile, tmp_3_cast_fu_796_p1, "tmp_3_cast_fu_796_p1");
    sc_trace(mVcdFile, tmp_8_fu_800_p1, "tmp_8_fu_800_p1");
    sc_trace(mVcdFile, tmp_9_fu_803_p2, "tmp_9_fu_803_p2");
    sc_trace(mVcdFile, tmp_10_cast_fu_809_p1, "tmp_10_cast_fu_809_p1");
    sc_trace(mVcdFile, valOutput_1_fu_813_p3, "valOutput_1_fu_813_p3");
    sc_trace(mVcdFile, tmp_11_fu_824_p3, "tmp_11_fu_824_p3");
    sc_trace(mVcdFile, tmp_10_fu_820_p1, "tmp_10_fu_820_p1");
    sc_trace(mVcdFile, phitmp8_fu_832_p3, "phitmp8_fu_832_p3");
    sc_trace(mVcdFile, grp_fu_859_p1, "grp_fu_859_p1");
    sc_trace(mVcdFile, grp_fu_866_p1, "grp_fu_866_p1");
    sc_trace(mVcdFile, grp_fu_866_p2, "grp_fu_866_p2");
    sc_trace(mVcdFile, grp_fu_874_p1, "grp_fu_874_p1");
    sc_trace(mVcdFile, grp_fu_881_p1, "grp_fu_881_p1");
    sc_trace(mVcdFile, grp_fu_889_p1, "grp_fu_889_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_859_p10, "grp_fu_859_p10");
    sc_trace(mVcdFile, grp_fu_866_p10, "grp_fu_866_p10");
    sc_trace(mVcdFile, grp_fu_874_p10, "grp_fu_874_p10");
    sc_trace(mVcdFile, grp_fu_881_p10, "grp_fu_881_p10");
    sc_trace(mVcdFile, grp_fu_889_p10, "grp_fu_889_p10");
    sc_trace(mVcdFile, window_val_0_0_fu_664_p10, "window_val_0_0_fu_664_p10");
    sc_trace(mVcdFile, window_val_1_1_fu_683_p10, "window_val_1_1_fu_683_p10");
    sc_trace(mVcdFile, window_val_2_1_fu_708_p10, "window_val_2_1_fu_708_p10");
    sc_trace(mVcdFile, window_val_2_2_fu_721_p10, "window_val_2_2_fu_721_p10");
    sc_trace(mVcdFile, ap_condition_319, "ap_condition_319");
    sc_trace(mVcdFile, ap_condition_337, "ap_condition_337");
#endif

    }
    mHdltvinHandle.open("processImage.hdltvin.dat");
    mHdltvoutHandle.open("processImage.hdltvout.dat");
}

processImage::~processImage() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete lineBuff_val_0_U;
    delete lineBuff_val_1_U;
    delete lineBuff_val_2_U;
    delete processImage_mac_eOg_U1;
    delete processImage_mac_eOg_U2;
    delete processImage_mac_eOg_U3;
    delete processImage_mac_eOg_U4;
    delete processImage_mac_fYi_U5;
}

void processImage::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        countWait_1_reg_482 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        countWait_1_reg_482 = countWait_2_fu_853_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        countWait_reg_470 = phitmp_reg_1062.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        countWait_reg_470 = ap_const_lv19_1;
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        idxCol_assign_reg_447 = idxCol_1_reg_1052.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        idxCol_assign_reg_447 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        idxRow_reg_436 = idxRow_1_reg_933.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        idxRow_reg_436 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        pixConvolved_assign_reg_458 = pixConvolved_2_reg_1057.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        pixConvolved_assign_reg_458 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if (esl_seteq<1,1,1>(ap_condition_337.read(), ap_const_boolean_1)) {
            reg_493 = lineBuff_val_0_q0.read();
        } else if (esl_seteq<1,1,1>(ap_condition_319.read(), ap_const_boolean_1)) {
            reg_493 = lineBuff_val_0_q1.read();
        }
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        col_assign_1_0_2_reg_992 = col_assign_1_0_2_fu_625_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond2_reg_897 = exitcond2_fu_498_p2.read();
        exitcond2_reg_897_pp0_iter1_reg = exitcond2_reg_897.read();
        exitcond2_reg_897_pp0_iter2_reg = exitcond2_reg_897_pp0_iter1_reg.read();
        or_cond_reg_916_pp0_iter1_reg = or_cond_reg_916.read();
        or_cond_reg_916_pp0_iter2_reg = or_cond_reg_916_pp0_iter1_reg.read();
        tmp_13_reg_938_pp0_iter1_reg = tmp_13_reg_938.read();
        tmp_13_reg_938_pp0_iter2_reg = tmp_13_reg_938_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        idxCol_1_reg_1052 = idxCol_1_fu_638_p3.read();
        phitmp_reg_1062 = phitmp_fu_651_p2.read();
        pixConvolved_2_reg_1057 = pixConvolved_2_fu_644_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_498_p2.read()))) {
        idxCol_reg_928 = idxCol_fu_554_p2.read();
        lineBuff_val_1_addr_reg_906 =  (sc_lv<9>) (tmp_s_fu_504_p1.read());
        lineBuff_val_2_addr_reg_911 =  (sc_lv<9>) (tmp_s_fu_504_p1.read());
        or_cond_reg_916 = or_cond_fu_542_p2.read();
        tmp_12_reg_922 = tmp_12_fu_548_p2.read();
        tmp_13_reg_938 = tmp_13_fu_574_p2.read();
        tmp_s_reg_901 = tmp_s_fu_504_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_498_p2.read()))) {
        idxRow_1_reg_933 = idxRow_1_fu_566_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        kernel_0_read_reg_977 = kernel_0.read();
        kernel_1_read_reg_987 = kernel_1.read();
        kernel_2_read_reg_997 = kernel_2.read();
        kernel_3_read_reg_1007 = kernel_3.read();
        kernel_4_read_reg_1017 = kernel_4.read();
        kernel_5_read_reg_1022 = kernel_5.read();
        kernel_6_read_reg_1032 = kernel_6.read();
        kernel_7_read_reg_1042 = kernel_7.read();
        kernel_8_read_reg_1047 = kernel_8.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        kernel_3_read_reg_1007_pp0_iter1_reg = kernel_3_read_reg_1007.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916.read()))) {
        lineBuff_val_1_load_1_reg_1077 = lineBuff_val_1_q1.read();
        lineBuff_val_2_load_1_reg_1092 = lineBuff_val_2_q1.read();
        lineBuff_val_2_load_2_reg_1097 = lineBuff_val_2_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916_pp0_iter1_reg.read()))) {
        lineBuff_val_1_load_3_reg_1107 = lineBuff_val_1_q1.read();
        tmp1_reg_1122 = grp_fu_859_p3.read();
        tmp8_reg_1117 = grp_fu_866_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp2_reg_1132 = grp_fu_874_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp7_reg_1127 = tmp7_fu_740_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916_pp0_iter1_reg.read()))) {
        tmp_5_reg_1142 = valOutput_fu_754_p2.read().range(15, 15);
        tmp_7_reg_1147 = valOutput_fu_754_p2.read().range(15, 3);
        valOutput_reg_1137 = valOutput_fu_754_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter2_reg.read()))) {
        tmp_data_V_reg_1152 = tmp_data_V_fu_840_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter2_reg.read()))) {
        tmp_dest_V_1_reg_423 = tmp_dest_V_reg_966_pp0_iter2_reg.read();
        tmp_id_V_1_reg_371 = tmp_id_V_reg_960_pp0_iter2_reg.read();
        tmp_keep_V_1_reg_410 = tmp_keep_V_reg_942_pp0_iter2_reg.read();
        tmp_strb_V_1_reg_397 = tmp_strb_V_reg_948_pp0_iter2_reg.read();
        tmp_user_V_1_reg_384 = tmp_user_V_reg_954_pp0_iter2_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_dest_V_reg_966 = inStream_V_dest_V_dout.read();
        tmp_id_V_reg_960 = inStream_V_id_V_dout.read();
        tmp_keep_V_reg_942 = inStream_V_keep_V_dout.read();
        tmp_strb_V_reg_948 = inStream_V_strb_V_dout.read();
        tmp_user_V_reg_954 = inStream_V_user_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_dest_V_reg_966_pp0_iter1_reg = tmp_dest_V_reg_966.read();
        tmp_dest_V_reg_966_pp0_iter2_reg = tmp_dest_V_reg_966_pp0_iter1_reg.read();
        tmp_id_V_reg_960_pp0_iter1_reg = tmp_id_V_reg_960.read();
        tmp_id_V_reg_960_pp0_iter2_reg = tmp_id_V_reg_960_pp0_iter1_reg.read();
        tmp_keep_V_reg_942_pp0_iter1_reg = tmp_keep_V_reg_942.read();
        tmp_keep_V_reg_942_pp0_iter2_reg = tmp_keep_V_reg_942_pp0_iter1_reg.read();
        tmp_strb_V_reg_948_pp0_iter1_reg = tmp_strb_V_reg_948.read();
        tmp_strb_V_reg_948_pp0_iter2_reg = tmp_strb_V_reg_948_pp0_iter1_reg.read();
        tmp_user_V_reg_954_pp0_iter1_reg = tmp_user_V_reg_954.read();
        tmp_user_V_reg_954_pp0_iter2_reg = tmp_user_V_reg_954_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916.read()))) {
        window_val_0_0_reg_1067 = window_val_0_0_fu_664_p2.read();
        window_val_1_1_reg_1082 = window_val_1_1_fu_683_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916_pp0_iter1_reg.read()))) {
        window_val_2_2_reg_1112 = window_val_2_2_fu_721_p2.read();
    }
}

void processImage::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void processImage::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void processImage::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void processImage::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void processImage::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[4];
}

void processImage::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[5];
}

void processImage::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V0_status.read()));
}

void processImage::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V0_status.read()));
}

void processImage::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_state10_pp0_stage2_iter2() {
    ap_block_state10_pp0_stage2_iter2 = (esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_state12() {
    ap_block_state12 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()));
}

void processImage::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_id_V0_status.read()));
}

void processImage::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state7_pp0_stage2_iter1() {
    ap_block_state7_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state8_pp0_stage0_iter2() {
    ap_block_state8_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_block_state9_pp0_stage1_iter2() {
    ap_block_state9_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void processImage::thread_ap_condition_319() {
    ap_condition_319 = (esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916.read()));
}

void processImage::thread_ap_condition_337() {
    ap_condition_337 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_916_pp0_iter1_reg.read()));
}

void processImage::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_498_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void processImage::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_847_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void processImage::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void processImage::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void processImage::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void processImage::thread_ap_phi_mux_countWait_phi_fu_474_p4() {
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_countWait_phi_fu_474_p4 = phitmp_reg_1062.read();
    } else {
        ap_phi_mux_countWait_phi_fu_474_p4 = countWait_reg_470.read();
    }
}

void processImage::thread_ap_phi_mux_idxCol_assign_phi_fu_451_p4() {
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_idxCol_assign_phi_fu_451_p4 = idxCol_1_reg_1052.read();
    } else {
        ap_phi_mux_idxCol_assign_phi_fu_451_p4 = idxCol_assign_reg_447.read();
    }
}

void processImage::thread_ap_phi_mux_idxRow_phi_fu_440_p4() {
    if ((esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_idxRow_phi_fu_440_p4 = idxRow_1_reg_933.read();
    } else {
        ap_phi_mux_idxRow_phi_fu_440_p4 = idxRow_reg_436.read();
    }
}

void processImage::thread_ap_phi_mux_pixConvolved_assign_phi_fu_462_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_897_pp0_iter1_reg.read()))) {
        ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 = pixConvolved_2_reg_1057.read();
    } else {
        ap_phi_mux_pixConvolved_assign_phi_fu_462_p4 = pixConvolved_assign_reg_458.read();
    }
}

void processImage::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_847_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void processImage::thread_col_assign_1_0_2_fu_625_p2() {
    col_assign_1_0_2_fu_625_p2 = (!ap_const_lv32_2.is_01() || !ap_phi_mux_pixConvolved_assign_phi_fu_462_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(ap_phi_mux_pixConvolved_assign_phi_fu_462_p4.read()));
}

void processImage::thread_countWait_2_fu_853_p2() {
    countWait_2_fu_853_p2 = (!countWait_1_reg_482.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(countWait_1_reg_482.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void processImage::thread_exitcond2_fu_498_p2() {
    exitcond2_fu_498_p2 = (!ap_phi_mux_countWait_phi_fu_474_p4.read().is_01() || !ap_const_lv19_40001.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_countWait_phi_fu_474_p4.read() == ap_const_lv19_40001);
}

void processImage::thread_exitcond_fu_847_p2() {
    exitcond_fu_847_p2 = (!countWait_1_reg_482.read().is_01() || !ap_const_lv10_201.is_01())? sc_lv<1>(): sc_lv<1>(countWait_1_reg_482.read() == ap_const_lv10_201);
}

void processImage::thread_grp_fu_859_p1() {
    grp_fu_859_p1 =  (sc_lv<8>) (grp_fu_859_p10.read());
}

void processImage::thread_grp_fu_859_p10() {
    grp_fu_859_p10 = esl_zext<16,8>(reg_493.read());
}

void processImage::thread_grp_fu_866_p1() {
    grp_fu_866_p1 =  (sc_lv<8>) (grp_fu_866_p10.read());
}

void processImage::thread_grp_fu_866_p10() {
    grp_fu_866_p10 = esl_zext<16,8>(lineBuff_val_2_load_1_reg_1092.read());
}

void processImage::thread_grp_fu_866_p2() {
    grp_fu_866_p2 = (!window_val_2_1_fu_708_p0.read().is_01() || !window_val_2_1_fu_708_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_2_1_fu_708_p0.read()) * sc_biguint<8>(window_val_2_1_fu_708_p1.read());
}

void processImage::thread_grp_fu_874_p1() {
    grp_fu_874_p1 =  (sc_lv<8>) (grp_fu_874_p10.read());
}

void processImage::thread_grp_fu_874_p10() {
    grp_fu_874_p10 = esl_zext<16,8>(reg_493.read());
}

void processImage::thread_grp_fu_881_p1() {
    grp_fu_881_p1 =  (sc_lv<8>) (grp_fu_881_p10.read());
}

void processImage::thread_grp_fu_881_p10() {
    grp_fu_881_p10 = esl_zext<16,8>(lineBuff_val_1_load_3_reg_1107.read());
}

void processImage::thread_grp_fu_889_p1() {
    grp_fu_889_p1 =  (sc_lv<8>) (grp_fu_889_p10.read());
}

void processImage::thread_grp_fu_889_p10() {
    grp_fu_889_p10 = esl_zext<16,8>(lineBuff_val_1_load_1_reg_1077.read());
}

void processImage::thread_icmp3_fu_536_p2() {
    icmp3_fu_536_p2 = (!tmp_4_fu_526_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_4_fu_526_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void processImage::thread_icmp_fu_520_p2() {
    icmp_fu_520_p2 = (!tmp_2_fu_510_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_2_fu_510_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void processImage::thread_idxCol_1_fu_638_p3() {
    idxCol_1_fu_638_p3 = (!tmp_12_reg_922.read()[0].is_01())? sc_lv<32>(): ((tmp_12_reg_922.read()[0].to_bool())? idxCol_reg_928.read(): ap_const_lv32_0);
}

void processImage::thread_idxCol_fu_554_p2() {
    idxCol_fu_554_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_idxCol_assign_phi_fu_451_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_idxCol_assign_phi_fu_451_p4.read()));
}

void processImage::thread_idxRow_1_fu_566_p3() {
    idxRow_1_fu_566_p3 = (!tmp_12_fu_548_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_12_fu_548_p2.read()[0].to_bool())? ap_phi_mux_idxRow_phi_fu_440_p4.read(): idxRow_2_fu_560_p2.read());
}

void processImage::thread_idxRow_2_fu_560_p2() {
    idxRow_2_fu_560_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_idxRow_phi_fu_440_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_idxRow_phi_fu_440_p4.read()));
}

void processImage::thread_inStream_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0))) {
        inStream_V_data_V_blk_n = inStream_V_data_V_empty_n.read();
    } else {
        inStream_V_data_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_data_V_read() {
    inStream_V_data_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_dest_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0))) {
        inStream_V_dest_V_blk_n = inStream_V_dest_V_empty_n.read();
    } else {
        inStream_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_dest_V_read() {
    inStream_V_dest_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_id_V0_status() {
    inStream_V_id_V0_status = (inStream_V_data_V_empty_n.read() & inStream_V_keep_V_empty_n.read() & inStream_V_strb_V_empty_n.read() & inStream_V_user_V_empty_n.read() & inStream_V_last_V_empty_n.read() & inStream_V_id_V_empty_n.read() & inStream_V_dest_V_empty_n.read());
}

void processImage::thread_inStream_V_id_V0_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        inStream_V_id_V0_update = ap_const_logic_1;
    } else {
        inStream_V_id_V0_update = ap_const_logic_0;
    }
}

void processImage::thread_inStream_V_id_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0))) {
        inStream_V_id_V_blk_n = inStream_V_id_V_empty_n.read();
    } else {
        inStream_V_id_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_id_V_read() {
    inStream_V_id_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_keep_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0))) {
        inStream_V_keep_V_blk_n = inStream_V_keep_V_empty_n.read();
    } else {
        inStream_V_keep_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_keep_V_read() {
    inStream_V_keep_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0))) {
        inStream_V_last_V_blk_n = inStream_V_last_V_empty_n.read();
    } else {
        inStream_V_last_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_last_V_read() {
    inStream_V_last_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_strb_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0))) {
        inStream_V_strb_V_blk_n = inStream_V_strb_V_empty_n.read();
    } else {
        inStream_V_strb_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_strb_V_read() {
    inStream_V_strb_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_inStream_V_user_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0))) {
        inStream_V_user_V_blk_n = inStream_V_user_V_empty_n.read();
    } else {
        inStream_V_user_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_inStream_V_user_V_read() {
    inStream_V_user_V_read = inStream_V_id_V0_update.read();
}

void processImage::thread_lineBuff_val_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        lineBuff_val_0_address0 =  (sc_lv<9>) (tmp_19_0_2_fu_670_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_0_address0 =  (sc_lv<9>) (tmp_3_fu_605_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        lineBuff_val_0_address0 =  (sc_lv<9>) (tmp_s_reg_901.read());
    } else {
        lineBuff_val_0_address0 = "XXXXXXXXX";
    }
}

void processImage::thread_lineBuff_val_0_address1() {
    lineBuff_val_0_address1 =  (sc_lv<9>) (tmp_19_0_1_fu_618_p1.read());
}

void processImage::thread_lineBuff_val_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_0_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_ce0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_0_ce1 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_we0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 =  (sc_lv<9>) (tmp_19_0_1_fu_618_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 = lineBuff_val_1_addr_reg_906.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 =  (sc_lv<9>) (tmp_s_fu_504_p1.read());
        } else {
            lineBuff_val_1_address0 = "XXXXXXXXX";
        }
    } else {
        lineBuff_val_1_address0 = "XXXXXXXXX";
    }
}

void processImage::thread_lineBuff_val_1_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        lineBuff_val_1_address1 =  (sc_lv<9>) (tmp_19_0_2_fu_670_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_1_address1 =  (sc_lv<9>) (tmp_3_fu_605_p1.read());
    } else {
        lineBuff_val_1_address1 = "XXXXXXXXX";
    }
}

void processImage::thread_lineBuff_val_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_1_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_ce0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_1_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_1_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_1_ce1 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_1_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_we0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 =  (sc_lv<9>) (tmp_19_0_1_fu_618_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 = lineBuff_val_2_addr_reg_911.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 =  (sc_lv<9>) (tmp_s_fu_504_p1.read());
        } else {
            lineBuff_val_2_address0 = "XXXXXXXXX";
        }
    } else {
        lineBuff_val_2_address0 = "XXXXXXXXX";
    }
}

void processImage::thread_lineBuff_val_2_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        lineBuff_val_2_address1 =  (sc_lv<9>) (tmp_19_0_2_fu_670_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_2_address1 =  (sc_lv<9>) (tmp_3_fu_605_p1.read());
    } else {
        lineBuff_val_2_address1 = "XXXXXXXXX";
    }
}

void processImage::thread_lineBuff_val_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_2_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_ce0 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_2_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_2_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_2_ce1 = ap_const_logic_0;
    }
}

void processImage::thread_lineBuff_val_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_897.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_2_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_we0 = ap_const_logic_0;
    }
}

void processImage::thread_or_cond_fu_542_p2() {
    or_cond_fu_542_p2 = (icmp_fu_520_p2.read() & icmp3_fu_536_p2.read());
}

void processImage::thread_outStream_V_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read())))) {
        outStream_V_data_V_blk_n = outStream_V_data_V_full_n.read();
    } else {
        outStream_V_data_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_data_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_data_V_din = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        outStream_V_data_V_din = tmp_data_V_reg_1152.read();
    } else {
        outStream_V_data_V_din =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void processImage::thread_outStream_V_data_V_write() {
    outStream_V_data_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_dest_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read())))) {
        outStream_V_dest_V_blk_n = outStream_V_dest_V_full_n.read();
    } else {
        outStream_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_dest_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_dest_V_din = tmp_dest_V_1_reg_423.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        outStream_V_dest_V_din = tmp_dest_V_reg_966_pp0_iter2_reg.read();
    } else {
        outStream_V_dest_V_din =  (sc_lv<6>) ("XXXXXX");
    }
}

void processImage::thread_outStream_V_dest_V_write() {
    outStream_V_dest_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_id_V1_status() {
    outStream_V_id_V1_status = (outStream_V_data_V_full_n.read() & outStream_V_keep_V_full_n.read() & outStream_V_strb_V_full_n.read() & outStream_V_user_V_full_n.read() & outStream_V_last_V_full_n.read() & outStream_V_id_V_full_n.read() & outStream_V_dest_V_full_n.read());
}

void processImage::thread_outStream_V_id_V1_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        outStream_V_id_V1_update = ap_const_logic_1;
    } else {
        outStream_V_id_V1_update = ap_const_logic_0;
    }
}

void processImage::thread_outStream_V_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read())))) {
        outStream_V_id_V_blk_n = outStream_V_id_V_full_n.read();
    } else {
        outStream_V_id_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_id_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_id_V_din = tmp_id_V_1_reg_371.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        outStream_V_id_V_din = tmp_id_V_reg_960_pp0_iter2_reg.read();
    } else {
        outStream_V_id_V_din =  (sc_lv<5>) ("XXXXX");
    }
}

void processImage::thread_outStream_V_id_V_write() {
    outStream_V_id_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_keep_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read())))) {
        outStream_V_keep_V_blk_n = outStream_V_keep_V_full_n.read();
    } else {
        outStream_V_keep_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_keep_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_keep_V_din = tmp_keep_V_1_reg_410.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        outStream_V_keep_V_din = tmp_keep_V_reg_942_pp0_iter2_reg.read();
    } else {
        outStream_V_keep_V_din =  (sc_lv<1>) ("X");
    }
}

void processImage::thread_outStream_V_keep_V_write() {
    outStream_V_keep_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_last_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read())))) {
        outStream_V_last_V_blk_n = outStream_V_last_V_full_n.read();
    } else {
        outStream_V_last_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_last_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_last_V_din = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        outStream_V_last_V_din = ap_const_lv1_0;
    } else {
        outStream_V_last_V_din =  (sc_lv<1>) ("X");
    }
}

void processImage::thread_outStream_V_last_V_write() {
    outStream_V_last_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_strb_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read())))) {
        outStream_V_strb_V_blk_n = outStream_V_strb_V_full_n.read();
    } else {
        outStream_V_strb_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_strb_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_strb_V_din = tmp_strb_V_1_reg_397.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        outStream_V_strb_V_din = tmp_strb_V_reg_948_pp0_iter2_reg.read();
    } else {
        outStream_V_strb_V_din =  (sc_lv<1>) ("X");
    }
}

void processImage::thread_outStream_V_strb_V_write() {
    outStream_V_strb_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_outStream_V_user_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read())))) {
        outStream_V_user_V_blk_n = outStream_V_user_V_full_n.read();
    } else {
        outStream_V_user_V_blk_n = ap_const_logic_1;
    }
}

void processImage::thread_outStream_V_user_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
        outStream_V_user_V_din = tmp_user_V_1_reg_384.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(tmp_13_reg_938_pp0_iter2_reg.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        outStream_V_user_V_din = tmp_user_V_reg_954_pp0_iter2_reg.read();
    } else {
        outStream_V_user_V_din =  (sc_lv<2>) ("XX");
    }
}

void processImage::thread_outStream_V_user_V_write() {
    outStream_V_user_V_write = outStream_V_id_V1_update.read();
}

void processImage::thread_p_neg_fu_780_p2() {
    p_neg_fu_780_p2 = (!ap_const_lv17_0.is_01() || !tmp_7_tr_fu_777_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_0) - sc_bigint<17>(tmp_7_tr_fu_777_p1.read()));
}

void processImage::thread_phitmp8_fu_832_p3() {
    phitmp8_fu_832_p3 = (!tmp_11_fu_824_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_11_fu_824_p3.read()[0].to_bool())? ap_const_lv8_0: tmp_10_fu_820_p1.read());
}

void processImage::thread_phitmp_fu_651_p2() {
    phitmp_fu_651_p2 = (!countWait_reg_470.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(countWait_reg_470.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void processImage::thread_pixConvolved_1_fu_631_p3() {
    pixConvolved_1_fu_631_p3 = (!or_cond_reg_916.read()[0].is_01())? sc_lv<32>(): ((or_cond_reg_916.read()[0].to_bool())? pixConvolved_fu_612_p2.read(): ap_phi_mux_pixConvolved_assign_phi_fu_462_p4.read());
}

void processImage::thread_pixConvolved_2_fu_644_p3() {
    pixConvolved_2_fu_644_p3 = (!tmp_12_reg_922.read()[0].is_01())? sc_lv<32>(): ((tmp_12_reg_922.read()[0].to_bool())? pixConvolved_1_fu_631_p3.read(): ap_const_lv32_0);
}

void processImage::thread_pixConvolved_fu_612_p2() {
    pixConvolved_fu_612_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_pixConvolved_assign_phi_fu_462_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_pixConvolved_assign_phi_fu_462_p4.read()));
}

void processImage::thread_tmp4_fu_750_p2() {
    tmp4_fu_750_p2 = (!tmp1_reg_1122.read().is_01() || !grp_fu_889_p3.read().is_01())? sc_lv<16>(): (sc_bigint<16>(tmp1_reg_1122.read()) + sc_bigint<16>(grp_fu_889_p3.read()));
}

void processImage::thread_tmp7_fu_740_p2() {
    tmp7_fu_740_p2 = (!tmp8_reg_1117.read().is_01() || !grp_fu_881_p3.read().is_01())? sc_lv<16>(): (sc_bigint<16>(tmp8_reg_1117.read()) + sc_bigint<16>(grp_fu_881_p3.read()));
}

void processImage::thread_tmp_10_cast_fu_809_p1() {
    tmp_10_cast_fu_809_p1 = esl_zext<15,14>(tmp_8_fu_800_p1.read());
}

void processImage::thread_tmp_10_fu_820_p1() {
    tmp_10_fu_820_p1 = valOutput_1_fu_813_p3.read().range(8-1, 0);
}

void processImage::thread_tmp_11_fu_824_p3() {
    tmp_11_fu_824_p3 = valOutput_1_fu_813_p3.read().range(14, 14);
}

void processImage::thread_tmp_12_fu_548_p2() {
    tmp_12_fu_548_p2 = (!ap_phi_mux_idxCol_assign_phi_fu_451_p4.read().is_01() || !ap_const_lv32_1FF.is_01())? sc_lv<1>(): (sc_bigint<32>(ap_phi_mux_idxCol_assign_phi_fu_451_p4.read()) < sc_bigint<32>(ap_const_lv32_1FF));
}

void processImage::thread_tmp_13_fu_574_p2() {
    tmp_13_fu_574_p2 = (!ap_phi_mux_countWait_phi_fu_474_p4.read().is_01() || !ap_const_lv19_201.is_01())? sc_lv<1>(): (sc_biguint<19>(ap_phi_mux_countWait_phi_fu_474_p4.read()) > sc_biguint<19>(ap_const_lv19_201));
}

void processImage::thread_tmp_19_0_1_fu_618_p1() {
    tmp_19_0_1_fu_618_p1 = esl_zext<64,32>(pixConvolved_fu_612_p2.read());
}

void processImage::thread_tmp_19_0_2_fu_670_p1() {
    tmp_19_0_2_fu_670_p1 = esl_zext<64,32>(col_assign_1_0_2_reg_992.read());
}

void processImage::thread_tmp_2_fu_510_p4() {
    tmp_2_fu_510_p4 = ap_phi_mux_idxRow_phi_fu_440_p4.read().range(31, 1);
}

void processImage::thread_tmp_3_cast_fu_796_p1() {
    tmp_3_cast_fu_796_p1 = esl_zext<15,14>(tmp_6_fu_786_p4.read());
}

void processImage::thread_tmp_3_fu_605_p1() {
    tmp_3_fu_605_p1 = esl_zext<64,32>(ap_phi_mux_pixConvolved_assign_phi_fu_462_p4.read());
}

void processImage::thread_tmp_4_fu_526_p4() {
    tmp_4_fu_526_p4 = ap_phi_mux_idxCol_assign_phi_fu_451_p4.read().range(31, 1);
}

void processImage::thread_tmp_6_fu_786_p4() {
    tmp_6_fu_786_p4 = p_neg_fu_780_p2.read().range(16, 3);
}

void processImage::thread_tmp_7_tr_fu_777_p1() {
    tmp_7_tr_fu_777_p1 = esl_sext<17,16>(valOutput_reg_1137.read());
}

void processImage::thread_tmp_8_fu_800_p1() {
    tmp_8_fu_800_p1 = esl_sext<14,13>(tmp_7_reg_1147.read());
}

void processImage::thread_tmp_9_fu_803_p2() {
    tmp_9_fu_803_p2 = (!ap_const_lv15_0.is_01() || !tmp_3_cast_fu_796_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(ap_const_lv15_0) - sc_biguint<15>(tmp_3_cast_fu_796_p1.read()));
}

void processImage::thread_tmp_data_V_fu_840_p3() {
    tmp_data_V_fu_840_p3 = (!or_cond_reg_916_pp0_iter2_reg.read()[0].is_01())? sc_lv<8>(): ((or_cond_reg_916_pp0_iter2_reg.read()[0].to_bool())? phitmp8_fu_832_p3.read(): ap_const_lv8_0);
}

void processImage::thread_tmp_s_fu_504_p1() {
    tmp_s_fu_504_p1 = esl_zext<64,32>(ap_phi_mux_idxCol_assign_phi_fu_451_p4.read());
}

void processImage::thread_valOutput_1_fu_813_p3() {
    valOutput_1_fu_813_p3 = (!tmp_5_reg_1142.read()[0].is_01())? sc_lv<15>(): ((tmp_5_reg_1142.read()[0].to_bool())? tmp_9_fu_803_p2.read(): tmp_10_cast_fu_809_p1.read());
}

void processImage::thread_valOutput_fu_754_p2() {
    valOutput_fu_754_p2 = (!tmp7_reg_1127.read().is_01() || !tmp4_fu_750_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp7_reg_1127.read()) + sc_biguint<16>(tmp4_fu_750_p2.read()));
}

void processImage::thread_window_val_0_0_fu_664_p0() {
    window_val_0_0_fu_664_p0 = kernel_0_read_reg_977.read();
}

void processImage::thread_window_val_0_0_fu_664_p1() {
    window_val_0_0_fu_664_p1 =  (sc_lv<8>) (window_val_0_0_fu_664_p10.read());
}

void processImage::thread_window_val_0_0_fu_664_p10() {
    window_val_0_0_fu_664_p10 = esl_zext<16,8>(lineBuff_val_0_q0.read());
}

void processImage::thread_window_val_0_0_fu_664_p2() {
    window_val_0_0_fu_664_p2 = (!window_val_0_0_fu_664_p0.read().is_01() || !window_val_0_0_fu_664_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_0_0_fu_664_p0.read()) * sc_biguint<8>(window_val_0_0_fu_664_p1.read());
}

void processImage::thread_window_val_1_1_fu_683_p0() {
    window_val_1_1_fu_683_p0 = kernel_4_read_reg_1017.read();
}

void processImage::thread_window_val_1_1_fu_683_p1() {
    window_val_1_1_fu_683_p1 =  (sc_lv<8>) (window_val_1_1_fu_683_p10.read());
}

void processImage::thread_window_val_1_1_fu_683_p10() {
    window_val_1_1_fu_683_p10 = esl_zext<16,8>(lineBuff_val_1_q0.read());
}

void processImage::thread_window_val_1_1_fu_683_p2() {
    window_val_1_1_fu_683_p2 = (!window_val_1_1_fu_683_p0.read().is_01() || !window_val_1_1_fu_683_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_1_1_fu_683_p0.read()) * sc_biguint<8>(window_val_1_1_fu_683_p1.read());
}

void processImage::thread_window_val_2_1_fu_708_p0() {
    window_val_2_1_fu_708_p0 = kernel_7_read_reg_1042.read();
}

void processImage::thread_window_val_2_1_fu_708_p1() {
    window_val_2_1_fu_708_p1 =  (sc_lv<8>) (window_val_2_1_fu_708_p10.read());
}

void processImage::thread_window_val_2_1_fu_708_p10() {
    window_val_2_1_fu_708_p10 = esl_zext<16,8>(lineBuff_val_2_load_2_reg_1097.read());
}

void processImage::thread_window_val_2_2_fu_721_p0() {
    window_val_2_2_fu_721_p0 = kernel_8_read_reg_1047.read();
}

void processImage::thread_window_val_2_2_fu_721_p1() {
    window_val_2_2_fu_721_p1 =  (sc_lv<8>) (window_val_2_2_fu_721_p10.read());
}

void processImage::thread_window_val_2_2_fu_721_p10() {
    window_val_2_2_fu_721_p10 = esl_zext<16,8>(lineBuff_val_2_q1.read());
}

void processImage::thread_window_val_2_2_fu_721_p2() {
    window_val_2_2_fu_721_p2 = (!window_val_2_2_fu_721_p0.read().is_01() || !window_val_2_2_fu_721_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_2_2_fu_721_p0.read()) * sc_biguint<8>(window_val_2_2_fu_721_p1.read());
}

void processImage::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_498_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_498_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_847_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_847_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_V_id_V1_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void processImage::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_data_V_dout\" :  \"" << inStream_V_data_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_data_V_empty_n\" :  \"" << inStream_V_data_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_data_V_read\" :  \"" << inStream_V_data_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_keep_V_dout\" :  \"" << inStream_V_keep_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_keep_V_empty_n\" :  \"" << inStream_V_keep_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_keep_V_read\" :  \"" << inStream_V_keep_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_strb_V_dout\" :  \"" << inStream_V_strb_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_strb_V_empty_n\" :  \"" << inStream_V_strb_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_strb_V_read\" :  \"" << inStream_V_strb_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_user_V_dout\" :  \"" << inStream_V_user_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_user_V_empty_n\" :  \"" << inStream_V_user_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_user_V_read\" :  \"" << inStream_V_user_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_last_V_dout\" :  \"" << inStream_V_last_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_last_V_empty_n\" :  \"" << inStream_V_last_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_last_V_read\" :  \"" << inStream_V_last_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_id_V_dout\" :  \"" << inStream_V_id_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_id_V_empty_n\" :  \"" << inStream_V_id_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_id_V_read\" :  \"" << inStream_V_id_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_dest_V_dout\" :  \"" << inStream_V_dest_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_dest_V_empty_n\" :  \"" << inStream_V_dest_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_dest_V_read\" :  \"" << inStream_V_dest_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_data_V_din\" :  \"" << outStream_V_data_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_data_V_full_n\" :  \"" << outStream_V_data_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_data_V_write\" :  \"" << outStream_V_data_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_keep_V_din\" :  \"" << outStream_V_keep_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_keep_V_full_n\" :  \"" << outStream_V_keep_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_keep_V_write\" :  \"" << outStream_V_keep_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_strb_V_din\" :  \"" << outStream_V_strb_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_strb_V_full_n\" :  \"" << outStream_V_strb_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_strb_V_write\" :  \"" << outStream_V_strb_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_user_V_din\" :  \"" << outStream_V_user_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_user_V_full_n\" :  \"" << outStream_V_user_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_user_V_write\" :  \"" << outStream_V_user_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_last_V_din\" :  \"" << outStream_V_last_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_last_V_full_n\" :  \"" << outStream_V_last_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_last_V_write\" :  \"" << outStream_V_last_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_id_V_din\" :  \"" << outStream_V_id_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_id_V_full_n\" :  \"" << outStream_V_id_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_id_V_write\" :  \"" << outStream_V_id_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_dest_V_din\" :  \"" << outStream_V_dest_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_V_dest_V_full_n\" :  \"" << outStream_V_dest_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_V_dest_V_write\" :  \"" << outStream_V_dest_V_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_0\" :  \"" << kernel_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_1\" :  \"" << kernel_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_2\" :  \"" << kernel_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_3\" :  \"" << kernel_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_4\" :  \"" << kernel_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_5\" :  \"" << kernel_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_6\" :  \"" << kernel_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_7\" :  \"" << kernel_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_8\" :  \"" << kernel_8.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

